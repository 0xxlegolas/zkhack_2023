// Copyright 2023 RISC Zero, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code is automatically generated

#include "ffi.h"
#include "fp.h"

#include <array>
#include <cassert>
#include <stdexcept>

// clang-format off
namespace risc0::circuit::recursion {

#if defined(__clang__)
#pragma clang diagnostic ignored "-Wunused-parameter"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

Fp step_exec(void* ctx, HostBridge host, size_t steps, size_t cycle, Fp** args) {
  size_t mask = steps - 1;
  std::array<Fp, 96> host_args;
  std::array<Fp, 32> host_outs;
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x0(1834032191);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x1(59464014);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x2(907814040);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x3(1391943352);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x4(1798855156);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x5(380456673);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x6(1391460744);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x7(1696888736);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x8(1309658936);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x9(929596179);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x10(1132077509);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x11(624114440);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x12(793850646);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x13(1952019185);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x14(1993096748);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x15(515978499);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x16(1058217614);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x17(12957455);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x18(1553556268);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x19(416046430);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x20(1751162754);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x21(1448673405);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x22(2012392591);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x23(355437819);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x24(1293198963);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x25(1918054725);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x26(1581851666);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x27(1578770925);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x28(1866146847);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x29(1780784152);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x30(934457714);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x31(1700741200);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x32(692473153);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x33(1379103502);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x34(393514799);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x35(650771377);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x36(809439039);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x37(1512213220);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x38(979800079);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x39(1810723648);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x40(1340431606);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x41(681371394);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x42(179428605);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x43(346090118);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x44(136594048);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x45(1460667993);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x46(1263592494);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x47(1865718341);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x48(1612680980);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x49(1672548300);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x50(1985939751);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x51(1811607728);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x52(897065819);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x53(1827686012);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x54(1959676483);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x55(334127050);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x56(156469270);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x57(1092890763);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x58(1615472233);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x59(1587311805);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x60(962210341);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x61(1563898493);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x62(2266234);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x63(1879264522);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x64(839314334);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x65(1178855339);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x66(316305800);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x67(1937944934);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x68(1910462930);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x69(201197938);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x70(55952975);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x71(1289731867);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x72(1961702488);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x73(295972446);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x74(1744918372);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x75(917859333);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x76(671580315);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x77(409825477);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x78(1443924139);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x79(696359768);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x80(1035115994);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x81(1136732652);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x82(1914243229);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x83(102578321);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x84(942097076);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x85(294174883);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x86(310496821);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x87(672829143);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x88(736575392);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x89(112948747);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x90(1331586806);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x91(702541117);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x92(1804259176);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x93(680170885);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x94(1722080488);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x95(1429227701);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x96(490393656);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x97(1745586226);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x98(18347382);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x99(960651250);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x100(914981810);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x101(544780145);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x102(1793810979);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x103(526138057);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x104(1088693374);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x105(648087696);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x106(10722724);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x107(976792453);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x108(1970339692);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x109(328729095);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x110(1817975832);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x111(872216480);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x112(1399664108);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x113(1422331654);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x114(65354341);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x115(191758736);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x116(1688305942);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x117(1670464899);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x118(1214670268);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x119(1455497832);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x120(1943337497);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x121(570643006);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x122(1328037594);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x123(797038693);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x124(508044530);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x125(1157564765);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x126(166513626);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x127(1196962506);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x128(1100673529);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x129(136761497);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x130(1885571220);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x131(931904973);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x132(1960562248);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x133(86417250);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x134(240131738);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x135(1039435657);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x136(892749166);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x137(1427441462);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x138(1973466087);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x139(1559900323);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x140(1532998239);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x141(998952332);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x142(936537974);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x143(1339009034);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x144(1252256313);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x145(984778593);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x146(1631666716);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x147(1537516666);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x148(701013294);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x149(782830409);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x150(563672984);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x151(1596227266);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x152(931022366);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x153(1212236360);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x154(25232342);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x155(1344169136);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x156(14194516);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x157(1693800704);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x158(1428006940);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x159(1970562396);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x160(1729775587);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x161(15199943);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x162(1046220623);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x163(889992723);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x164(740028079);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x165(1003320531);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x166(43552263);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x167(1290902310);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x168(809566478);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x169(311188802);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x170(208496172);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x171(640656388);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x172(293416091);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x173(528827786);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x174(1209144761);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x175(1486103095);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x176(1915817603);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x177(1372487648);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x178(398894151);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x179(770645810);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x180(1953338291);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x181(1350817032);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x182(515200200);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x183(689789081);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x184(683461761);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x185(923265226);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x186(1730234146);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x187(1794603056);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x188(1792342559);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x189(1518425477);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x190(851191454);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x191(164307041);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x192(1766818662);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x193(1783069466);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x194(1323759867);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x195(805893909);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x196(1022857473);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x197(1813151395);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x198(718381384);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x199(1245280393);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x200(867092257);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x201(908798127);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x202(1360402326);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x203(795866038);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x204(1461533741);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x205(1739712247);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x206(148685014);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x207(164609106);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x208(800024787);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x209(1676170105);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x210(1957193788);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x211(1175072791);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x212(1851110093);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x213(517383517);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x214(355995305);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x215(916667669);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x216(1709123991);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x217(1896447576);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x218(1679465517);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x219(631912168);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x220(1775986863);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x221(561539965);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x222(1760949602);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x223(513617438);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x224(208369279);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x225(1182396016);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x226(1769527435);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x227(1760715486);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x228(921627555);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x229(1246047312);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x230(1122250914);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x231(1445820259);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x232(1737909641);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x233(1686601425);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x234(1684204779);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x235(1740844755);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x236(1295018500);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x237(1532098511);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x238(704073140);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x239(1241896884);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x240(1028729437);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x241(1478943865);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x242(1531857482);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x243(869663770);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x244(1952698770);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x245(766441970);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x246(1116439419);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x247(1474957213);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x248(1950073689);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x249(120264196);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x250(87058376);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x251(1443160146);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x252(678393499);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x253(1740854129);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x254(344967644);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x255(1168720110);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x256(1324563199);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x257(905496482);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x258(1969949872);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x259(958643417);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x260(1081421166);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x261(162936079);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x262(506813851);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x263(1353304100);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x264(1190821154);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x265(1972835707);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x266(829188500);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x267(1298561834);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x268(1574841615);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x269(1690371145);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x270(377311764);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x271(1193768868);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x272(1238649029);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x273(1216963969);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x274(331760373);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x275(1637575787);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x276(389529385);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x277(570184328);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x278(733640566);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x279(1735633885);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x280(729306946);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x281(872433542);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x282(626688639);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x283(1995139842);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x284(1508690239);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x285(398101744);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x286(674176250);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x287(1523070393);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x288(930117253);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x289(2002440549);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x290(1322090824);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x291(929488295);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x292(220135230);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x293(1644050802);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x294(676875963);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x295(1504641274);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x296(1262386680);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x297(1186470738);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x298(480440290);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x299(1612481660);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x300(1471614295);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x301(470608834);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x302(376445260);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x303(1352368865);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x304(210394937);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x305(311519707);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x306(1517341);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x307(483374233);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x308(68652968);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x309(45013639);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x310(1879215980);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x311(879631056);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x312(149485030);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x313(474597993);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x314(1412665602);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x315(368947973);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x316(221759032);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x317(556703548);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x318(1834523874);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x319(1752847225);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x320(822118992);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x321(1176902081);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x322(1986061975);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x323(417514349);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x324(104590050);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x325(1268356965);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x326(664478846);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x327(1529204495);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x328(1744270271);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x329(1463755399);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x330(1027729081);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x331(743493114);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x332(248885735);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x333(653648653);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x334(1220289269);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x335(1775273957);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x336(1789813270);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x337(441979569);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x338(894791836);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x339(686368514);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x340(718330176);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x341(1917222409);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x342(1021537687);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x343(907243255);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x344(1554913832);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x345(272634240);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x346(1026100881);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x347(1314599949);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x348(1667996533);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x349(1342542203);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x350(1761188723);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x351(142463653);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x352(964585817);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x353(557125254);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x354(1908476056);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x355(1072326242);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x356(935250382);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x357(865676468);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x358(591805340);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x359(1625110392);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x360(6444290);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x361(1180956623);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x362(1258774706);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x363(1199076121);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x364(912098158);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x365(941328049);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x366(539697012);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x367(616733877);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x368(1821228907);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x369(689468405);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x370(625650978);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x371(531486332);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x372(1910515567);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x373(223647644);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x374(376467712);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x375(1357194850);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x376(459628218);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x377(1754935602);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x378(210731190);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x379(933790408);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x380(141432185);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x381(1018532575);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x382(896915268);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x383(178621115);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x384(376253042);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x385(55772069);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x386(496634586);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x387(193362752);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x388(628415953);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x389(364077741);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x390(1133598812);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x391(1040487770);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x392(1394882896);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x393(425066608);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x394(665373970);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x395(1050336742);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x396(1414112546);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x397(1338877551);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x398(1075144618);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x399(1747369995);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x400(367657077);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x401(1023743188);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x402(661011082);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x403(1034170485);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x404(976824348);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x405(99656842);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x406(1805350963);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x407(1358966983);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x408(476111008);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x409(364275252);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x410(945376111);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x411(27660678);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x412(393956613);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x413(309473762);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x414(1330866088);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x415(376149446);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x416(219836731);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x417(25981267);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x418(1764646267);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x419(583524329);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x420(1567652203);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x421(193651590);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x422(1723475818);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x423(1103141058);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x424(652120900);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x425(455577881);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x426(162175606);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x427(867035550);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x428(753237532);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x429(688101474);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x430(575252321);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x431(1058738334);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x432(2000204022);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x433(1225909091);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x434(1684745365);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x435(1099507612);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x436(1700683535);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x437(1277264364);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x438(1891478062);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x439(743980953);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x440(967852056);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x441(1731734840);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x442(1747469575);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x443(1115482682);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x444(1071274292);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x445(1751021162);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x446(1590752355);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x447(1170524344);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x448(1466114586);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x449(1093341303);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x450(1922132774);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x451(897992210);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x452(1003404830);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x453(123753491);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x454(1118785497);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x455(1322049417);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x456(1897585120);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x457(1804323249);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x458(41729077);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x459(1890017770);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x460(820596532);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x461(1342708941);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x462(200881716);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x463(142216313);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x464(474520711);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x465(1013872664);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x466(1529565548);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x467(487453519);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x468(386988688);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x469(934423618);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x470(1306680535);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x471(1205610612);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x472(1165683144);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x473(1659792510);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x474(1209362682);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x475(1875300719);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x476(1004491646);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x477(616129260);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x478(1545835734);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x479(1030501993);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x480(1920503134);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x481(299947464);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x482(1589521705);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x483(1411135107);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x484(1644208140);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x485(1972009537);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x486(994022144);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x487(285279004);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x488(786101570);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x489(816803826);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x490(693908515);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x491(1587690134);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x492(103480947);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x493(999424180);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x494(193736824);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x495(1871820490);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x496(1619349609);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x497(432445929);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x498(668429167);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x499(1427018534);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x500(1457951938);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x501(1338032481);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x502(1421323944);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x503(343388082);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x504(1174223201);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x505(418063222);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x506(1991981575);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x507(867296379);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x508(446252367);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x509(1968349007);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x510(797456943);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x511(211749702);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x512(875406606);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x513(1714512097);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x514(1759084365);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x515(167967298);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x516(1358957795);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x517(531292303);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x518(806775776);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x519(1091852442);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x520(1453595258);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x521(369247342);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x522(397115882);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x523(1818161488);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x524(759589356);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x525(40287748);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x526(781169276);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x527(1003684938);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x528(445442172);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x529(1184067987);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x530(589726147);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x531(1127942187);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x532(814586597);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x533(725120386);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x534(1140478033);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x535(574261822);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x536(566965037);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x537(421229506);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x538(354802226);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x539(737050091);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x540(692820719);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x541(1393207609);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x542(1048900616);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x543(427481554);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x544(940648721);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x545(1473113381);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x546(393514871);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x547(856769922);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x548(1166299117);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x549(1738856638);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x550(960397446);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x551(154102861);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x552(354710557);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x553(1674172544);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x554(1974869862);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x555(726292286);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x556(1803620427);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x557(1653850327);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x558(1634122356);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x559(802677298);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x560(944072958);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x561(722342497);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x562(1160563627);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x563(1789500990);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x564(1656083330);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x565(1242053257);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x566(97437282);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x567(1427635350);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x568(426716360);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x569(1247633653);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x570(41913607);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x571(1396459491);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x572(1187021427);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x573(363201259);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x574(1606596631);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x575(999216989);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x576(773977311);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x577(1162533443);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x578(528487757);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x579(505709590);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x580(1169485965);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x581(648769804);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x582(921663529);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x583(58128710);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x584(362040772);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x585(1052997216);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x586(726839873);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x587(1645330629);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x588(1283510850);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x589(644428515);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x590(732806973);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x591(70145773);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x592(1382848471);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x593(136286341);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x594(564677291);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x595(445970225);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x596(1262517560);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x597(1246067957);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x598(619865236);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x599(292156878);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x600(105293507);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x601(1526091710);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x602(166621818);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x603(137964941);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x604(1295604043);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x605(619582753);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x606(528198414);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x607(1029775184);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x608(1264322168);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x609(1655326868);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x610(1448371690);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x611(515551017);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x612(326199873);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x613(312785282);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x614(240958707);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x615(135532951);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x616(1506421455);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x617(99470113);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x618(1887821693);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x619(151864369);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x620(417592422);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x621(1051418564);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x622(713304703);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x623(295771230);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x624(1323131632);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x625(1540381960);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x626(1024366856);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x627(1710697084);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x628(543105248);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x629(1604319003);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x630(1799096581);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x631(337044152);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x632(1161958809);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x633(158841909);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x634(307949131);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x635(1836070618);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x636(1292997516);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x637(158564704);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x638(841955170);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x639(1338570833);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x640(593663352);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x641(389758235);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x642(1819959536);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x643(1523051877);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x644(923825458);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x645(1666221563);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x646(1591007792);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x647(1196414310);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x648(744408503);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x649(289148667);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x650(890812330);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x651(1860500909);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x652(1231332926);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x653(356196294);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x654(1667166735);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x655(622505701);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x656(1334044687);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x657(1515023569);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x658(325945765);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x659(41943927);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x660(1266383648);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x661(532773667);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x662(1350472986);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x663(1196314432);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x664(349009707);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x665(462108576);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x666(1291751870);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x667(1493224865);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x668(1567058518);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x669(369820451);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x670(1698723318);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x671(905785270);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x672(1471394796);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x673(402184834);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x674(1676755818);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x675(1240628843);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x676(329716212);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x677(1047769547);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x678(503745128);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x679(932486507);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x680(1193186335);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x681(937400678);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x682(1335812490);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x683(575139328);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x684(1744469806);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x685(1342626352);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x686(374209156);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x687(1793265041);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x688(851844396);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x689(1695354544);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x690(1751275836);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x691(882907579);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x692(230194744);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x693(1788016457);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x694(508541427);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x695(843159469);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x696(1571611814);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x697(1587211213);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x698(976712251);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x699(447560065);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x700(186801654);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x701(1384508413);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x702(318057864);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x703(1637436040);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x704(71034070);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x705(1471464198);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x706(1165482423);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x707(1297654567);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x708(178093988);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x709(1886370376);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x710(1644175221);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x711(1794810485);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x712(273925160);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x713(889481608);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x714(584287967);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x715(1811832606);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x716(791210292);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x717(1605766029);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x718(444835325);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x719(1273141785);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x720(919808922);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x721(1231427917);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x722(177160470);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x723(1906421967);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x724(882441369);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x725(1023830919);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x726(1501554737);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x727(1086893355);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x728(465193110);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x729(1602791102);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x730(1190238733);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x731(1818356192);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x732(1713933089);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x733(98369426);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x734(1459672213);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x735(1091115539);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x736(1709856577);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x737(1453964826);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x738(1095803923);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x739(523668021);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x740(1678666775);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x741(1415266992);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x742(1480321145);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x743(1054880965);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x744(271901755);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x745(802300667);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x746(371025241);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x747(1718368436);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x748(1665343676);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x749(616016492);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x750(1997223237);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x751(774597440);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x752(1200792160);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x753(661448802);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x754(1601184847);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x755(1203663944);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x756(1091140301);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x757(1314728826);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x758(964852482);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x759(21274530);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x760(86819170);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x761(1351656737);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x762(261645523);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x763(1782719931);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x764(1148015202);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x765(41295736);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x766(145455918);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x767(537652418);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x768(1244742352);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x769(1097908548);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x770(1979060965);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x771(468638411);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x772(1017771462);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x773(527062283);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x774(1418767367);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x775(209668300);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x776(1972436976);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x777(1020656521);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x778(1982619422);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x779(1601861383);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x780(65439080);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x781(1883618711);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x782(116339744);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x783(425437686);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x784(831322746);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x785(888721928);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x786(1073165458);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x787(698981502);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x788(590694506);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x789(1183241932);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x790(1958611809);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x791(1316997120);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x792(1040603441);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x793(1912382185);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x794(1671479624);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x795(1592100499);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x796(221875199);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x797(957989736);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x798(695255743);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x799(932119450);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x800(708088738);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x801(1783979541);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x802(722233767);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x803(1689220476);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x804(75319587);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x805(1894245234);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x806(872895928);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x807(1278299736);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x808(1722496258);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x809(1624216734);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x810(539079469);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x811(255462123);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x812(552406993);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x813(1577470532);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x814(75477951);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x815(1223853447);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x816(407069545);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x817(624593597);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x818(1467167827);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x819(1964083080);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x820(726510077);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x821(1057007998);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x822(1762329435);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x823(26902258);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x824(968259783);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x825(90133973);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x826(375551188);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x827(685967836);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x828(1493610922);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x829(1746184679);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x830(296320722);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x831(474600838);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x832(206868190);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x833(1441573934);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x834(332628599);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x835(1151763288);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x836(1778763071);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x837(705800771);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x838(1470840011);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x839(1780693151);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x840(783438712);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x841(561479103);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x842(998177827);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x843(1364094316);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x844(1085968423);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x845(95829571);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x846(474516166);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x847(1607790883);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x848(1270322179);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x849(1027915666);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x850(1412770101);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x851(498566344);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x852(1831244652);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x853(1144818415);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x854(1092938765);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x855(340306609);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x856(1972841327);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x857(1248374126);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x858(1755722767);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x859(1289672669);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x860(579564780);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x861(1719857091);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x862(1636201234);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x863(674372021);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x864(1365005089);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x865(864248462);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x866(1757900107);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x867(1784102896);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x868(58967533);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x869(1160702503);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x870(224986724);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x871(1326586800);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x872(783654135);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x873(233057457);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x874(1553157972);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x875(417092793);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x876(445275436);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x877(820483461);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x878(388898008);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x879(704019417);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x880(1623304293);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x881(1304495314);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x882(409205668);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x883(1025285752);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x884(794439618);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x885(1896845430);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x886(1542375671);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x887(201362201);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x888(862711531);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x889(1094700537);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x890(277497104);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x891(852863304);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x892(465442277);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x893(1982143134);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x894(1082255016);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x895(1201861446);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x896(335128663);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x897(757015442);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x898(1196813143);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x899(632813018);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x900(1771526689);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x901(429886573);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x902(1021559481);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x903(111417490);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x904(1812236984);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x905(200265242);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x906(936935532);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x907(1300745514);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x908(1066187663);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x909(1480680831);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x910(1840406230);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x911(1295430250);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x912(1366918843);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x913(1613907483);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x914(588663956);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x915(689901527);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x916(372646712);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x917(1684718440);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x918(278730501);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x919(614798028);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x920(133409444);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x921(1270253043);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x922(1308707679);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x923(1380019428);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x924(1791617642);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x925(1636115025);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x926(137390500);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x927(1845978444);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x928(1054279765);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x929(1360592699);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x930(827116892);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x931(557261951);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x932(988382461);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x933(485266735);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x934(928669003);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x935(799446299);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x936(1566943768);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x937(1106715476);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x938(1246664689);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x939(998994582);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x940(360133087);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x941(986163373);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x942(1279149021);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x943(1820779866);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x944(266153092);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x945(872257220);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x946(1573616868);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x947(361624932);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x948(1543064235);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x949(582134265);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x950(337191282);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x951(1933039628);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x952(92028704);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x953(1106633750);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x954(952968364);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x955(1041176219);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x956(1445532646);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x957(1244091780);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x958(376632234);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x959(784773859);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x960(1882006591);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x961(980226890);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x962(20266677);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x963(1809585053);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x964(1873312410);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x965(1391062950);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x966(1976282335);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x967(1655562420);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x968(1412166650);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x969(1796169452);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x970(1251014055);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x971(1066239921);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x972(569352120);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x973(687074998);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x974(31528616);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x975(1342122154);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x976(1792305421);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x977(32432776);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x978(1035264069);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x979(1876587815);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x980(247111740);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x981(309630957);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x982(684518258);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x983(601235545);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x984(1455692929);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x985(1055728150);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x986(155944597);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x987(359292216);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x988(415936970);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x989(183737928);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x990(1659681241);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x991(1032745127);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x992(162960179);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x993(251441097);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x994(144965604);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x995(840267575);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x996(1873708844);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x997(2003756839);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x998(464014622);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x999(1050911138);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x1000(670003454);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x1001(1395544968);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x1002(1467324644);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x1003(639705472);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x1004(1996288702);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x1005(1847258944);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x1006(1071816217);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x1007(1982818373);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x1008(530137759);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x1009(1673218064);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x1010(1557292774);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1011(1215895734);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1012(28821638);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1013(904216917);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1014(64253306);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1015(539173778);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1016(1144795798);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1017(45564829);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1018(760747423);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1019(1879098210);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1020(1058817060);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1021(78364031);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1022(1917466214);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1023(1360879961);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1024(1378844296);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1025(1231918042);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1026(263362892);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1027(680015770);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1028(109619403);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1029(1655110280);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1030(915217592);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1031(1769968570);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1032(574009660);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1033(1014462637);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x1034(1179903085);
  // loc("zirgen/circuit/recursion/poseidon.cpp":140:19)
  Fp x1035(264564686);
  // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
  Fp x1036(233792060);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1037(742236370);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1038(431411585);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1039(1053290329);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1040(967594771);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1041(849113638);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1042(1958853154);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1043(628631331);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1044(1058383076);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1045(1396075137);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1046(287237109);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1047(1490813326);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1048(45357530);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1049(1260795047);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1050(1406901333);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1051(1406639340);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1052(1103363587);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1053(1783155395);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1054(1067614906);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1055(1310052935);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1056(1907503053);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1057(754203349);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1058(1851484880);
  // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
  Fp x1059(760145299);
  // loc("zirgen/circuit/recursion/poseidon.cpp":133:16)
  Fp x1060(1434615067);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1061(1385747493);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1062(1988496500);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1063(960100433);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1064(826614995);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1065(1918417253);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1066(645379454);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1067(119991329);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1068(219145185);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1069(383376703);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1070(561201225);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1071(765211397);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1072(1637181719);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1073(752390552);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1074(942984969);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1075(809497129);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1076(814363224);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1077(1681937618);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1078(1657970843);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1079(1321435567);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1080(1262767669);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1081(714210414);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1082(31824416);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1083(1243271684);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1084(284371944);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1085(1136058475);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1086(271455261);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1087(22037604);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1088(1324651044);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1089(617804947);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1090(745501197);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1091(556028381);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1092(941330156);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1093(497425722);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1094(141181187);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1095(1054298294);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1096(575003062);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1097(700574048);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1098(1931008349);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1099(280134228);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1100(1762640140);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1101(514541659);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1102(1948293199);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1103(1516105999);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1104(1630040154);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1105(249732571);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1106(529992325);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1107(462864995);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1108(373450946);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1109(1842391661);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1110(231454090);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1111(971477640);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1112(797539932);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1113(662006069);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1114(1247688822);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1115(458192039);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1116(1139448063);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1117(1660655466);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1118(1722587823);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1119(8826341);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1120(337105505);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1121(611808877);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1122(873617963);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1123(229232994);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1124(497774434);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1125(152738969);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1126(969243475);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1127(1659205666);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1128(489963266);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1129(668849890);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1130(144408568);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1131(769442362);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1132(640690891);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1133(159782962);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1134(809143517);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1135(1493072095);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1136(708684599);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1137(812713657);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1138(898639079);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1139(755651081);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1140(793776001);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1141(1598263160);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1142(1947057234);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1143(1881131658);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1144(1805181153);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1145(509707440);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1146(1216091240);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1147(1570236112);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1148(1730846005);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1149(1345845565);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1150(226630710);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1151(1027578383);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1152(1943839993);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1153(1149710234);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1154(272790997);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1155(1541715905);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1156(542265815);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1157(1909286880);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1158(1103607466);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1159(1595186056);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1160(908126191);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1161(1331571125);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1162(108485536);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1163(1184986251);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1164(107240261);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1165(260204523);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1166(1714924826);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1167(534712842);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1168(1771796028);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1169(1499572142);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1170(1732327382);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1171(1769699049);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1172(94510690);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1173(763990762);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1174(602466088);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1175(1293632596);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1176(1045517904);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1177(1591936100);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1178(1195959539);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1179(509207379);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1180(232745773);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1181(1109514468);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1182(145543448);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1183(814317316);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1184(735818858);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1185(1130490063);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1186(151608947);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1187(322245577);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1188(137841967);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1189(236546380);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1190(1511100533);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1191(38759994);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1192(1152460694);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1193(979767569);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1194(886920643);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1195(843201941);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1196(607605279);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1197(1682686472);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1198(1402954804);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1199(421950605);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1200(1124966285);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1201(700440480);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1202(714701341);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1203(690869025);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1204(1068460235);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1205(304889610);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1206(1668615428);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1207(1255792379);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1208(965576172);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1209(1025827354);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1210(138069691);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1211(563155269);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1212(63802604);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1213(1274101343);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1214(794237353);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1215(1576818241);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1216(981783477);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1217(200251994);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1218(1154496067);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1219(995227692);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1220(851948826);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1221(1811464567);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1222(355658370);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1223(654169618);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1224(1261422451);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1225(31982861);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1226(1322553889);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1227(914197768);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1228(1813271339);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1229(1624200944);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1230(1780183037);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1231(609229389);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1232(1629932939);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1233(203409125);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1234(1423944231);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1235(318685960);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1236(366194723);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1237(505768545);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1238(828940582);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1239(212075810);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1240(1143185391);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1241(1151388760);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1242(1790619094);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1243(1480863522);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1244(445483602);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1245(1292224053);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1246(1526452952);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1247(168539932);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1248(229377381);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1249(1744988839);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1250(1149605981);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1251(831149826);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1252(284973936);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1253(356775904);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1254(502714883);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1255(1286509601);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1256(1422043831);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1257(155930855);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1258(1882256960);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1259(131979665);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1260(1240345529);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1261(321526708);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1262(1829297749);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1263(746901040);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1264(694055390);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1265(2010474436);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1266(1142080976);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1267(1152171943);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1268(657649580);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1269(1719349484);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1270(845030554);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1271(593196406);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1272(600051347);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1273(110917150);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1274(1960601141);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1275(811599119);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1276(1068180756);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1277(191895865);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1278(444512764);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1279(1336413007);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1280(1633407245);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1281(1753052526);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1282(894778930);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1283(1506605111);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1284(1895154484);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1285(1608028215);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1286(148552915);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1287(1839122854);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1288(482151711);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1289(1270882010);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1290(1731519860);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1291(981911769);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1292(206500905);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1293(791697120);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1294(1629534029);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1295(1205258889);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1296(421481798);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1297(138576652);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1298(1120487372);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1299(911674714);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1300(541318233);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1301(1377113837);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1302(97516577);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1303(1479353673);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1304(472101249);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1305(1386499035);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1306(970794600);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1307(855368108);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1308(312486401);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1309(976785104);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1310(897971545);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1311(689058589);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1312(350487588);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1313(190708086);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1314(1840078807);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1315(401898692);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1316(271061364);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1317(879224996);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1318(687401811);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1319(1642987994);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1320(543941903);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1321(229340330);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1322(2004961426);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1323(1309248966);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1324(1620086301);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1325(316425160);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1326(1946343686);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1327(17926444);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1328(1141372446);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1329(1232327576);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1330(1339728192);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1331(1387462213);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1332(1129034525);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1333(666133133);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1334(49460951);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1335(926456831);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1336(378350405);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1337(658714928);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1338(238262915);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1339(512434446);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1340(2008809141);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1341(538275738);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1342(709707157);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1343(1741354736);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1344(1112576727);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1345(1889996724);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1346(1932908957);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1347(1274358197);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1348(1976832102);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1349(632717065);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1350(1013151273);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1351(535399546);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1352(647226472);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1353(97875426);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1354(1067562295);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1355(793349164);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1356(1850557048);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1357(1602552915);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1358(927825815);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1359(415545459);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1360(1713895504);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1361(1707000073);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1362(1152667661);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1363(1562427802);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1364(1098148562);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1365(985349043);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1366(1961090126);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1367(1802892594);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1368(953106461);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1369(343402985);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1370(574686047);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1371(1142621223);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1372(1006876694);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1373(1873966117);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1374(770490773);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1375(314798111);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1376(1174534860);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1377(1608206354);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1378(200145966);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1379(783890041);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1380(1946465201);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1381(1829131785);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1382(416425859);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1383(273598161);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1384(1548756236);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1385(12883884);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1386(1634161639);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1387(1592967389);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1388(362196834);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1389(1961171353);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1390(909128869);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1391(1558066003);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1392(1785309336);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1393(1135579740);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1394(1927138778);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1395(1211694615);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1396(891309674);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1397(1134497153);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1398(1338329776);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1399(1675597246);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1400(725848626);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1401(1239566651);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1402(1611306046);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1403(1521775421);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1404(137996350);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1405(310505601);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1406(725163071);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1407(654705192);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1408(1462916218);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1409(1804105938);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1410(623961023);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1411(1260081383);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1412(127238979);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1413(67884704);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1414(659943942);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1415(597791506);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1416(1619944847);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1417(1156932153);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1418(1995219087);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1419(1006422609);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1420(1182388549);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1421(262917699);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1422(1432721871);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1423(1778055650);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1424(253599814);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1425(506579838);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1426(358112394);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1427(81314026);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1428(1341455971);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1429(1881078466);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1430(1078685317);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1431(1324287363);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1432(1472928607);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1433(607703738);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1434(1963041111);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1435(1044858419);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1436(1034086535);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1437(753100044);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1438(707452573);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1439(1180184861);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1440(1651625477);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1441(430729854);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1442(1790265579);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1443(1662983738);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1444(1053279324);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1445(462853865);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1446(544113294);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1447(1066229307);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1448(277567257);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1449(587006450);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1450(1535388525);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1451(1568593805);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1452(1273746199);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1453(1462440202);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1454(1670461429);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1455(778778171);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1456(799420406);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1457(1600640925);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1458(1671893002);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1459(173386198);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1460(366763432);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1461(1487670259);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1462(1774728588);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1463(523753160);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1464(1733146213);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1465(1013800344);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1466(302675835);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1467(213468846);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1468(123407768);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1469(1822719204);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1470(1852769265);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1471(222037200);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1472(1403114470);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1473(1520514639);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1474(426780012);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1475(1128909474);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1476(1375322270);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1477(1240773447);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1478(1766592680);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1479(167791179);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1480(1631325356);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1481(1745295913);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1482(1603642305);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1483(1693438351);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1484(232678143);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1485(969511666);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1486(823560407);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1487(1680175078);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1488(1465903033);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1489(1906121865);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1490(1793448463);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1491(680129389);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1492(1597184390);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1493(1921273441);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1494(1843212768);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1495(1937589329);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1496(1090037408);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1497(1293586711);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1498(1682864042);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1499(1568906823);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1500(1540441878);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1501(499659986);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1502(1258761516);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1503(1671041290);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1504(365189370);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1505(88262679);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1506(1144675512);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1507(547878866);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1508(918403340);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1509(381814846);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1510(891890253);
  // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
  Fp x1511(785414610);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1512(5825232);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1513(1767104014);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1514(366099121);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1515(380486328);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1516(744340358);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1517(195777752);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1518(657381314);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1519(1236508918);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1520(1901487609);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1521(1014444958);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1522(544854891);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1523(1420822701);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1524(946081960);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1525(776251812);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1526(1045733275);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1527(470881196);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1528(579641568);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1529(66239197);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1530(1281490323);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1531(1312616712);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1532(948918970);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1533(914477287);
  // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
  Fp x1534(1181753480);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1535(297709282);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1536(1702317526);
  // loc("zirgen/circuit/recursion/poseidon.cpp":119:21)
  Fp x1537(497520322);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1538(1982393493);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1539(862495875);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1540(930749189);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1541(447555988);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1542(159933002);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1543(1910423126);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1544(1977801989);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1545(1099252725);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1546(339076259);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1547(1584033957);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1548(1714300831);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1549(1079030649);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1550(603052045);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1551(1622328571);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1552(1042229509);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1553(1908416316);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1554(1004756277);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1555(1549062383);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1556(1315866222);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1557(623051854);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1558(1409868548);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1559(162510541);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1560(486486841);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1561(1608853840);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1562(1774979787);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1563(538103555);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1564(1237946275);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1565(1424297384);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1566(861766924);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1567(552696906);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1568(437636391);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1569(946500736);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1570(1905100877);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1571(1215259350);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1572(507484918);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1573(855276054);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1574(1913448800);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1575(1664590951);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1576(849442650);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1577(217046702);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1578(1718547577);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1579(142102402);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1580(1593112576);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1581(1257820264);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1582(1334953001);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1583(27129487);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1584(353638884);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1585(1147522062);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1586(1255733430);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1587(1103537534);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1588(1291790245);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1589(989176635);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1590(1807253439);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1591(1199646756);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1592(1781980094);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1593(241306552);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1594(1738923932);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1595(1736121148);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1596(273790406);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1597(1507936940);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1598(65771057);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1599(886333754);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1600(1239734761);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1601(1687379185);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1602(1061145335);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1603(242313101);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1604(1221257987);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1605(1150912935);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1606(366122795);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1607(283076917);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1608(51256176);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1609(1917549072);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1610(979641589);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1611(258112136);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1612(172614232);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1613(1201063290);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1614(296949829);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1615(783994008);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1616(306391314);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1617(395622276);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1618(697434228);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1619(485391603);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1620(1647670797);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1621(1997503974);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1622(53211633);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1623(761600655);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1624(53007114);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1625(716894289);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1626(1481753234);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1627(1470213001);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1628(1269493554);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1629(897025192);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1630(1459837508);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1631(186507834);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1632(1338899225);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1633(1282239129);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1634(705285120);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1635(1297716477);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1636(1740472809);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1637(1737016378);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1638(1959272838);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1639(1535232125);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1640(1454563174);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1641(686842369);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1642(1837486239);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1643(1791226258);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1644(204228775);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1645(622609176);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1646(1748671772);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1647(1316928927);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1648(588764636);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1649(1339793538);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1650(1582346377);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1651(1729552513);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1652(1718628547);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1653(1518763784);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1654(879695426);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1655(1813576382);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1656(427731030);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1657(1989924532);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1658(700962576);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1659(656057743);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1660(825405577);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1661(1170029417);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1662(1743259203);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1663(893626516);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1664(342857858);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1665(1917861751);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1666(1229946045);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1667(242120003);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1668(1290028279);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1669(1333667262);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1670(126680411);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1671(293115906);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1672(608401422);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1673(540703332);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1674(1119603897);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1675(883532894);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1676(1587822577);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1677(1845603984);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1678(1627457601);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1679(1095002134);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1680(128479034);
  // loc("zirgen/circuit/recursion/poseidon.cpp":79:34)
  Fp x1681(695835963);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1682(405262907);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1683(445250277);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1684(1795898368);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1685(1972473225);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1686(1777508114);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1687(167012547);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1688(105918967);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1689(480994682);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1690(890505021);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1691(756393954);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1692(1640744449);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1693(955984941);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1694(792478511);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1695(1387530748);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1696(1532995811);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1697(1103112553);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1698(1871229157);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1699(1837873800);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1700(293107396);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1701(1536568126);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1702(1860706443);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1703(1053485006);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1704(700195557);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1705(377590652);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1706(666370052);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1707(576613066);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1708(1577135488);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1709(915216261);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1710(939127081);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1711(1846249113);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1712(311045100);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1713(640825323);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1714(805749276);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1715(1506286284);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1716(1642333739);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1717(636800916);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1718(1952848464);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1719(924584605);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1720(1970421616);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1721(420424550);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1722(318232168);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1723(96862345);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1724(296277642);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1725(487159821);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1726(1365309965);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1727(750860471);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1728(397851562);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1729(1191359148);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1730(1687188001);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1731(1229192332);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1732(444945790);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1733(11216905);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1734(666789407);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1735(1550093141);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1736(1825314401);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1737(473674409);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1738(1610804988);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1739(1319416990);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1740(1032191625);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1741(1341747980);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1742(601479432);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1743(1696349102);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1744(1744310098);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1745(1619931039);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1746(1612781790);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1747(718454937);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1748(1353089754);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1749(1201554227);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1750(88205077);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1751(352277625);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1752(554781301);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1753(547696523);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1754(1003719904);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1755(1614403919);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1756(1225882743);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1757(533260681);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1758(1029572383);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1759(26260275);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1760(1406692304);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1761(664094865);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1762(189089772);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1763(180376006);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1764(1858424673);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1765(478844361);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1766(697859653);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1767(793476499);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1768(109241620);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1769(630386285);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1770(1219680617);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1771(1738985393);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1772(655881523);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1773(454522703);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1774(1424795696);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1775(381204201);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1776(190443007);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1777(1235878775);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1778(314464781);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1779(687019100);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1780(1477963677);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1781(1862614450);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1782(224153857);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1783(148690512);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1784(1260919387);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1785(1841544153);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1786(1206609292);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1787(583467679);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1788(1965185793);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1789(790951096);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1790(1493717949);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1791(1079297487);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1792(74004742);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1793(31228815);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1794(1308092714);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1795(1250425178);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1796(1255150785);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1797(1785057197);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1798(1318856168);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1799(867468028);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1800(338272569);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1801(1222490496);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1802(786040474);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1803(110982851);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1804(1312621090);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1805(1708211140);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1806(429292305);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1807(1030236328);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1808(1425962023);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1809(225837155);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1810(787366707);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1811(266973961);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1812(950129195);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1813(1134639362);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1814(950059751);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1815(1946275373);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1816(1771790144);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1817(736873507);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1818(248949863);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1819(885160342);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1820(1828693360);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1821(499063891);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1822(594795950);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1823(149552539);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1824(2001948975);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1825(730780941);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1826(1879332606);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1827(1802512771);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1828(1061326658);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1829(1463686656);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1830(1041006272);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1831(1089605333);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1832(339098406);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1833(32944814);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1834(2001840449);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1835(863676756);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1836(1140222531);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1837(1863575494);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1838(138812370);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1839(853788549);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1840(895650045);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1841(732314143);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1842(1257603048);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1843(1283886106);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1844(1496851510);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1845(810145172);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1846(1248010960);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1847(777199848);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1848(1720881914);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1849(1665292653);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1850(1014708824);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1851(1122239108);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1852(1682051811);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1853(559740320);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1854(182417268);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1855(1908118589);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1856(182121887);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1857(1372603039);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1858(1930344061);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1859(269636899);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1860(1485381549);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1861(1108262415);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1862(496934168);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1863(1544347754);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1864(906071962);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1865(633145153);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1866(1243629562);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1867(838178237);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1868(732971223);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1869(1326813520);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1870(956857617);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1871(1149742430);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1872(989386173);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1873(6984353);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1874(1544915308);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1875(405224837);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1876(505220088);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1877(1090163100);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1878(576943785);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1879(194158674);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1880(886788193);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1881(1973659762);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1882(618494871);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1883(458495324);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1884(554618895);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1885(620902960);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1886(1218606135);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1887(102214306);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1888(270701444);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1889(1538717495);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1890(1695909404);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1891(1726574014);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1892(804862196);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1893(267322913);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1894(1285001440);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1895(694252941);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1896(172021880);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1897(912757376);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1898(1004951993);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1899(1113742750);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1900(1417112429);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1901(447820605);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1902(556534783);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1903(1676784126);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1904(1452216987);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1905(1003838164);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1906(606681042);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1907(1842511362);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1908(1852451428);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1909(108818022);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1910(1935568870);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1911(1478109177);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1912(217987573);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1913(146719768);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1914(1165097670);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1915(820817296);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1916(480901410);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1917(1405268671);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1918(1640928173);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1919(1405793383);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1920(1828590865);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1921(867232631);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1922(1045774209);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1923(954754448);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1924(488485640);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1925(1603153488);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1926(1844346316);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1927(1369533166);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1928(894997613);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1929(786016615);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1930(714803609);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1931(689683192);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1932(1394570886);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1933(1939972337);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1934(855615948);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1935(2005835488);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1936(1657836345);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1937(1244411993);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1938(1408157519);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1939(1377820617);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1940(1492641702);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1941(272758994);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1942(1074585532);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1943(979591428);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1944(1738662902);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1945(509515690);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1946(524534338);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1947(1936468541);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1948(1538284646);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1949(1762388394);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1950(781656811);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1951(641761128);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1952(130677688);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1953(1591071909);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1954(1766745325);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1955(1886695054);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1956(615812805);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1957(1029340448);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1958(1156522478);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1959(394627710);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1960(806724402);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1961(442281591);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1962(1799794328);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1963(1610944564);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1964(894848920);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1965(188937496);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1966(956156416);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1967(1980077187);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1968(452813812);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1969(1096523108);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1970(763193969);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1971(63270235);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1972(1761991666);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1973(1681739269);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1974(1353595960);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1975(652196420);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1976(1497458122);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1977(1984569779);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1978(1495659171);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1979(1351211554);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1980(1333622442);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1981(219399076);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1982(856907908);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1983(690281572);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1984(1662817942);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1985(877445033);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1986(1958729676);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1987(1851849987);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1988(1595475530);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1989(1102175905);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1990(1735136690);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1991(161927282);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1992(148717887);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1993(1518032784);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1994(523947210);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1995(1912495394);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1996(858339715);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1997(1889990328);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1998(997259576);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x1999(111018403);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2000(1945093828);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2001(210439173);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2002(319684947);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2003(955426529);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2004(336834677);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2005(22357931);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2006(1627047790);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2007(1474806144);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2008(635920423);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2009(703056349);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2010(1141035970);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2011(1529840902);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2012(1422813223);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2013(923678452);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2014(884818862);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2015(1521139546);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2016(1624133242);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2017(1009947700);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2018(1181944224);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2019(1706834612);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2020(574701017);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2021(972358828);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2022(1414086992);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2023(972763420);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2024(1527680681);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2025(323157041);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2026(1738544773);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2027(1883970277);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2028(1150796128);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2029(312408361);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2030(313735625);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2031(609724838);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2032(1453084370);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2033(480278373);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2034(768083427);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2035(986405731);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2036(1967829766);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2037(1302583732);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2038(903327636);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2039(1265184976);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2040(675549392);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2041(1892990345);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2042(1689809181);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2043(289460537);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2044(599304967);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2045(746929089);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2046(958574117);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2047(1194681835);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2048(1766462629);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2049(801552119);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2050(353454830);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2051(947131295);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2052(1126958916);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2053(1272039009);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2054(1293936293);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2055(634466254);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2056(972370981);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2057(238496784);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2058(1857874472);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2059(1747354184);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2060(233067406);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2061(1764289324);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2062(451206296);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2063(1114675506);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2064(444561944);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2065(1514721120);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2066(1875895448);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2067(1828270988);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2068(1086046011);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2069(1055452550);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2070(1528984434);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2071(604257454);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2072(949166349);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2073(1751287175);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2074(66451863);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2075(1418570097);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2076(904436543);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2077(982380557);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2078(282460629);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2079(726524111);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2080(936363339);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2081(1321072920);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2082(1624604994);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2083(661478238);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2084(926528721);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2085(1784440779);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2086(55114456);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2087(670350700);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2088(692185335);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2089(915734724);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2090(1572421398);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2091(736472604);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2092(1944309032);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2093(1954584988);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2094(674193400);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2095(1990890082);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2096(533577850);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2097(673091872);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2098(1778158747);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2099(903110147);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2100(1370812791);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2101(1927118820);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2102(1824846158);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2103(1351594388);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2104(256571034);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2105(455159853);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2106(1919470959);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2107(1374034227);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2108(870459109);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2109(120942526);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2110(1422550389);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2111(1643778654);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2112(168211025);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2113(27280307);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2114(633823673);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2115(795314073);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2116(1987492448);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2117(1225576599);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2118(1571811429);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2119(1667983427);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2120(803214451);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2121(679278283);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2122(1523325919);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2123(1407029387);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2124(665386001);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2125(1672295590);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2126(1062124713);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2127(1887143173);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2128(259471849);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2129(420110805);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2130(1112031315);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2131(27002951);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2132(198190675);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2133(1480416927);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2134(1025874533);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2135(818782714);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2136(1698772485);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2137(1771684114);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2138(1239803740);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2139(724982042);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2140(340099303);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2141(1821095278);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2142(1323156025);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2143(739318749);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2144(1468273893);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2145(1102486893);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2146(986720350);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2147(647441343);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2148(123725931);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2149(382594307);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2150(726152558);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2151(1906907543);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2152(1928013200);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2153(1578431918);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2154(570739732);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2155(1727437509);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2156(1330731507);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2157(1597216916);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2158(510414795);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2159(1458457879);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2160(1602372304);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2161(1046238189);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2162(305858974);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2163(1176657132);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2164(1870434948);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2165(1241236065);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2166(1254707151);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2167(1255067853);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2168(880501047);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2169(1147047857);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2170(997169008);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2171(757939784);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2172(1325243596);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2173(680253944);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2174(453202984);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2175(472779195);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2176(1123302431);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2177(630472158);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2178(599047326);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2179(1885419819);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2180(1693312473);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2181(1161579682);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2182(1313595994);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2183(355753896);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2184(143037732);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2185(1930485397);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2186(88752048);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2187(421221846);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2188(81160067);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2189(860669599);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2190(392943938);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2191(216885729);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2192(360017305);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2193(237969);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2194(1591588956);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2195(1934021039);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2196(74252928);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2197(412659791);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2198(1515690475);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2199(764614412);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2200(1507382868);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2201(1507310988);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2202(974854188);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2203(1363270952);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2204(1649717194);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2205(732304549);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2206(1561619478);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2207(1687932734);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2208(1667245692);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2209(229075283);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2210(922084880);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2211(106189022);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2212(1892372966);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2213(26652223);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2214(675822513);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2215(1365655071);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2216(1165584115);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2217(1463814263);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2218(1320148764);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2219(1004902154);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2220(1658530301);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2221(134503494);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2222(1818349672);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2223(644311628);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2224(1169364590);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2225(419387114);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2226(369219819);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2227(1896430955);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2228(903163908);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2229(734809842);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2230(1503609338);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2231(725198640);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2232(576924517);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2233(467790361);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2234(704681371);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2235(14997823);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2236(1508537932);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2237(937199544);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2238(424966321);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2239(39992173);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2240(590427919);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2241(215632861);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2242(1331887980);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2243(582774106);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2244(1190785002);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2245(657390254);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2246(606724055);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2247(1606397409);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2248(81303453);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2249(1237391902);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2250(984196225);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2251(981461577);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2252(1283037370);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2253(1300552385);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2254(746672677);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2255(132890210);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2256(1540555896);
  // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
  Fp x2257(153481303);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2258(831813382);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2259(1421525369);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2260(1751797115);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2261(1964135730);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2262(525458520);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2263(638242172);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2264(1307439985);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2265(343354132);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2266(1389166148);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2267(1660766320);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2268(1464793095);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2269(1180307149);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2270(1930780904);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2271(1066694495);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2272(1773108264);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2273(1004040026);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2274(815798990);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2275(454905424);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2276(118043943);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2277(157582794);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2278(246143118);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2279(314968988);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2280(127253399);
  // loc("zirgen/circuit/recursion/poseidon.cpp":30:38)
  Fp x2281(262278199);
  // loc("zirgen/circuit/recursion/poseidon.cpp":22:28)
  Fp x2282(943718400);
  // loc("zirgen/circuit/recursion/sha.cpp":179:15)
  Fp x2283(268435454);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2284(1761607679);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2285(1073741824);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2286(1509949437);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2287(536870912);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2288(1006632953);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2289(268435456);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2290(2013265906);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2291(134217728);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2292(2013265891);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2293(67108864);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2294(2013265861);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2295(33554432);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2296(2013265801);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2297(16777216);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2298(2013265681);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2299(8388608);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2300(2013265441);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2301(4194304);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2302(2013264961);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2303(2097152);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2304(2013264001);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2305(1048576);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2306(2013262081);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2307(524288);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2308(2013258241);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2309(262144);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2310(2013250561);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2311(131072);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2312(2013235201);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2313(2013204481);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2314(32768);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2315(2013143041);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2316(16384);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2317(2013020161);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2318(8192);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2319(2012774401);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2320(4096);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2321(2012282881);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2322(2048);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2323(2011299841);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2324(1024);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2325(2009333761);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2326(512);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2327(2005401601);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2328(256);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2329(1997537281);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2330(128);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2331(1981808641);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2332(64);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2333(1950351361);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2334(32);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2335(1887436801);
  // loc("zirgen/circuit/recursion/bits.cpp":75:39)
  Fp x2336(16);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2337(1761607681);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2338(1509949441);
  // loc("zirgen/circuit/recursion/bits.cpp":75:46)
  Fp x2339(1006632961);
  // loc("zirgen/circuit/recursion/micro.cpp":109:17)
  Fp x2340(65536);
  // loc("zirgen/circuit/recursion/micro.cpp":40:30)
  Fp x2341(2013265910);
  // loc("zirgen/circuit/recursion/micro.cpp":40:30)
  Fp x2342(11);
  // loc("./zirgen/components/onehot.h":37:32)
  Fp x2343(10);
  // loc("./zirgen/components/onehot.h":37:32)
  Fp x2344(9);
  // loc("./zirgen/components/onehot.h":37:32)
  Fp x2345(8);
  // loc("./zirgen/components/onehot.h":37:32)
  Fp x2346(7);
  // loc("./zirgen/components/onehot.h":37:32)
  Fp x2347(6);
  // loc("./zirgen/components/onehot.h":37:32)
  Fp x2348(5);
  // loc("./zirgen/components/onehot.h":37:32)
  Fp x2349(4);
  // loc("./zirgen/components/onehot.h":37:32)
  Fp x2350(3);
  // loc("./zirgen/components/onehot.h":37:32)
  Fp x2351(2);
  // loc("./zirgen/components/onehot.h":37:32)
  Fp x2352(1);
  // loc("zirgen/circuit/recursion/micro.cpp":151:46)
  Fp x2353(0);
  // loc("top(recursion::Top)/code(recursion::Code)/select(OneHot)/micro_ops(Reg)"("./zirgen/components/mux.h":49:25))
  auto x2354 = args[0][1 * steps + ((cycle - 0) & mask)];
  assert(x2354 != Fp::invalid());
  if (x2354 != 0) {
    // loc("top(recursion::Top)/code(recursion::Code)/write_addr(Reg)"("zirgen/circuit/recursion/top.cpp":22:49))
    auto x2355 = args[0][0 * steps + ((cycle - 0) & mask)];
    assert(x2355 != Fp::invalid());
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/micro_ops(recursion::MicroInsts)/inst[0](recursion::MicroInst)/opcode(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x2356 = args[0][7 * steps + ((cycle - 0) & mask)];
    assert(x2356 != Fp::invalid());
    {
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2357 = (x2356 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][90 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2357);
        reg = x2357;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2358 = x2356 - x2352;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2359 = (x2358 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][91 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2359);
        reg = x2359;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2360 = x2356 - x2351;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2361 = (x2360 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][92 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2361);
        reg = x2361;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2362 = x2356 - x2350;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2363 = (x2362 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][93 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2363);
        reg = x2363;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2364 = x2356 - x2349;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2365 = (x2364 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][94 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2365);
        reg = x2365;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2366 = x2356 - x2348;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2367 = (x2366 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][95 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2367);
        reg = x2367;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2368 = x2356 - x2347;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2369 = (x2368 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][96 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2369);
        reg = x2369;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2370 = x2356 - x2346;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2371 = (x2370 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][97 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2371);
        reg = x2371;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2372 = x2356 - x2345;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2373 = (x2372 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2373);
        reg = x2373;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2374 = x2356 - x2344;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2375 = (x2374 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2375);
        reg = x2375;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2376 = x2356 - x2343;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2377 = (x2376 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][100 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2377);
        reg = x2377;
      }
    }
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[0](recursion::MicroOp)/decode(OneHot)/add(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2378 = args[2][91 * steps + ((cycle - 0) & mask)];
    assert(x2378 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[0](recursion::MicroOp)/decode(OneHot)/sub(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2379 = args[2][92 * steps + ((cycle - 0) & mask)];
    assert(x2379 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[0](recursion::MicroOp)/decode(OneHot)/mul(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2380 = args[2][93 * steps + ((cycle - 0) & mask)];
    assert(x2380 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[0](recursion::MicroOp)/decode(OneHot)/inv(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2381 = args[2][94 * steps + ((cycle - 0) & mask)];
    assert(x2381 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[0](recursion::MicroOp)/decode(OneHot)/eq(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2382 = args[2][95 * steps + ((cycle - 0) & mask)];
    assert(x2382 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[0](recursion::MicroOp)/decode(OneHot)/read_iop_header(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2383 = args[2][96 * steps + ((cycle - 0) & mask)];
    assert(x2383 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[0](recursion::MicroOp)/decode(OneHot)/read_iop_body(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2384 = args[2][97 * steps + ((cycle - 0) & mask)];
    assert(x2384 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[0](recursion::MicroOp)/decode(OneHot)/mix_rng(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2385 = args[2][98 * steps + ((cycle - 0) & mask)];
    assert(x2385 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[0](recursion::MicroOp)/decode(OneHot)/select(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2386 = args[2][99 * steps + ((cycle - 0) & mask)];
    assert(x2386 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[0](recursion::MicroOp)/decode(OneHot)/extract(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2387 = args[2][100 * steps + ((cycle - 0) & mask)];
    assert(x2387 != Fp::invalid());
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/micro_ops(recursion::MicroInsts)/inst[0](recursion::MicroInst)/operand[0](Reg)"("zirgen/circuit/recursion/micro.cpp":14:17))
    auto x2388 = args[0][8 * steps + ((cycle - 0) & mask)];
    assert(x2388 != Fp::invalid());
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/micro_ops(recursion::MicroInsts)/inst[0](recursion::MicroInst)/operand[1](Reg)"("zirgen/circuit/recursion/micro.cpp":15:17))
    auto x2389 = args[0][9 * steps + ((cycle - 0) & mask)];
    assert(x2389 != Fp::invalid());
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/micro_ops(recursion::MicroInsts)/inst[0](recursion::MicroInst)/operand[2](Reg)"("zirgen/circuit/recursion/micro.cpp":16:17))
    auto x2390 = args[0][10 * steps + ((cycle - 0) & mask)];
    assert(x2390 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[0](recursion::MicroOp)/decode(OneHot)/constop(Reg)"("zirgen/circuit/recursion/micro.cpp":19:44))
    auto x2391 = args[2][90 * steps + ((cycle - 0) & mask)];
    assert(x2391 != Fp::invalid());
    if (x2391 != 0) {
      host_args.at(0) = x2388;
      host_args.at(1) = x2389;
      host_args.at(2) = x2390;
      host_args.at(3) = x2353;
      host(ctx, "log", "CONST: %e", host_args.data(), 4, host_outs.data(), 0);
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][5 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][6 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][7 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][8 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][9 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][12 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][13 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][14 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2355);
        reg = x2355;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2388);
        reg = x2388;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2389);
        reg = x2389;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2390);
        reg = x2390;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x2392 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x2392 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2393 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x2393 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2394 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x2394 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2395 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x2395 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2396 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x2396 != Fp::invalid());
        host_args.at(0) = x2392;
        host_args.at(1) = x2393;
        host_args.at(2) = x2394;
        host_args.at(3) = x2395;
        host_args.at(4) = x2396;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
    }
    if (x2378 != 0) {
      {
        host_args.at(0) = x2388;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2397 = host_outs.at(0);
        auto x2398 = host_outs.at(1);
        auto x2399 = host_outs.at(2);
        auto x2400 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2397);
          reg = x2397;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2398);
          reg = x2398;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2399);
          reg = x2399;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2400);
          reg = x2400;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][5 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2388);
        reg = x2388;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2401 = args[2][6 * steps + ((cycle - 0) & mask)];
      assert(x2401 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2402 = args[2][7 * steps + ((cycle - 0) & mask)];
      assert(x2402 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2403 = args[2][8 * steps + ((cycle - 0) & mask)];
      assert(x2403 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2404 = args[2][9 * steps + ((cycle - 0) & mask)];
      assert(x2404 != Fp::invalid());
      {
        host_args.at(0) = x2389;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2405 = host_outs.at(0);
        auto x2406 = host_outs.at(1);
        auto x2407 = host_outs.at(2);
        auto x2408 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2405);
          reg = x2405;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2406);
          reg = x2406;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2407);
          reg = x2407;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2408);
          reg = x2408;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2389);
        reg = x2389;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2409 = args[2][11 * steps + ((cycle - 0) & mask)];
      assert(x2409 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2410 = args[2][12 * steps + ((cycle - 0) & mask)];
      assert(x2410 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2411 = args[2][13 * steps + ((cycle - 0) & mask)];
      assert(x2411 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2412 = args[2][14 * steps + ((cycle - 0) & mask)];
      assert(x2412 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":28:30)
      auto x2413 = x2401 + x2409;
      // loc("zirgen/circuit/recursion/micro.cpp":28:30)
      auto x2414 = x2402 + x2410;
      // loc("zirgen/circuit/recursion/micro.cpp":28:30)
      auto x2415 = x2403 + x2411;
      // loc("zirgen/circuit/recursion/micro.cpp":28:30)
      auto x2416 = x2404 + x2412;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2355);
        reg = x2355;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2413);
        reg = x2413;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2414);
        reg = x2414;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2415);
        reg = x2415;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2416);
        reg = x2416;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x2417 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x2417 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2418 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x2418 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2419 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x2419 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2420 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x2420 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2421 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x2421 != Fp::invalid());
        host_args.at(0) = x2417;
        host_args.at(1) = x2418;
        host_args.at(2) = x2419;
        host_args.at(3) = x2420;
        host_args.at(4) = x2421;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2422 = args[2][16 * steps + ((cycle - 0) & mask)];
      assert(x2422 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2423 = args[2][17 * steps + ((cycle - 0) & mask)];
      assert(x2423 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2424 = args[2][18 * steps + ((cycle - 0) & mask)];
      assert(x2424 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2425 = args[2][19 * steps + ((cycle - 0) & mask)];
      assert(x2425 != Fp::invalid());
      host_args.at(0) = x2401;
      host_args.at(1) = x2402;
      host_args.at(2) = x2403;
      host_args.at(3) = x2404;
      host_args.at(4) = x2409;
      host_args.at(5) = x2410;
      host_args.at(6) = x2411;
      host_args.at(7) = x2412;
      host_args.at(8) = x2422;
      host_args.at(9) = x2423;
      host_args.at(10) = x2424;
      host_args.at(11) = x2425;
      host(ctx, "log", "ADD: %e + %e -> %e", host_args.data(), 12, host_outs.data(), 0);
    }
    if (x2379 != 0) {
      {
        host_args.at(0) = x2388;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2426 = host_outs.at(0);
        auto x2427 = host_outs.at(1);
        auto x2428 = host_outs.at(2);
        auto x2429 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2426);
          reg = x2426;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2427);
          reg = x2427;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2428);
          reg = x2428;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2429);
          reg = x2429;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][5 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2388);
        reg = x2388;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2430 = args[2][6 * steps + ((cycle - 0) & mask)];
      assert(x2430 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2431 = args[2][7 * steps + ((cycle - 0) & mask)];
      assert(x2431 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2432 = args[2][8 * steps + ((cycle - 0) & mask)];
      assert(x2432 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2433 = args[2][9 * steps + ((cycle - 0) & mask)];
      assert(x2433 != Fp::invalid());
      {
        host_args.at(0) = x2389;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2434 = host_outs.at(0);
        auto x2435 = host_outs.at(1);
        auto x2436 = host_outs.at(2);
        auto x2437 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2434);
          reg = x2434;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2435);
          reg = x2435;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2436);
          reg = x2436;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2437);
          reg = x2437;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2389);
        reg = x2389;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2438 = args[2][11 * steps + ((cycle - 0) & mask)];
      assert(x2438 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2439 = args[2][12 * steps + ((cycle - 0) & mask)];
      assert(x2439 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2440 = args[2][13 * steps + ((cycle - 0) & mask)];
      assert(x2440 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2441 = args[2][14 * steps + ((cycle - 0) & mask)];
      assert(x2441 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":34:30)
      auto x2442 = x2430 - x2438;
      // loc("zirgen/circuit/recursion/micro.cpp":34:30)
      auto x2443 = x2431 - x2439;
      // loc("zirgen/circuit/recursion/micro.cpp":34:30)
      auto x2444 = x2432 - x2440;
      // loc("zirgen/circuit/recursion/micro.cpp":34:30)
      auto x2445 = x2433 - x2441;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2355);
        reg = x2355;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2442);
        reg = x2442;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2443);
        reg = x2443;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2444);
        reg = x2444;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2445);
        reg = x2445;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x2446 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x2446 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2447 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x2447 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2448 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x2448 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2449 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x2449 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2450 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x2450 != Fp::invalid());
        host_args.at(0) = x2446;
        host_args.at(1) = x2447;
        host_args.at(2) = x2448;
        host_args.at(3) = x2449;
        host_args.at(4) = x2450;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2451 = args[2][16 * steps + ((cycle - 0) & mask)];
      assert(x2451 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2452 = args[2][17 * steps + ((cycle - 0) & mask)];
      assert(x2452 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2453 = args[2][18 * steps + ((cycle - 0) & mask)];
      assert(x2453 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2454 = args[2][19 * steps + ((cycle - 0) & mask)];
      assert(x2454 != Fp::invalid());
      host_args.at(0) = x2430;
      host_args.at(1) = x2431;
      host_args.at(2) = x2432;
      host_args.at(3) = x2433;
      host_args.at(4) = x2438;
      host_args.at(5) = x2439;
      host_args.at(6) = x2440;
      host_args.at(7) = x2441;
      host_args.at(8) = x2451;
      host_args.at(9) = x2452;
      host_args.at(10) = x2453;
      host_args.at(11) = x2454;
      host(ctx, "log", "SUB: %e - %e -> %e", host_args.data(), 12, host_outs.data(), 0);
    }
    if (x2380 != 0) {
      {
        host_args.at(0) = x2388;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2455 = host_outs.at(0);
        auto x2456 = host_outs.at(1);
        auto x2457 = host_outs.at(2);
        auto x2458 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2455);
          reg = x2455;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2456);
          reg = x2456;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2457);
          reg = x2457;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2458);
          reg = x2458;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][5 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2388);
        reg = x2388;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2459 = args[2][6 * steps + ((cycle - 0) & mask)];
      assert(x2459 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2460 = args[2][7 * steps + ((cycle - 0) & mask)];
      assert(x2460 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2461 = args[2][8 * steps + ((cycle - 0) & mask)];
      assert(x2461 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2462 = args[2][9 * steps + ((cycle - 0) & mask)];
      assert(x2462 != Fp::invalid());
      {
        host_args.at(0) = x2389;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2463 = host_outs.at(0);
        auto x2464 = host_outs.at(1);
        auto x2465 = host_outs.at(2);
        auto x2466 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2463);
          reg = x2463;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2464);
          reg = x2464;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2465);
          reg = x2465;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2466);
          reg = x2466;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2389);
        reg = x2389;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2467 = args[2][11 * steps + ((cycle - 0) & mask)];
      assert(x2467 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2468 = args[2][12 * steps + ((cycle - 0) & mask)];
      assert(x2468 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2469 = args[2][13 * steps + ((cycle - 0) & mask)];
      assert(x2469 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2470 = args[2][14 * steps + ((cycle - 0) & mask)];
      assert(x2470 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2471 = x2459 * x2467;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2472 = x2460 * x2470;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2473 = x2461 * x2469;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2474 = x2472 + x2473;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2475 = x2462 * x2468;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2476 = x2474 + x2475;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2477 = x2476 * x2341;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2478 = x2471 + x2477;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2479 = x2459 * x2468;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2480 = x2460 * x2467;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2481 = x2479 + x2480;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2482 = x2461 * x2470;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2483 = x2462 * x2469;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2484 = x2482 + x2483;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2485 = x2484 * x2341;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2486 = x2481 + x2485;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2487 = x2459 * x2469;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2488 = x2460 * x2468;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2489 = x2487 + x2488;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2490 = x2461 * x2467;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2491 = x2489 + x2490;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2492 = x2462 * x2470;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2493 = x2492 * x2341;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2494 = x2491 + x2493;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2495 = x2459 * x2470;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2496 = x2460 * x2469;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2497 = x2495 + x2496;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2498 = x2461 * x2468;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2499 = x2497 + x2498;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2500 = x2462 * x2467;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2501 = x2499 + x2500;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2355);
        reg = x2355;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2478);
        reg = x2478;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2486);
        reg = x2486;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2494);
        reg = x2494;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2501);
        reg = x2501;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x2502 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x2502 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2503 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x2503 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2504 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x2504 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2505 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x2505 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2506 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x2506 != Fp::invalid());
        host_args.at(0) = x2502;
        host_args.at(1) = x2503;
        host_args.at(2) = x2504;
        host_args.at(3) = x2505;
        host_args.at(4) = x2506;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2507 = args[2][16 * steps + ((cycle - 0) & mask)];
      assert(x2507 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2508 = args[2][17 * steps + ((cycle - 0) & mask)];
      assert(x2508 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2509 = args[2][18 * steps + ((cycle - 0) & mask)];
      assert(x2509 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2510 = args[2][19 * steps + ((cycle - 0) & mask)];
      assert(x2510 != Fp::invalid());
      host_args.at(0) = x2459;
      host_args.at(1) = x2460;
      host_args.at(2) = x2461;
      host_args.at(3) = x2462;
      host_args.at(4) = x2467;
      host_args.at(5) = x2468;
      host_args.at(6) = x2469;
      host_args.at(7) = x2470;
      host_args.at(8) = x2507;
      host_args.at(9) = x2508;
      host_args.at(10) = x2509;
      host_args.at(11) = x2510;
      host(ctx, "log", "MUL: %e * %e -> %e", host_args.data(), 12, host_outs.data(), 0);
    }
    // loc("zirgen/circuit/recursion/micro.cpp":43:56)
    auto x2511 = x2381 * x2389;
    if (x2511 != 0) {
      {
        host_args.at(0) = x2388;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2512 = host_outs.at(0);
        auto x2513 = host_outs.at(1);
        auto x2514 = host_outs.at(2);
        auto x2515 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2512);
          reg = x2512;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2513);
          reg = x2513;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2514);
          reg = x2514;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2515);
          reg = x2515;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][5 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2388);
        reg = x2388;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2516 = args[2][6 * steps + ((cycle - 0) & mask)];
      assert(x2516 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2517 = args[2][7 * steps + ((cycle - 0) & mask)];
      assert(x2517 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2518 = args[2][8 * steps + ((cycle - 0) & mask)];
      assert(x2518 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2519 = args[2][9 * steps + ((cycle - 0) & mask)];
      assert(x2519 != Fp::invalid());
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][12 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][13 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][14 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2520 = x2516 * x2516;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2521 = x2519 + x2519;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2522 = x2517 * x2521;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2523 = x2518 * x2518;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2524 = x2522 - x2523;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2525 = x2524 * x2342;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2526 = x2520 + x2525;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2527 = x2518 + x2518;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2528 = x2516 * x2527;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2529 = x2517 * x2517;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2530 = x2528 - x2529;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2531 = x2519 * x2519;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2532 = x2531 * x2342;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2533 = x2530 + x2532;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2534 = x2526 * x2526;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2535 = x2533 * x2342;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2536 = x2535 * x2533;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2537 = x2534 + x2536;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2538 = inv(x2537);
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2539 = x2526 * x2538;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2540 = x2533 * x2538;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2541 = x2516 * x2539;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2542 = x2518 * x2342;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2543 = x2542 * x2540;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2544 = x2541 + x2543;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2545 = -x2517;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2546 = x2545 * x2539;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2547 = x2519 * x2342;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2548 = x2547 * x2540;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2549 = x2546 - x2548;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2550 = -x2516;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2551 = x2550 * x2540;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2552 = x2518 * x2539;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2553 = x2551 + x2552;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2554 = x2517 * x2540;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2555 = x2519 * x2539;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2556 = x2554 - x2555;
        // loc("zirgen/circuit/recursion/wom.cpp":85:3)
        {
          auto& reg = args[2][15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2355);
          reg = x2355;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2544);
          reg = x2544;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2549);
          reg = x2549;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2553);
          reg = x2553;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2556);
          reg = x2556;
        }
        {
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
          auto x2557 = args[2][15 * steps + ((cycle - 0) & mask)];
          assert(x2557 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2558 = args[2][16 * steps + ((cycle - 0) & mask)];
          assert(x2558 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2559 = args[2][17 * steps + ((cycle - 0) & mask)];
          assert(x2559 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2560 = args[2][18 * steps + ((cycle - 0) & mask)];
          assert(x2560 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2561 = args[2][19 * steps + ((cycle - 0) & mask)];
          assert(x2561 != Fp::invalid());
          host_args.at(0) = x2557;
          host_args.at(1) = x2558;
          host_args.at(2) = x2559;
          host_args.at(3) = x2560;
          host_args.at(4) = x2561;
          host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2562 = args[2][16 * steps + ((cycle - 0) & mask)];
      assert(x2562 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2563 = args[2][17 * steps + ((cycle - 0) & mask)];
      assert(x2563 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2564 = args[2][18 * steps + ((cycle - 0) & mask)];
      assert(x2564 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2565 = args[2][19 * steps + ((cycle - 0) & mask)];
      assert(x2565 != Fp::invalid());
      host_args.at(0) = x2516;
      host_args.at(1) = x2517;
      host_args.at(2) = x2518;
      host_args.at(3) = x2519;
      host_args.at(4) = x2562;
      host_args.at(5) = x2563;
      host_args.at(6) = x2564;
      host_args.at(7) = x2565;
      host(ctx, "log", "INV: %e -> %e", host_args.data(), 8, host_outs.data(), 0);
    }
    // loc("zirgen/circuit/recursion/micro.cpp":50:62)
    auto x2566 = x2352 - x2389;
    // loc("zirgen/circuit/recursion/micro.cpp":50:62)
    auto x2567 = x2381 * x2566;
    if (x2567 != 0) {
      {
        host_args.at(0) = x2388;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2568 = host_outs.at(0);
        auto x2569 = host_outs.at(1);
        auto x2570 = host_outs.at(2);
        auto x2571 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2568);
          reg = x2568;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2569);
          reg = x2569;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2570);
          reg = x2570;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2571);
          reg = x2571;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][5 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2388);
        reg = x2388;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][12 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][13 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][14 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2572 = args[2][6 * steps + ((cycle - 0) & mask)];
      assert(x2572 != Fp::invalid());
      {
        // loc("zirgen/circuit/recursion/micro.cpp":55:22)
        auto x2573 = inv(x2572);
        // loc("zirgen/circuit/recursion/micro.cpp":55:7)
        {
          auto& reg = args[2][101 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2573);
          reg = x2573;
        }
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[0](recursion::MicroOp)/extra(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
        auto x2574 = args[2][101 * steps + ((cycle - 0) & mask)];
        assert(x2574 != Fp::invalid());
        // loc("zirgen/circuit/recursion/micro.cpp":56:36)
        auto x2575 = x2574 * x2572;
        // loc("zirgen/circuit/recursion/micro.cpp":56:32)
        auto x2576 = x2352 - x2575;
        // loc("zirgen/circuit/recursion/wom.cpp":85:3)
        {
          auto& reg = args[2][15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2355);
          reg = x2355;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2576);
          reg = x2576;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        {
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
          auto x2577 = args[2][15 * steps + ((cycle - 0) & mask)];
          assert(x2577 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2578 = args[2][16 * steps + ((cycle - 0) & mask)];
          assert(x2578 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2579 = args[2][17 * steps + ((cycle - 0) & mask)];
          assert(x2579 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2580 = args[2][18 * steps + ((cycle - 0) & mask)];
          assert(x2580 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2581 = args[2][19 * steps + ((cycle - 0) & mask)];
          assert(x2581 != Fp::invalid());
          host_args.at(0) = x2577;
          host_args.at(1) = x2578;
          host_args.at(2) = x2579;
          host_args.at(3) = x2580;
          host_args.at(4) = x2581;
          host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2582 = args[2][16 * steps + ((cycle - 0) & mask)];
      assert(x2582 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2583 = args[2][7 * steps + ((cycle - 0) & mask)];
      assert(x2583 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2584 = args[2][8 * steps + ((cycle - 0) & mask)];
      assert(x2584 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2585 = args[2][9 * steps + ((cycle - 0) & mask)];
      assert(x2585 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2586 = args[2][17 * steps + ((cycle - 0) & mask)];
      assert(x2586 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2587 = args[2][18 * steps + ((cycle - 0) & mask)];
      assert(x2587 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2588 = args[2][19 * steps + ((cycle - 0) & mask)];
      assert(x2588 != Fp::invalid());
      host_args.at(0) = x2572;
      host_args.at(1) = x2583;
      host_args.at(2) = x2584;
      host_args.at(3) = x2585;
      host_args.at(4) = x2582;
      host_args.at(5) = x2586;
      host_args.at(6) = x2587;
      host_args.at(7) = x2588;
      host(ctx, "log", "IS_ZERO: %e -> %e", host_args.data(), 8, host_outs.data(), 0);
    }
    if (x2382 != 0) {
      {
        host_args.at(0) = x2388;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2589 = host_outs.at(0);
        auto x2590 = host_outs.at(1);
        auto x2591 = host_outs.at(2);
        auto x2592 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2589);
          reg = x2589;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2590);
          reg = x2590;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2591);
          reg = x2591;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2592);
          reg = x2592;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][5 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2388);
        reg = x2388;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2593 = args[2][6 * steps + ((cycle - 0) & mask)];
      assert(x2593 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2594 = args[2][7 * steps + ((cycle - 0) & mask)];
      assert(x2594 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2595 = args[2][8 * steps + ((cycle - 0) & mask)];
      assert(x2595 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2596 = args[2][9 * steps + ((cycle - 0) & mask)];
      assert(x2596 != Fp::invalid());
      {
        host_args.at(0) = x2389;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2597 = host_outs.at(0);
        auto x2598 = host_outs.at(1);
        auto x2599 = host_outs.at(2);
        auto x2600 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2597);
          reg = x2597;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2598);
          reg = x2598;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2599);
          reg = x2599;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2600);
          reg = x2600;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2389);
        reg = x2389;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2601 = args[2][11 * steps + ((cycle - 0) & mask)];
      assert(x2601 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2602 = args[2][12 * steps + ((cycle - 0) & mask)];
      assert(x2602 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2603 = args[2][13 * steps + ((cycle - 0) & mask)];
      assert(x2603 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2604 = args[2][14 * steps + ((cycle - 0) & mask)];
      assert(x2604 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":71:30)
      auto x2605 = x2593 - x2601;
      // loc("zirgen/circuit/recursion/micro.cpp":71:30)
      auto x2606 = x2594 - x2602;
      // loc("zirgen/circuit/recursion/micro.cpp":71:30)
      auto x2607 = x2595 - x2603;
      // loc("zirgen/circuit/recursion/micro.cpp":71:30)
      auto x2608 = x2596 - x2604;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2355);
        reg = x2355;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2605);
        reg = x2605;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2606);
        reg = x2606;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2607);
        reg = x2607;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2608);
        reg = x2608;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x2609 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x2609 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2610 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x2610 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2611 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x2611 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2612 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x2612 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2613 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x2613 != Fp::invalid());
        host_args.at(0) = x2609;
        host_args.at(1) = x2610;
        host_args.at(2) = x2611;
        host_args.at(3) = x2612;
        host_args.at(4) = x2613;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      host_args.at(0) = x2593;
      host_args.at(1) = x2594;
      host_args.at(2) = x2595;
      host_args.at(3) = x2596;
      host_args.at(4) = x2601;
      host_args.at(5) = x2602;
      host_args.at(6) = x2603;
      host_args.at(7) = x2604;
      host(ctx, "log", "EQ: %e == %e", host_args.data(), 8, host_outs.data(), 0);
    }
    if (x2383 != 0) {
      host_args.at(0) = x2388;
      host_args.at(1) = x2389;
      host(ctx, "log", "READ_IOP_HEADER: %u %u", host_args.data(), 2, host_outs.data(), 0);
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][5 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][6 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][7 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][8 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][9 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][12 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][13 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][14 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2355);
        reg = x2355;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x2614 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x2614 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2615 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x2615 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2616 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x2616 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2617 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x2617 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2618 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x2618 != Fp::invalid());
        host_args.at(0) = x2614;
        host_args.at(1) = x2615;
        host_args.at(2) = x2616;
        host_args.at(3) = x2617;
        host_args.at(4) = x2618;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      {
        host_args.at(0) = x2388;
        host_args.at(1) = x2389;
        host(ctx, "readIOPHeader", "", host_args.data(), 2, host_outs.data(), 0);
      }
    }
    if (x2384 != 0) {
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][5 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][6 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][7 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][8 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][9 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][12 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][13 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][14 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        host_args.at(0) = x2388;
        host_args.at(1) = x2389;
        host_args.at(2) = x2390;
        host(ctx, "readIOPBody", "", host_args.data(), 3, host_outs.data(), 4);
        auto x2619 = host_outs.at(0);
        auto x2620 = host_outs.at(1);
        auto x2621 = host_outs.at(2);
        auto x2622 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":85:3)
        {
          auto& reg = args[2][15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2355);
          reg = x2355;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2619);
          reg = x2619;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2620);
          reg = x2620;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2621);
          reg = x2621;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2622);
          reg = x2622;
        }
        {
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
          auto x2623 = args[2][15 * steps + ((cycle - 0) & mask)];
          assert(x2623 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2624 = args[2][16 * steps + ((cycle - 0) & mask)];
          assert(x2624 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2625 = args[2][17 * steps + ((cycle - 0) & mask)];
          assert(x2625 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2626 = args[2][18 * steps + ((cycle - 0) & mask)];
          assert(x2626 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2627 = args[2][19 * steps + ((cycle - 0) & mask)];
          assert(x2627 != Fp::invalid());
          host_args.at(0) = x2623;
          host_args.at(1) = x2624;
          host_args.at(2) = x2625;
          host_args.at(3) = x2626;
          host_args.at(4) = x2627;
          host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2628 = args[2][16 * steps + ((cycle - 0) & mask)];
      assert(x2628 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2629 = args[2][17 * steps + ((cycle - 0) & mask)];
      assert(x2629 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2630 = args[2][18 * steps + ((cycle - 0) & mask)];
      assert(x2630 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2631 = args[2][19 * steps + ((cycle - 0) & mask)];
      assert(x2631 != Fp::invalid());
      host_args.at(0) = x2388;
      host_args.at(1) = x2389;
      host_args.at(2) = x2628;
      host_args.at(3) = x2629;
      host_args.at(4) = x2630;
      host_args.at(5) = x2631;
      host(ctx, "log", "READ_IOP_BODY: %u %u -> %e", host_args.data(), 6, host_outs.data(), 0);
    }
    if (x2385 != 0) {
      host_args.at(0) = x2388;
      host_args.at(1) = x2389;
      host_args.at(2) = x2390;
      host(ctx, "log", "MIX_RNG: %u, %u, %u", host_args.data(), 3, host_outs.data(), 0);
      {
        host_args.at(0) = x2388;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2632 = host_outs.at(0);
        auto x2633 = host_outs.at(1);
        auto x2634 = host_outs.at(2);
        auto x2635 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2632);
          reg = x2632;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2633);
          reg = x2633;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2634);
          reg = x2634;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2635);
          reg = x2635;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][5 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2388);
        reg = x2388;
      }
      {
        host_args.at(0) = x2389;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2636 = host_outs.at(0);
        auto x2637 = host_outs.at(1);
        auto x2638 = host_outs.at(2);
        auto x2639 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2636);
          reg = x2636;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2637);
          reg = x2637;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2638);
          reg = x2638;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2639);
          reg = x2639;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2389);
        reg = x2389;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2640 = args[2][6 * steps + ((cycle - 0) & mask)];
      assert(x2640 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2641 = args[2][7 * steps + ((cycle - 0) & mask)];
      assert(x2641 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2642 = args[2][11 * steps + ((cycle - 0) & mask)];
      assert(x2642 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2643 = args[2][12 * steps + ((cycle - 0) & mask)];
      assert(x2643 != Fp::invalid());
      host_args.at(0) = x2640;
      host_args.at(1) = x2641;
      host_args.at(2) = x2642;
      host_args.at(3) = x2643;
      host(ctx, "log", "  in0=[%x %x], in1=[%x %x]", host_args.data(), 4, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[2](recursion::MicroOp)/extra(Reg)"("zirgen/circuit/recursion/micro.cpp":107:71))
      auto x2644 = args[2][125 * steps + ((cycle - 1) & mask)];
      if (x2644 == Fp::invalid()) x2644 = 0;
      // loc("zirgen/circuit/recursion/micro.cpp":107:15)
      auto x2645 = x2390 * x2644;
      host_args.at(0) = x2645;
      host(ctx, "log", "  prev_val = %u", host_args.data(), 1, host_outs.data(), 0);
      // loc("zirgen/circuit/recursion/micro.cpp":109:11)
      auto x2646 = x2645 * x2340;
      // loc("zirgen/circuit/recursion/micro.cpp":109:11)
      auto x2647 = x2646 + x2641;
      // loc("zirgen/circuit/recursion/micro.cpp":110:11)
      auto x2648 = x2647 * x2340;
      // loc("zirgen/circuit/recursion/micro.cpp":110:11)
      auto x2649 = x2648 + x2640;
      // loc("zirgen/circuit/recursion/micro.cpp":111:11)
      auto x2650 = x2649 * x2340;
      // loc("zirgen/circuit/recursion/micro.cpp":111:11)
      auto x2651 = x2650 + x2643;
      // loc("zirgen/circuit/recursion/micro.cpp":112:11)
      auto x2652 = x2651 * x2340;
      // loc("zirgen/circuit/recursion/micro.cpp":112:11)
      auto x2653 = x2652 + x2642;
      host_args.at(0) = x2653;
      host(ctx, "log", "  val = %u", host_args.data(), 1, host_outs.data(), 0);
      // loc("zirgen/circuit/recursion/micro.cpp":114:5)
      {
        auto& reg = args[2][101 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2653);
        reg = x2653;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2355);
        reg = x2355;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2653);
        reg = x2653;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x2654 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x2654 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2655 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x2655 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2656 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x2656 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2657 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x2657 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2658 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x2658 != Fp::invalid());
        host_args.at(0) = x2654;
        host_args.at(1) = x2655;
        host_args.at(2) = x2656;
        host_args.at(3) = x2657;
        host_args.at(4) = x2658;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
    }
    if (x2386 != 0) {
      {
        host_args.at(0) = x2388;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2659 = host_outs.at(0);
        auto x2660 = host_outs.at(1);
        auto x2661 = host_outs.at(2);
        auto x2662 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2659);
          reg = x2659;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2660);
          reg = x2660;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2661);
          reg = x2661;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2662);
          reg = x2662;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][5 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2388);
        reg = x2388;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2663 = args[2][6 * steps + ((cycle - 0) & mask)];
      assert(x2663 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":119:31)
      auto x2664 = x2390 * x2663;
      // loc("zirgen/circuit/recursion/micro.cpp":119:17)
      auto x2665 = x2389 + x2664;
      {
        host_args.at(0) = x2665;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2666 = host_outs.at(0);
        auto x2667 = host_outs.at(1);
        auto x2668 = host_outs.at(2);
        auto x2669 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2666);
          reg = x2666;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2667);
          reg = x2667;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2668);
          reg = x2668;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2669);
          reg = x2669;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2665);
        reg = x2665;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2670 = args[2][11 * steps + ((cycle - 0) & mask)];
      assert(x2670 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2671 = args[2][12 * steps + ((cycle - 0) & mask)];
      assert(x2671 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2672 = args[2][13 * steps + ((cycle - 0) & mask)];
      assert(x2672 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2673 = args[2][14 * steps + ((cycle - 0) & mask)];
      assert(x2673 != Fp::invalid());
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2355);
        reg = x2355;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2670);
        reg = x2670;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2671);
        reg = x2671;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2672);
        reg = x2672;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2673);
        reg = x2673;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x2674 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x2674 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2675 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x2675 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2676 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x2676 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2677 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x2677 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2678 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x2678 != Fp::invalid());
        host_args.at(0) = x2674;
        host_args.at(1) = x2675;
        host_args.at(2) = x2676;
        host_args.at(3) = x2677;
        host_args.at(4) = x2678;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      host_args.at(0) = x2388;
      host_args.at(1) = x2389;
      host_args.at(2) = x2390;
      host_args.at(3) = x2663;
      host_args.at(4) = x2670;
      host_args.at(5) = x2671;
      host_args.at(6) = x2672;
      host_args.at(7) = x2673;
      host_args.at(8) = x2355;
      host(ctx, "log", "SELECT, idx = %u, start = %u, step = %u, idx = %u, writing %e to %u", host_args.data(), 9, host_outs.data(), 0);
    }
    if (x2387 != 0) {
      {
        host_args.at(0) = x2388;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2679 = host_outs.at(0);
        auto x2680 = host_outs.at(1);
        auto x2681 = host_outs.at(2);
        auto x2682 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2679);
          reg = x2679;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2680);
          reg = x2680;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2681);
          reg = x2681;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2682);
          reg = x2682;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][5 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2388);
        reg = x2388;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][12 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][13 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][14 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/micro.cpp":132:15)
      auto x2683 = x2389 * x2390;
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2684 = args[2][9 * steps + ((cycle - 0) & mask)];
      assert(x2684 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":132:15)
      auto x2685 = x2683 * x2684;
      // loc("zirgen/circuit/recursion/micro.cpp":133:30)
      auto x2686 = x2352 - x2390;
      // loc("zirgen/circuit/recursion/micro.cpp":133:15)
      auto x2687 = x2389 * x2686;
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2688 = args[2][8 * steps + ((cycle - 0) & mask)];
      assert(x2688 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":133:15)
      auto x2689 = x2687 * x2688;
      // loc("zirgen/circuit/recursion/micro.cpp":132:15)
      auto x2690 = x2685 + x2689;
      // loc("zirgen/circuit/recursion/micro.cpp":134:15)
      auto x2691 = x2566 * x2390;
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2692 = args[2][7 * steps + ((cycle - 0) & mask)];
      assert(x2692 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":134:15)
      auto x2693 = x2691 * x2692;
      // loc("zirgen/circuit/recursion/micro.cpp":132:15)
      auto x2694 = x2690 + x2693;
      // loc("zirgen/circuit/recursion/micro.cpp":135:15)
      auto x2695 = x2566 * x2686;
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2696 = args[2][6 * steps + ((cycle - 0) & mask)];
      assert(x2696 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":135:15)
      auto x2697 = x2695 * x2696;
      // loc("zirgen/circuit/recursion/micro.cpp":132:15)
      auto x2698 = x2694 + x2697;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2355);
        reg = x2355;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2698);
        reg = x2698;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x2699 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x2699 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2700 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x2700 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2701 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x2701 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2702 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x2702 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2703 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x2703 != Fp::invalid());
        host_args.at(0) = x2699;
        host_args.at(1) = x2700;
        host_args.at(2) = x2701;
        host_args.at(3) = x2702;
        host_args.at(4) = x2703;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
    }
    // loc("zirgen/circuit/recursion/micro.cpp":151:34)
    auto x2704 = x2355 + x2352;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/micro_ops(recursion::MicroInsts)/inst[1](recursion::MicroInst)/opcode(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x2705 = args[0][11 * steps + ((cycle - 0) & mask)];
    assert(x2705 != Fp::invalid());
    {
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2706 = (x2705 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][102 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2706);
        reg = x2706;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2707 = x2705 - x2352;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2708 = (x2707 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][103 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2708);
        reg = x2708;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2709 = x2705 - x2351;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2710 = (x2709 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][104 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2710);
        reg = x2710;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2711 = x2705 - x2350;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2712 = (x2711 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][105 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2712);
        reg = x2712;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2713 = x2705 - x2349;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2714 = (x2713 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][106 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2714);
        reg = x2714;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2715 = x2705 - x2348;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2716 = (x2715 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][107 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2716);
        reg = x2716;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2717 = x2705 - x2347;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2718 = (x2717 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][108 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2718);
        reg = x2718;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2719 = x2705 - x2346;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2720 = (x2719 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][109 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2720);
        reg = x2720;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2721 = x2705 - x2345;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2722 = (x2721 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][110 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2722);
        reg = x2722;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2723 = x2705 - x2344;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2724 = (x2723 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][111 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2724);
        reg = x2724;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2725 = x2705 - x2343;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x2726 = (x2725 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][112 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2726);
        reg = x2726;
      }
    }
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[1](recursion::MicroOp)/decode(OneHot)/add(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2727 = args[2][103 * steps + ((cycle - 0) & mask)];
    assert(x2727 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[1](recursion::MicroOp)/decode(OneHot)/sub(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2728 = args[2][104 * steps + ((cycle - 0) & mask)];
    assert(x2728 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[1](recursion::MicroOp)/decode(OneHot)/mul(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2729 = args[2][105 * steps + ((cycle - 0) & mask)];
    assert(x2729 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[1](recursion::MicroOp)/decode(OneHot)/inv(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2730 = args[2][106 * steps + ((cycle - 0) & mask)];
    assert(x2730 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[1](recursion::MicroOp)/decode(OneHot)/eq(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2731 = args[2][107 * steps + ((cycle - 0) & mask)];
    assert(x2731 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[1](recursion::MicroOp)/decode(OneHot)/read_iop_header(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2732 = args[2][108 * steps + ((cycle - 0) & mask)];
    assert(x2732 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[1](recursion::MicroOp)/decode(OneHot)/read_iop_body(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2733 = args[2][109 * steps + ((cycle - 0) & mask)];
    assert(x2733 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[1](recursion::MicroOp)/decode(OneHot)/mix_rng(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2734 = args[2][110 * steps + ((cycle - 0) & mask)];
    assert(x2734 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[1](recursion::MicroOp)/decode(OneHot)/select(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2735 = args[2][111 * steps + ((cycle - 0) & mask)];
    assert(x2735 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[1](recursion::MicroOp)/decode(OneHot)/extract(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x2736 = args[2][112 * steps + ((cycle - 0) & mask)];
    assert(x2736 != Fp::invalid());
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/micro_ops(recursion::MicroInsts)/inst[1](recursion::MicroInst)/operand[0](Reg)"("zirgen/circuit/recursion/micro.cpp":14:17))
    auto x2737 = args[0][12 * steps + ((cycle - 0) & mask)];
    assert(x2737 != Fp::invalid());
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/micro_ops(recursion::MicroInsts)/inst[1](recursion::MicroInst)/operand[1](Reg)"("zirgen/circuit/recursion/micro.cpp":15:17))
    auto x2738 = args[0][13 * steps + ((cycle - 0) & mask)];
    assert(x2738 != Fp::invalid());
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/micro_ops(recursion::MicroInsts)/inst[1](recursion::MicroInst)/operand[2](Reg)"("zirgen/circuit/recursion/micro.cpp":16:17))
    auto x2739 = args[0][14 * steps + ((cycle - 0) & mask)];
    assert(x2739 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[1](recursion::MicroOp)/decode(OneHot)/constop(Reg)"("zirgen/circuit/recursion/micro.cpp":19:44))
    auto x2740 = args[2][102 * steps + ((cycle - 0) & mask)];
    assert(x2740 != Fp::invalid());
    if (x2740 != 0) {
      host_args.at(0) = x2737;
      host_args.at(1) = x2738;
      host_args.at(2) = x2739;
      host_args.at(3) = x2353;
      host(ctx, "log", "CONST: %e", host_args.data(), 4, host_outs.data(), 0);
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][22 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][23 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][24 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][26 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2704);
        reg = x2704;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2737);
        reg = x2737;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2738);
        reg = x2738;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2739);
        reg = x2739;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x2741 = args[2][30 * steps + ((cycle - 0) & mask)];
        assert(x2741 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2742 = args[2][31 * steps + ((cycle - 0) & mask)];
        assert(x2742 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2743 = args[2][32 * steps + ((cycle - 0) & mask)];
        assert(x2743 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2744 = args[2][33 * steps + ((cycle - 0) & mask)];
        assert(x2744 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2745 = args[2][34 * steps + ((cycle - 0) & mask)];
        assert(x2745 != Fp::invalid());
        host_args.at(0) = x2741;
        host_args.at(1) = x2742;
        host_args.at(2) = x2743;
        host_args.at(3) = x2744;
        host_args.at(4) = x2745;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
    }
    if (x2727 != 0) {
      {
        host_args.at(0) = x2737;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2746 = host_outs.at(0);
        auto x2747 = host_outs.at(1);
        auto x2748 = host_outs.at(2);
        auto x2749 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2746);
          reg = x2746;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2747);
          reg = x2747;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2748);
          reg = x2748;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2749);
          reg = x2749;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2737);
        reg = x2737;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2750 = args[2][21 * steps + ((cycle - 0) & mask)];
      assert(x2750 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2751 = args[2][22 * steps + ((cycle - 0) & mask)];
      assert(x2751 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2752 = args[2][23 * steps + ((cycle - 0) & mask)];
      assert(x2752 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2753 = args[2][24 * steps + ((cycle - 0) & mask)];
      assert(x2753 != Fp::invalid());
      {
        host_args.at(0) = x2738;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2754 = host_outs.at(0);
        auto x2755 = host_outs.at(1);
        auto x2756 = host_outs.at(2);
        auto x2757 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2754);
          reg = x2754;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2755);
          reg = x2755;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2756);
          reg = x2756;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2757);
          reg = x2757;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2738);
        reg = x2738;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2758 = args[2][26 * steps + ((cycle - 0) & mask)];
      assert(x2758 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2759 = args[2][27 * steps + ((cycle - 0) & mask)];
      assert(x2759 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2760 = args[2][28 * steps + ((cycle - 0) & mask)];
      assert(x2760 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2761 = args[2][29 * steps + ((cycle - 0) & mask)];
      assert(x2761 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":28:30)
      auto x2762 = x2750 + x2758;
      // loc("zirgen/circuit/recursion/micro.cpp":28:30)
      auto x2763 = x2751 + x2759;
      // loc("zirgen/circuit/recursion/micro.cpp":28:30)
      auto x2764 = x2752 + x2760;
      // loc("zirgen/circuit/recursion/micro.cpp":28:30)
      auto x2765 = x2753 + x2761;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2704);
        reg = x2704;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2762);
        reg = x2762;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2763);
        reg = x2763;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2764);
        reg = x2764;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2765);
        reg = x2765;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x2766 = args[2][30 * steps + ((cycle - 0) & mask)];
        assert(x2766 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2767 = args[2][31 * steps + ((cycle - 0) & mask)];
        assert(x2767 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2768 = args[2][32 * steps + ((cycle - 0) & mask)];
        assert(x2768 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2769 = args[2][33 * steps + ((cycle - 0) & mask)];
        assert(x2769 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2770 = args[2][34 * steps + ((cycle - 0) & mask)];
        assert(x2770 != Fp::invalid());
        host_args.at(0) = x2766;
        host_args.at(1) = x2767;
        host_args.at(2) = x2768;
        host_args.at(3) = x2769;
        host_args.at(4) = x2770;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2771 = args[2][31 * steps + ((cycle - 0) & mask)];
      assert(x2771 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2772 = args[2][32 * steps + ((cycle - 0) & mask)];
      assert(x2772 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2773 = args[2][33 * steps + ((cycle - 0) & mask)];
      assert(x2773 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2774 = args[2][34 * steps + ((cycle - 0) & mask)];
      assert(x2774 != Fp::invalid());
      host_args.at(0) = x2750;
      host_args.at(1) = x2751;
      host_args.at(2) = x2752;
      host_args.at(3) = x2753;
      host_args.at(4) = x2758;
      host_args.at(5) = x2759;
      host_args.at(6) = x2760;
      host_args.at(7) = x2761;
      host_args.at(8) = x2771;
      host_args.at(9) = x2772;
      host_args.at(10) = x2773;
      host_args.at(11) = x2774;
      host(ctx, "log", "ADD: %e + %e -> %e", host_args.data(), 12, host_outs.data(), 0);
    }
    if (x2728 != 0) {
      {
        host_args.at(0) = x2737;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2775 = host_outs.at(0);
        auto x2776 = host_outs.at(1);
        auto x2777 = host_outs.at(2);
        auto x2778 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2775);
          reg = x2775;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2776);
          reg = x2776;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2777);
          reg = x2777;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2778);
          reg = x2778;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2737);
        reg = x2737;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2779 = args[2][21 * steps + ((cycle - 0) & mask)];
      assert(x2779 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2780 = args[2][22 * steps + ((cycle - 0) & mask)];
      assert(x2780 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2781 = args[2][23 * steps + ((cycle - 0) & mask)];
      assert(x2781 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2782 = args[2][24 * steps + ((cycle - 0) & mask)];
      assert(x2782 != Fp::invalid());
      {
        host_args.at(0) = x2738;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2783 = host_outs.at(0);
        auto x2784 = host_outs.at(1);
        auto x2785 = host_outs.at(2);
        auto x2786 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2783);
          reg = x2783;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2784);
          reg = x2784;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2785);
          reg = x2785;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2786);
          reg = x2786;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2738);
        reg = x2738;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2787 = args[2][26 * steps + ((cycle - 0) & mask)];
      assert(x2787 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2788 = args[2][27 * steps + ((cycle - 0) & mask)];
      assert(x2788 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2789 = args[2][28 * steps + ((cycle - 0) & mask)];
      assert(x2789 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2790 = args[2][29 * steps + ((cycle - 0) & mask)];
      assert(x2790 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":34:30)
      auto x2791 = x2779 - x2787;
      // loc("zirgen/circuit/recursion/micro.cpp":34:30)
      auto x2792 = x2780 - x2788;
      // loc("zirgen/circuit/recursion/micro.cpp":34:30)
      auto x2793 = x2781 - x2789;
      // loc("zirgen/circuit/recursion/micro.cpp":34:30)
      auto x2794 = x2782 - x2790;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2704);
        reg = x2704;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2791);
        reg = x2791;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2792);
        reg = x2792;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2793);
        reg = x2793;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2794);
        reg = x2794;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x2795 = args[2][30 * steps + ((cycle - 0) & mask)];
        assert(x2795 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2796 = args[2][31 * steps + ((cycle - 0) & mask)];
        assert(x2796 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2797 = args[2][32 * steps + ((cycle - 0) & mask)];
        assert(x2797 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2798 = args[2][33 * steps + ((cycle - 0) & mask)];
        assert(x2798 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2799 = args[2][34 * steps + ((cycle - 0) & mask)];
        assert(x2799 != Fp::invalid());
        host_args.at(0) = x2795;
        host_args.at(1) = x2796;
        host_args.at(2) = x2797;
        host_args.at(3) = x2798;
        host_args.at(4) = x2799;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2800 = args[2][31 * steps + ((cycle - 0) & mask)];
      assert(x2800 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2801 = args[2][32 * steps + ((cycle - 0) & mask)];
      assert(x2801 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2802 = args[2][33 * steps + ((cycle - 0) & mask)];
      assert(x2802 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2803 = args[2][34 * steps + ((cycle - 0) & mask)];
      assert(x2803 != Fp::invalid());
      host_args.at(0) = x2779;
      host_args.at(1) = x2780;
      host_args.at(2) = x2781;
      host_args.at(3) = x2782;
      host_args.at(4) = x2787;
      host_args.at(5) = x2788;
      host_args.at(6) = x2789;
      host_args.at(7) = x2790;
      host_args.at(8) = x2800;
      host_args.at(9) = x2801;
      host_args.at(10) = x2802;
      host_args.at(11) = x2803;
      host(ctx, "log", "SUB: %e - %e -> %e", host_args.data(), 12, host_outs.data(), 0);
    }
    if (x2729 != 0) {
      {
        host_args.at(0) = x2737;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2804 = host_outs.at(0);
        auto x2805 = host_outs.at(1);
        auto x2806 = host_outs.at(2);
        auto x2807 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2804);
          reg = x2804;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2805);
          reg = x2805;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2806);
          reg = x2806;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2807);
          reg = x2807;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2737);
        reg = x2737;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2808 = args[2][21 * steps + ((cycle - 0) & mask)];
      assert(x2808 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2809 = args[2][22 * steps + ((cycle - 0) & mask)];
      assert(x2809 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2810 = args[2][23 * steps + ((cycle - 0) & mask)];
      assert(x2810 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2811 = args[2][24 * steps + ((cycle - 0) & mask)];
      assert(x2811 != Fp::invalid());
      {
        host_args.at(0) = x2738;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2812 = host_outs.at(0);
        auto x2813 = host_outs.at(1);
        auto x2814 = host_outs.at(2);
        auto x2815 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2812);
          reg = x2812;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2813);
          reg = x2813;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2814);
          reg = x2814;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2815);
          reg = x2815;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2738);
        reg = x2738;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2816 = args[2][26 * steps + ((cycle - 0) & mask)];
      assert(x2816 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2817 = args[2][27 * steps + ((cycle - 0) & mask)];
      assert(x2817 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2818 = args[2][28 * steps + ((cycle - 0) & mask)];
      assert(x2818 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2819 = args[2][29 * steps + ((cycle - 0) & mask)];
      assert(x2819 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2820 = x2808 * x2816;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2821 = x2809 * x2819;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2822 = x2810 * x2818;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2823 = x2821 + x2822;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2824 = x2811 * x2817;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2825 = x2823 + x2824;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2826 = x2825 * x2341;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2827 = x2820 + x2826;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2828 = x2808 * x2817;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2829 = x2809 * x2816;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2830 = x2828 + x2829;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2831 = x2810 * x2819;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2832 = x2811 * x2818;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2833 = x2831 + x2832;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2834 = x2833 * x2341;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2835 = x2830 + x2834;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2836 = x2808 * x2818;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2837 = x2809 * x2817;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2838 = x2836 + x2837;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2839 = x2810 * x2816;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2840 = x2838 + x2839;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2841 = x2811 * x2819;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2842 = x2841 * x2341;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2843 = x2840 + x2842;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2844 = x2808 * x2819;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2845 = x2809 * x2818;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2846 = x2844 + x2845;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2847 = x2810 * x2817;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2848 = x2846 + x2847;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2849 = x2811 * x2816;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x2850 = x2848 + x2849;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2704);
        reg = x2704;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2827);
        reg = x2827;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2835);
        reg = x2835;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2843);
        reg = x2843;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2850);
        reg = x2850;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x2851 = args[2][30 * steps + ((cycle - 0) & mask)];
        assert(x2851 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2852 = args[2][31 * steps + ((cycle - 0) & mask)];
        assert(x2852 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2853 = args[2][32 * steps + ((cycle - 0) & mask)];
        assert(x2853 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2854 = args[2][33 * steps + ((cycle - 0) & mask)];
        assert(x2854 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2855 = args[2][34 * steps + ((cycle - 0) & mask)];
        assert(x2855 != Fp::invalid());
        host_args.at(0) = x2851;
        host_args.at(1) = x2852;
        host_args.at(2) = x2853;
        host_args.at(3) = x2854;
        host_args.at(4) = x2855;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2856 = args[2][31 * steps + ((cycle - 0) & mask)];
      assert(x2856 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2857 = args[2][32 * steps + ((cycle - 0) & mask)];
      assert(x2857 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2858 = args[2][33 * steps + ((cycle - 0) & mask)];
      assert(x2858 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2859 = args[2][34 * steps + ((cycle - 0) & mask)];
      assert(x2859 != Fp::invalid());
      host_args.at(0) = x2808;
      host_args.at(1) = x2809;
      host_args.at(2) = x2810;
      host_args.at(3) = x2811;
      host_args.at(4) = x2816;
      host_args.at(5) = x2817;
      host_args.at(6) = x2818;
      host_args.at(7) = x2819;
      host_args.at(8) = x2856;
      host_args.at(9) = x2857;
      host_args.at(10) = x2858;
      host_args.at(11) = x2859;
      host(ctx, "log", "MUL: %e * %e -> %e", host_args.data(), 12, host_outs.data(), 0);
    }
    // loc("zirgen/circuit/recursion/micro.cpp":43:56)
    auto x2860 = x2730 * x2738;
    if (x2860 != 0) {
      {
        host_args.at(0) = x2737;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2861 = host_outs.at(0);
        auto x2862 = host_outs.at(1);
        auto x2863 = host_outs.at(2);
        auto x2864 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2861);
          reg = x2861;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2862);
          reg = x2862;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2863);
          reg = x2863;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2864);
          reg = x2864;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2737);
        reg = x2737;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2865 = args[2][21 * steps + ((cycle - 0) & mask)];
      assert(x2865 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2866 = args[2][22 * steps + ((cycle - 0) & mask)];
      assert(x2866 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2867 = args[2][23 * steps + ((cycle - 0) & mask)];
      assert(x2867 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2868 = args[2][24 * steps + ((cycle - 0) & mask)];
      assert(x2868 != Fp::invalid());
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][26 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2869 = x2865 * x2865;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2870 = x2868 + x2868;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2871 = x2866 * x2870;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2872 = x2867 * x2867;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2873 = x2871 - x2872;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2874 = x2873 * x2342;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2875 = x2869 + x2874;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2876 = x2867 + x2867;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2877 = x2865 * x2876;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2878 = x2866 * x2866;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2879 = x2877 - x2878;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2880 = x2868 * x2868;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2881 = x2880 * x2342;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2882 = x2879 + x2881;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2883 = x2875 * x2875;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2884 = x2882 * x2342;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2885 = x2884 * x2882;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2886 = x2883 + x2885;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2887 = inv(x2886);
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2888 = x2875 * x2887;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2889 = x2882 * x2887;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2890 = x2865 * x2888;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2891 = x2867 * x2342;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2892 = x2891 * x2889;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2893 = x2890 + x2892;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2894 = -x2866;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2895 = x2894 * x2888;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2896 = x2868 * x2342;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2897 = x2896 * x2889;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2898 = x2895 - x2897;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2899 = -x2865;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2900 = x2899 * x2889;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2901 = x2867 * x2888;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2902 = x2900 + x2901;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2903 = x2866 * x2889;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2904 = x2868 * x2888;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x2905 = x2903 - x2904;
        // loc("zirgen/circuit/recursion/wom.cpp":85:3)
        {
          auto& reg = args[2][30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2704);
          reg = x2704;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2893);
          reg = x2893;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2898);
          reg = x2898;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2902);
          reg = x2902;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2905);
          reg = x2905;
        }
        {
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
          auto x2906 = args[2][30 * steps + ((cycle - 0) & mask)];
          assert(x2906 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2907 = args[2][31 * steps + ((cycle - 0) & mask)];
          assert(x2907 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2908 = args[2][32 * steps + ((cycle - 0) & mask)];
          assert(x2908 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2909 = args[2][33 * steps + ((cycle - 0) & mask)];
          assert(x2909 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2910 = args[2][34 * steps + ((cycle - 0) & mask)];
          assert(x2910 != Fp::invalid());
          host_args.at(0) = x2906;
          host_args.at(1) = x2907;
          host_args.at(2) = x2908;
          host_args.at(3) = x2909;
          host_args.at(4) = x2910;
          host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2911 = args[2][31 * steps + ((cycle - 0) & mask)];
      assert(x2911 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2912 = args[2][32 * steps + ((cycle - 0) & mask)];
      assert(x2912 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2913 = args[2][33 * steps + ((cycle - 0) & mask)];
      assert(x2913 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2914 = args[2][34 * steps + ((cycle - 0) & mask)];
      assert(x2914 != Fp::invalid());
      host_args.at(0) = x2865;
      host_args.at(1) = x2866;
      host_args.at(2) = x2867;
      host_args.at(3) = x2868;
      host_args.at(4) = x2911;
      host_args.at(5) = x2912;
      host_args.at(6) = x2913;
      host_args.at(7) = x2914;
      host(ctx, "log", "INV: %e -> %e", host_args.data(), 8, host_outs.data(), 0);
    }
    // loc("zirgen/circuit/recursion/micro.cpp":50:62)
    auto x2915 = x2352 - x2738;
    // loc("zirgen/circuit/recursion/micro.cpp":50:62)
    auto x2916 = x2730 * x2915;
    if (x2916 != 0) {
      {
        host_args.at(0) = x2737;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2917 = host_outs.at(0);
        auto x2918 = host_outs.at(1);
        auto x2919 = host_outs.at(2);
        auto x2920 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2917);
          reg = x2917;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2918);
          reg = x2918;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2919);
          reg = x2919;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2920);
          reg = x2920;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2737);
        reg = x2737;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][26 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2921 = args[2][21 * steps + ((cycle - 0) & mask)];
      assert(x2921 != Fp::invalid());
      {
        // loc("zirgen/circuit/recursion/micro.cpp":55:22)
        auto x2922 = inv(x2921);
        // loc("zirgen/circuit/recursion/micro.cpp":55:7)
        {
          auto& reg = args[2][113 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2922);
          reg = x2922;
        }
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[1](recursion::MicroOp)/extra(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
        auto x2923 = args[2][113 * steps + ((cycle - 0) & mask)];
        assert(x2923 != Fp::invalid());
        // loc("zirgen/circuit/recursion/micro.cpp":56:36)
        auto x2924 = x2923 * x2921;
        // loc("zirgen/circuit/recursion/micro.cpp":56:32)
        auto x2925 = x2352 - x2924;
        // loc("zirgen/circuit/recursion/wom.cpp":85:3)
        {
          auto& reg = args[2][30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2704);
          reg = x2704;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2925);
          reg = x2925;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        {
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
          auto x2926 = args[2][30 * steps + ((cycle - 0) & mask)];
          assert(x2926 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2927 = args[2][31 * steps + ((cycle - 0) & mask)];
          assert(x2927 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2928 = args[2][32 * steps + ((cycle - 0) & mask)];
          assert(x2928 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2929 = args[2][33 * steps + ((cycle - 0) & mask)];
          assert(x2929 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2930 = args[2][34 * steps + ((cycle - 0) & mask)];
          assert(x2930 != Fp::invalid());
          host_args.at(0) = x2926;
          host_args.at(1) = x2927;
          host_args.at(2) = x2928;
          host_args.at(3) = x2929;
          host_args.at(4) = x2930;
          host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2931 = args[2][31 * steps + ((cycle - 0) & mask)];
      assert(x2931 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2932 = args[2][22 * steps + ((cycle - 0) & mask)];
      assert(x2932 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2933 = args[2][23 * steps + ((cycle - 0) & mask)];
      assert(x2933 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2934 = args[2][24 * steps + ((cycle - 0) & mask)];
      assert(x2934 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2935 = args[2][32 * steps + ((cycle - 0) & mask)];
      assert(x2935 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2936 = args[2][33 * steps + ((cycle - 0) & mask)];
      assert(x2936 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2937 = args[2][34 * steps + ((cycle - 0) & mask)];
      assert(x2937 != Fp::invalid());
      host_args.at(0) = x2921;
      host_args.at(1) = x2932;
      host_args.at(2) = x2933;
      host_args.at(3) = x2934;
      host_args.at(4) = x2931;
      host_args.at(5) = x2935;
      host_args.at(6) = x2936;
      host_args.at(7) = x2937;
      host(ctx, "log", "IS_ZERO: %e -> %e", host_args.data(), 8, host_outs.data(), 0);
    }
    if (x2731 != 0) {
      {
        host_args.at(0) = x2737;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2938 = host_outs.at(0);
        auto x2939 = host_outs.at(1);
        auto x2940 = host_outs.at(2);
        auto x2941 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2938);
          reg = x2938;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2939);
          reg = x2939;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2940);
          reg = x2940;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2941);
          reg = x2941;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2737);
        reg = x2737;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2942 = args[2][21 * steps + ((cycle - 0) & mask)];
      assert(x2942 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2943 = args[2][22 * steps + ((cycle - 0) & mask)];
      assert(x2943 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2944 = args[2][23 * steps + ((cycle - 0) & mask)];
      assert(x2944 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2945 = args[2][24 * steps + ((cycle - 0) & mask)];
      assert(x2945 != Fp::invalid());
      {
        host_args.at(0) = x2738;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2946 = host_outs.at(0);
        auto x2947 = host_outs.at(1);
        auto x2948 = host_outs.at(2);
        auto x2949 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2946);
          reg = x2946;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2947);
          reg = x2947;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2948);
          reg = x2948;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2949);
          reg = x2949;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2738);
        reg = x2738;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2950 = args[2][26 * steps + ((cycle - 0) & mask)];
      assert(x2950 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2951 = args[2][27 * steps + ((cycle - 0) & mask)];
      assert(x2951 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2952 = args[2][28 * steps + ((cycle - 0) & mask)];
      assert(x2952 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2953 = args[2][29 * steps + ((cycle - 0) & mask)];
      assert(x2953 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":71:30)
      auto x2954 = x2942 - x2950;
      // loc("zirgen/circuit/recursion/micro.cpp":71:30)
      auto x2955 = x2943 - x2951;
      // loc("zirgen/circuit/recursion/micro.cpp":71:30)
      auto x2956 = x2944 - x2952;
      // loc("zirgen/circuit/recursion/micro.cpp":71:30)
      auto x2957 = x2945 - x2953;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2704);
        reg = x2704;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2954);
        reg = x2954;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2955);
        reg = x2955;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2956);
        reg = x2956;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2957);
        reg = x2957;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x2958 = args[2][30 * steps + ((cycle - 0) & mask)];
        assert(x2958 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2959 = args[2][31 * steps + ((cycle - 0) & mask)];
        assert(x2959 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2960 = args[2][32 * steps + ((cycle - 0) & mask)];
        assert(x2960 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2961 = args[2][33 * steps + ((cycle - 0) & mask)];
        assert(x2961 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2962 = args[2][34 * steps + ((cycle - 0) & mask)];
        assert(x2962 != Fp::invalid());
        host_args.at(0) = x2958;
        host_args.at(1) = x2959;
        host_args.at(2) = x2960;
        host_args.at(3) = x2961;
        host_args.at(4) = x2962;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      host_args.at(0) = x2942;
      host_args.at(1) = x2943;
      host_args.at(2) = x2944;
      host_args.at(3) = x2945;
      host_args.at(4) = x2950;
      host_args.at(5) = x2951;
      host_args.at(6) = x2952;
      host_args.at(7) = x2953;
      host(ctx, "log", "EQ: %e == %e", host_args.data(), 8, host_outs.data(), 0);
    }
    if (x2732 != 0) {
      host_args.at(0) = x2737;
      host_args.at(1) = x2738;
      host(ctx, "log", "READ_IOP_HEADER: %u %u", host_args.data(), 2, host_outs.data(), 0);
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][22 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][23 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][24 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][26 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2704);
        reg = x2704;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x2963 = args[2][30 * steps + ((cycle - 0) & mask)];
        assert(x2963 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2964 = args[2][31 * steps + ((cycle - 0) & mask)];
        assert(x2964 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2965 = args[2][32 * steps + ((cycle - 0) & mask)];
        assert(x2965 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2966 = args[2][33 * steps + ((cycle - 0) & mask)];
        assert(x2966 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x2967 = args[2][34 * steps + ((cycle - 0) & mask)];
        assert(x2967 != Fp::invalid());
        host_args.at(0) = x2963;
        host_args.at(1) = x2964;
        host_args.at(2) = x2965;
        host_args.at(3) = x2966;
        host_args.at(4) = x2967;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      {
        host_args.at(0) = x2737;
        host_args.at(1) = x2738;
        host(ctx, "readIOPHeader", "", host_args.data(), 2, host_outs.data(), 0);
      }
    }
    if (x2733 != 0) {
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][22 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][23 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][24 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][26 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        host_args.at(0) = x2737;
        host_args.at(1) = x2738;
        host_args.at(2) = x2739;
        host(ctx, "readIOPBody", "", host_args.data(), 3, host_outs.data(), 4);
        auto x2968 = host_outs.at(0);
        auto x2969 = host_outs.at(1);
        auto x2970 = host_outs.at(2);
        auto x2971 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":85:3)
        {
          auto& reg = args[2][30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2704);
          reg = x2704;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2968);
          reg = x2968;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2969);
          reg = x2969;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2970);
          reg = x2970;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2971);
          reg = x2971;
        }
        {
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
          auto x2972 = args[2][30 * steps + ((cycle - 0) & mask)];
          assert(x2972 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2973 = args[2][31 * steps + ((cycle - 0) & mask)];
          assert(x2973 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2974 = args[2][32 * steps + ((cycle - 0) & mask)];
          assert(x2974 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2975 = args[2][33 * steps + ((cycle - 0) & mask)];
          assert(x2975 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x2976 = args[2][34 * steps + ((cycle - 0) & mask)];
          assert(x2976 != Fp::invalid());
          host_args.at(0) = x2972;
          host_args.at(1) = x2973;
          host_args.at(2) = x2974;
          host_args.at(3) = x2975;
          host_args.at(4) = x2976;
          host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2977 = args[2][31 * steps + ((cycle - 0) & mask)];
      assert(x2977 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2978 = args[2][32 * steps + ((cycle - 0) & mask)];
      assert(x2978 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2979 = args[2][33 * steps + ((cycle - 0) & mask)];
      assert(x2979 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2980 = args[2][34 * steps + ((cycle - 0) & mask)];
      assert(x2980 != Fp::invalid());
      host_args.at(0) = x2737;
      host_args.at(1) = x2738;
      host_args.at(2) = x2977;
      host_args.at(3) = x2978;
      host_args.at(4) = x2979;
      host_args.at(5) = x2980;
      host(ctx, "log", "READ_IOP_BODY: %u %u -> %e", host_args.data(), 6, host_outs.data(), 0);
    }
    if (x2734 != 0) {
      host_args.at(0) = x2737;
      host_args.at(1) = x2738;
      host_args.at(2) = x2739;
      host(ctx, "log", "MIX_RNG: %u, %u, %u", host_args.data(), 3, host_outs.data(), 0);
      {
        host_args.at(0) = x2737;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2981 = host_outs.at(0);
        auto x2982 = host_outs.at(1);
        auto x2983 = host_outs.at(2);
        auto x2984 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2981);
          reg = x2981;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2982);
          reg = x2982;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2983);
          reg = x2983;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2984);
          reg = x2984;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2737);
        reg = x2737;
      }
      {
        host_args.at(0) = x2738;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x2985 = host_outs.at(0);
        auto x2986 = host_outs.at(1);
        auto x2987 = host_outs.at(2);
        auto x2988 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2985);
          reg = x2985;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2986);
          reg = x2986;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2987);
          reg = x2987;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2988);
          reg = x2988;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2738);
        reg = x2738;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2989 = args[2][21 * steps + ((cycle - 0) & mask)];
      assert(x2989 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2990 = args[2][22 * steps + ((cycle - 0) & mask)];
      assert(x2990 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2991 = args[2][26 * steps + ((cycle - 0) & mask)];
      assert(x2991 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x2992 = args[2][27 * steps + ((cycle - 0) & mask)];
      assert(x2992 != Fp::invalid());
      host_args.at(0) = x2989;
      host_args.at(1) = x2990;
      host_args.at(2) = x2991;
      host_args.at(3) = x2992;
      host(ctx, "log", "  in0=[%x %x], in1=[%x %x]", host_args.data(), 4, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[0](recursion::MicroOp)/extra(Reg)"("zirgen/circuit/recursion/micro.cpp":107:71))
      auto x2993 = args[2][101 * steps + ((cycle - 0) & mask)];
      if (x2993 == Fp::invalid()) x2993 = 0;
      // loc("zirgen/circuit/recursion/micro.cpp":107:15)
      auto x2994 = x2739 * x2993;
      host_args.at(0) = x2994;
      host(ctx, "log", "  prev_val = %u", host_args.data(), 1, host_outs.data(), 0);
      // loc("zirgen/circuit/recursion/micro.cpp":109:11)
      auto x2995 = x2994 * x2340;
      // loc("zirgen/circuit/recursion/micro.cpp":109:11)
      auto x2996 = x2995 + x2990;
      // loc("zirgen/circuit/recursion/micro.cpp":110:11)
      auto x2997 = x2996 * x2340;
      // loc("zirgen/circuit/recursion/micro.cpp":110:11)
      auto x2998 = x2997 + x2989;
      // loc("zirgen/circuit/recursion/micro.cpp":111:11)
      auto x2999 = x2998 * x2340;
      // loc("zirgen/circuit/recursion/micro.cpp":111:11)
      auto x3000 = x2999 + x2992;
      // loc("zirgen/circuit/recursion/micro.cpp":112:11)
      auto x3001 = x3000 * x2340;
      // loc("zirgen/circuit/recursion/micro.cpp":112:11)
      auto x3002 = x3001 + x2991;
      host_args.at(0) = x3002;
      host(ctx, "log", "  val = %u", host_args.data(), 1, host_outs.data(), 0);
      // loc("zirgen/circuit/recursion/micro.cpp":114:5)
      {
        auto& reg = args[2][113 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3002);
        reg = x3002;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2704);
        reg = x2704;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3002);
        reg = x3002;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x3003 = args[2][30 * steps + ((cycle - 0) & mask)];
        assert(x3003 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3004 = args[2][31 * steps + ((cycle - 0) & mask)];
        assert(x3004 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3005 = args[2][32 * steps + ((cycle - 0) & mask)];
        assert(x3005 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3006 = args[2][33 * steps + ((cycle - 0) & mask)];
        assert(x3006 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3007 = args[2][34 * steps + ((cycle - 0) & mask)];
        assert(x3007 != Fp::invalid());
        host_args.at(0) = x3003;
        host_args.at(1) = x3004;
        host_args.at(2) = x3005;
        host_args.at(3) = x3006;
        host_args.at(4) = x3007;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
    }
    if (x2735 != 0) {
      {
        host_args.at(0) = x2737;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3008 = host_outs.at(0);
        auto x3009 = host_outs.at(1);
        auto x3010 = host_outs.at(2);
        auto x3011 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3008);
          reg = x3008;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3009);
          reg = x3009;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3010);
          reg = x3010;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3011);
          reg = x3011;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2737);
        reg = x2737;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3012 = args[2][21 * steps + ((cycle - 0) & mask)];
      assert(x3012 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":119:31)
      auto x3013 = x2739 * x3012;
      // loc("zirgen/circuit/recursion/micro.cpp":119:17)
      auto x3014 = x2738 + x3013;
      {
        host_args.at(0) = x3014;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3015 = host_outs.at(0);
        auto x3016 = host_outs.at(1);
        auto x3017 = host_outs.at(2);
        auto x3018 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3015);
          reg = x3015;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3016);
          reg = x3016;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3017);
          reg = x3017;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3018);
          reg = x3018;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3014);
        reg = x3014;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3019 = args[2][26 * steps + ((cycle - 0) & mask)];
      assert(x3019 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3020 = args[2][27 * steps + ((cycle - 0) & mask)];
      assert(x3020 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3021 = args[2][28 * steps + ((cycle - 0) & mask)];
      assert(x3021 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3022 = args[2][29 * steps + ((cycle - 0) & mask)];
      assert(x3022 != Fp::invalid());
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2704);
        reg = x2704;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3019);
        reg = x3019;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3020);
        reg = x3020;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3021);
        reg = x3021;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3022);
        reg = x3022;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x3023 = args[2][30 * steps + ((cycle - 0) & mask)];
        assert(x3023 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3024 = args[2][31 * steps + ((cycle - 0) & mask)];
        assert(x3024 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3025 = args[2][32 * steps + ((cycle - 0) & mask)];
        assert(x3025 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3026 = args[2][33 * steps + ((cycle - 0) & mask)];
        assert(x3026 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3027 = args[2][34 * steps + ((cycle - 0) & mask)];
        assert(x3027 != Fp::invalid());
        host_args.at(0) = x3023;
        host_args.at(1) = x3024;
        host_args.at(2) = x3025;
        host_args.at(3) = x3026;
        host_args.at(4) = x3027;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      host_args.at(0) = x2737;
      host_args.at(1) = x2738;
      host_args.at(2) = x2739;
      host_args.at(3) = x3012;
      host_args.at(4) = x3019;
      host_args.at(5) = x3020;
      host_args.at(6) = x3021;
      host_args.at(7) = x3022;
      host_args.at(8) = x2704;
      host(ctx, "log", "SELECT, idx = %u, start = %u, step = %u, idx = %u, writing %e to %u", host_args.data(), 9, host_outs.data(), 0);
    }
    if (x2736 != 0) {
      {
        host_args.at(0) = x2737;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3028 = host_outs.at(0);
        auto x3029 = host_outs.at(1);
        auto x3030 = host_outs.at(2);
        auto x3031 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3028);
          reg = x3028;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3029);
          reg = x3029;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3030);
          reg = x3030;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3031);
          reg = x3031;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2737);
        reg = x2737;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][26 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/micro.cpp":132:15)
      auto x3032 = x2738 * x2739;
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3033 = args[2][24 * steps + ((cycle - 0) & mask)];
      assert(x3033 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":132:15)
      auto x3034 = x3032 * x3033;
      // loc("zirgen/circuit/recursion/micro.cpp":133:30)
      auto x3035 = x2352 - x2739;
      // loc("zirgen/circuit/recursion/micro.cpp":133:15)
      auto x3036 = x2738 * x3035;
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3037 = args[2][23 * steps + ((cycle - 0) & mask)];
      assert(x3037 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":133:15)
      auto x3038 = x3036 * x3037;
      // loc("zirgen/circuit/recursion/micro.cpp":132:15)
      auto x3039 = x3034 + x3038;
      // loc("zirgen/circuit/recursion/micro.cpp":134:15)
      auto x3040 = x2915 * x2739;
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3041 = args[2][22 * steps + ((cycle - 0) & mask)];
      assert(x3041 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":134:15)
      auto x3042 = x3040 * x3041;
      // loc("zirgen/circuit/recursion/micro.cpp":132:15)
      auto x3043 = x3039 + x3042;
      // loc("zirgen/circuit/recursion/micro.cpp":135:15)
      auto x3044 = x2915 * x3035;
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3045 = args[2][21 * steps + ((cycle - 0) & mask)];
      assert(x3045 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":135:15)
      auto x3046 = x3044 * x3045;
      // loc("zirgen/circuit/recursion/micro.cpp":132:15)
      auto x3047 = x3043 + x3046;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2704);
        reg = x2704;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3047);
        reg = x3047;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x3048 = args[2][30 * steps + ((cycle - 0) & mask)];
        assert(x3048 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3049 = args[2][31 * steps + ((cycle - 0) & mask)];
        assert(x3049 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3050 = args[2][32 * steps + ((cycle - 0) & mask)];
        assert(x3050 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3051 = args[2][33 * steps + ((cycle - 0) & mask)];
        assert(x3051 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3052 = args[2][34 * steps + ((cycle - 0) & mask)];
        assert(x3052 != Fp::invalid());
        host_args.at(0) = x3048;
        host_args.at(1) = x3049;
        host_args.at(2) = x3050;
        host_args.at(3) = x3051;
        host_args.at(4) = x3052;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
    }
    // loc("zirgen/circuit/recursion/micro.cpp":151:34)
    auto x3053 = x2355 + x2351;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/micro_ops(recursion::MicroInsts)/inst[2](recursion::MicroInst)/opcode(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x3054 = args[0][15 * steps + ((cycle - 0) & mask)];
    assert(x3054 != Fp::invalid());
    {
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3055 = (x3054 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][114 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3055);
        reg = x3055;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3056 = x3054 - x2352;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3057 = (x3056 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][115 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3057);
        reg = x3057;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3058 = x3054 - x2351;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3059 = (x3058 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][116 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3059);
        reg = x3059;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3060 = x3054 - x2350;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3061 = (x3060 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][117 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3061);
        reg = x3061;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3062 = x3054 - x2349;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3063 = (x3062 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3063);
        reg = x3063;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3064 = x3054 - x2348;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3065 = (x3064 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3065);
        reg = x3065;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3066 = x3054 - x2347;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3067 = (x3066 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3067);
        reg = x3067;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3068 = x3054 - x2346;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3069 = (x3068 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][121 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3069);
        reg = x3069;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3070 = x3054 - x2345;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3071 = (x3070 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][122 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3071);
        reg = x3071;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3072 = x3054 - x2344;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3073 = (x3072 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][123 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3073);
        reg = x3073;
      }
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3074 = x3054 - x2343;
      // loc("./zirgen/components/onehot.h":37:26)
      auto x3075 = (x3074 == 0) ? Fp(1) : Fp(0);
      // loc("./zirgen/components/onehot.h":37:9)
      {
        auto& reg = args[2][124 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3075);
        reg = x3075;
      }
    }
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[2](recursion::MicroOp)/decode(OneHot)/add(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x3076 = args[2][115 * steps + ((cycle - 0) & mask)];
    assert(x3076 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[2](recursion::MicroOp)/decode(OneHot)/sub(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x3077 = args[2][116 * steps + ((cycle - 0) & mask)];
    assert(x3077 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[2](recursion::MicroOp)/decode(OneHot)/mul(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x3078 = args[2][117 * steps + ((cycle - 0) & mask)];
    assert(x3078 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[2](recursion::MicroOp)/decode(OneHot)/inv(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x3079 = args[2][118 * steps + ((cycle - 0) & mask)];
    assert(x3079 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[2](recursion::MicroOp)/decode(OneHot)/eq(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x3080 = args[2][119 * steps + ((cycle - 0) & mask)];
    assert(x3080 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[2](recursion::MicroOp)/decode(OneHot)/read_iop_header(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x3081 = args[2][120 * steps + ((cycle - 0) & mask)];
    assert(x3081 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[2](recursion::MicroOp)/decode(OneHot)/read_iop_body(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x3082 = args[2][121 * steps + ((cycle - 0) & mask)];
    assert(x3082 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[2](recursion::MicroOp)/decode(OneHot)/mix_rng(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x3083 = args[2][122 * steps + ((cycle - 0) & mask)];
    assert(x3083 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[2](recursion::MicroOp)/decode(OneHot)/select(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x3084 = args[2][123 * steps + ((cycle - 0) & mask)];
    assert(x3084 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[2](recursion::MicroOp)/decode(OneHot)/extract(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x3085 = args[2][124 * steps + ((cycle - 0) & mask)];
    assert(x3085 != Fp::invalid());
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/micro_ops(recursion::MicroInsts)/inst[2](recursion::MicroInst)/operand[0](Reg)"("zirgen/circuit/recursion/micro.cpp":14:17))
    auto x3086 = args[0][16 * steps + ((cycle - 0) & mask)];
    assert(x3086 != Fp::invalid());
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/micro_ops(recursion::MicroInsts)/inst[2](recursion::MicroInst)/operand[1](Reg)"("zirgen/circuit/recursion/micro.cpp":15:17))
    auto x3087 = args[0][17 * steps + ((cycle - 0) & mask)];
    assert(x3087 != Fp::invalid());
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/micro_ops(recursion::MicroInsts)/inst[2](recursion::MicroInst)/operand[2](Reg)"("zirgen/circuit/recursion/micro.cpp":16:17))
    auto x3088 = args[0][18 * steps + ((cycle - 0) & mask)];
    assert(x3088 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[2](recursion::MicroOp)/decode(OneHot)/constop(Reg)"("zirgen/circuit/recursion/micro.cpp":19:44))
    auto x3089 = args[2][114 * steps + ((cycle - 0) & mask)];
    assert(x3089 != Fp::invalid());
    if (x3089 != 0) {
      host_args.at(0) = x3086;
      host_args.at(1) = x3087;
      host_args.at(2) = x3088;
      host_args.at(3) = x2353;
      host(ctx, "log", "CONST: %e", host_args.data(), 4, host_outs.data(), 0);
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][36 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][37 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][38 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][39 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][40 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][41 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][42 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][43 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][44 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][45 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3053);
        reg = x3053;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][46 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3086);
        reg = x3086;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][47 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3087);
        reg = x3087;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][48 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3088);
        reg = x3088;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][49 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x3090 = args[2][45 * steps + ((cycle - 0) & mask)];
        assert(x3090 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3091 = args[2][46 * steps + ((cycle - 0) & mask)];
        assert(x3091 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3092 = args[2][47 * steps + ((cycle - 0) & mask)];
        assert(x3092 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3093 = args[2][48 * steps + ((cycle - 0) & mask)];
        assert(x3093 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3094 = args[2][49 * steps + ((cycle - 0) & mask)];
        assert(x3094 != Fp::invalid());
        host_args.at(0) = x3090;
        host_args.at(1) = x3091;
        host_args.at(2) = x3092;
        host_args.at(3) = x3093;
        host_args.at(4) = x3094;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
    }
    if (x3076 != 0) {
      {
        host_args.at(0) = x3086;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3095 = host_outs.at(0);
        auto x3096 = host_outs.at(1);
        auto x3097 = host_outs.at(2);
        auto x3098 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3095);
          reg = x3095;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][37 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3096);
          reg = x3096;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][38 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3097);
          reg = x3097;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][39 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3098);
          reg = x3098;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3086);
        reg = x3086;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3099 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x3099 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3100 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x3100 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3101 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x3101 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3102 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x3102 != Fp::invalid());
      {
        host_args.at(0) = x3087;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3103 = host_outs.at(0);
        auto x3104 = host_outs.at(1);
        auto x3105 = host_outs.at(2);
        auto x3106 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][41 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3103);
          reg = x3103;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][42 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3104);
          reg = x3104;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][43 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3105);
          reg = x3105;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][44 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3106);
          reg = x3106;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][40 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3087);
        reg = x3087;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3107 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x3107 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3108 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x3108 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3109 = args[2][43 * steps + ((cycle - 0) & mask)];
      assert(x3109 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3110 = args[2][44 * steps + ((cycle - 0) & mask)];
      assert(x3110 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":28:30)
      auto x3111 = x3099 + x3107;
      // loc("zirgen/circuit/recursion/micro.cpp":28:30)
      auto x3112 = x3100 + x3108;
      // loc("zirgen/circuit/recursion/micro.cpp":28:30)
      auto x3113 = x3101 + x3109;
      // loc("zirgen/circuit/recursion/micro.cpp":28:30)
      auto x3114 = x3102 + x3110;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][45 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3053);
        reg = x3053;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][46 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3111);
        reg = x3111;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][47 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3112);
        reg = x3112;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][48 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3113);
        reg = x3113;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][49 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3114);
        reg = x3114;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x3115 = args[2][45 * steps + ((cycle - 0) & mask)];
        assert(x3115 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3116 = args[2][46 * steps + ((cycle - 0) & mask)];
        assert(x3116 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3117 = args[2][47 * steps + ((cycle - 0) & mask)];
        assert(x3117 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3118 = args[2][48 * steps + ((cycle - 0) & mask)];
        assert(x3118 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3119 = args[2][49 * steps + ((cycle - 0) & mask)];
        assert(x3119 != Fp::invalid());
        host_args.at(0) = x3115;
        host_args.at(1) = x3116;
        host_args.at(2) = x3117;
        host_args.at(3) = x3118;
        host_args.at(4) = x3119;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3120 = args[2][46 * steps + ((cycle - 0) & mask)];
      assert(x3120 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3121 = args[2][47 * steps + ((cycle - 0) & mask)];
      assert(x3121 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3122 = args[2][48 * steps + ((cycle - 0) & mask)];
      assert(x3122 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3123 = args[2][49 * steps + ((cycle - 0) & mask)];
      assert(x3123 != Fp::invalid());
      host_args.at(0) = x3099;
      host_args.at(1) = x3100;
      host_args.at(2) = x3101;
      host_args.at(3) = x3102;
      host_args.at(4) = x3107;
      host_args.at(5) = x3108;
      host_args.at(6) = x3109;
      host_args.at(7) = x3110;
      host_args.at(8) = x3120;
      host_args.at(9) = x3121;
      host_args.at(10) = x3122;
      host_args.at(11) = x3123;
      host(ctx, "log", "ADD: %e + %e -> %e", host_args.data(), 12, host_outs.data(), 0);
    }
    if (x3077 != 0) {
      {
        host_args.at(0) = x3086;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3124 = host_outs.at(0);
        auto x3125 = host_outs.at(1);
        auto x3126 = host_outs.at(2);
        auto x3127 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3124);
          reg = x3124;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][37 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3125);
          reg = x3125;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][38 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3126);
          reg = x3126;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][39 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3127);
          reg = x3127;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3086);
        reg = x3086;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3128 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x3128 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3129 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x3129 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3130 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x3130 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3131 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x3131 != Fp::invalid());
      {
        host_args.at(0) = x3087;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3132 = host_outs.at(0);
        auto x3133 = host_outs.at(1);
        auto x3134 = host_outs.at(2);
        auto x3135 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][41 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3132);
          reg = x3132;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][42 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3133);
          reg = x3133;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][43 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3134);
          reg = x3134;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][44 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3135);
          reg = x3135;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][40 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3087);
        reg = x3087;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3136 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x3136 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3137 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x3137 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3138 = args[2][43 * steps + ((cycle - 0) & mask)];
      assert(x3138 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3139 = args[2][44 * steps + ((cycle - 0) & mask)];
      assert(x3139 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":34:30)
      auto x3140 = x3128 - x3136;
      // loc("zirgen/circuit/recursion/micro.cpp":34:30)
      auto x3141 = x3129 - x3137;
      // loc("zirgen/circuit/recursion/micro.cpp":34:30)
      auto x3142 = x3130 - x3138;
      // loc("zirgen/circuit/recursion/micro.cpp":34:30)
      auto x3143 = x3131 - x3139;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][45 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3053);
        reg = x3053;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][46 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3140);
        reg = x3140;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][47 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3141);
        reg = x3141;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][48 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3142);
        reg = x3142;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][49 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3143);
        reg = x3143;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x3144 = args[2][45 * steps + ((cycle - 0) & mask)];
        assert(x3144 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3145 = args[2][46 * steps + ((cycle - 0) & mask)];
        assert(x3145 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3146 = args[2][47 * steps + ((cycle - 0) & mask)];
        assert(x3146 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3147 = args[2][48 * steps + ((cycle - 0) & mask)];
        assert(x3147 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3148 = args[2][49 * steps + ((cycle - 0) & mask)];
        assert(x3148 != Fp::invalid());
        host_args.at(0) = x3144;
        host_args.at(1) = x3145;
        host_args.at(2) = x3146;
        host_args.at(3) = x3147;
        host_args.at(4) = x3148;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3149 = args[2][46 * steps + ((cycle - 0) & mask)];
      assert(x3149 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3150 = args[2][47 * steps + ((cycle - 0) & mask)];
      assert(x3150 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3151 = args[2][48 * steps + ((cycle - 0) & mask)];
      assert(x3151 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3152 = args[2][49 * steps + ((cycle - 0) & mask)];
      assert(x3152 != Fp::invalid());
      host_args.at(0) = x3128;
      host_args.at(1) = x3129;
      host_args.at(2) = x3130;
      host_args.at(3) = x3131;
      host_args.at(4) = x3136;
      host_args.at(5) = x3137;
      host_args.at(6) = x3138;
      host_args.at(7) = x3139;
      host_args.at(8) = x3149;
      host_args.at(9) = x3150;
      host_args.at(10) = x3151;
      host_args.at(11) = x3152;
      host(ctx, "log", "SUB: %e - %e -> %e", host_args.data(), 12, host_outs.data(), 0);
    }
    if (x3078 != 0) {
      {
        host_args.at(0) = x3086;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3153 = host_outs.at(0);
        auto x3154 = host_outs.at(1);
        auto x3155 = host_outs.at(2);
        auto x3156 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3153);
          reg = x3153;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][37 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3154);
          reg = x3154;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][38 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3155);
          reg = x3155;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][39 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3156);
          reg = x3156;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3086);
        reg = x3086;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3157 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x3157 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3158 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x3158 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3159 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x3159 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3160 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x3160 != Fp::invalid());
      {
        host_args.at(0) = x3087;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3161 = host_outs.at(0);
        auto x3162 = host_outs.at(1);
        auto x3163 = host_outs.at(2);
        auto x3164 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][41 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3161);
          reg = x3161;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][42 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3162);
          reg = x3162;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][43 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3163);
          reg = x3163;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][44 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3164);
          reg = x3164;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][40 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3087);
        reg = x3087;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3165 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x3165 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3166 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x3166 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3167 = args[2][43 * steps + ((cycle - 0) & mask)];
      assert(x3167 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3168 = args[2][44 * steps + ((cycle - 0) & mask)];
      assert(x3168 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3169 = x3157 * x3165;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3170 = x3158 * x3168;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3171 = x3159 * x3167;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3172 = x3170 + x3171;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3173 = x3160 * x3166;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3174 = x3172 + x3173;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3175 = x3174 * x2341;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3176 = x3169 + x3175;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3177 = x3157 * x3166;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3178 = x3158 * x3165;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3179 = x3177 + x3178;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3180 = x3159 * x3168;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3181 = x3160 * x3167;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3182 = x3180 + x3181;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3183 = x3182 * x2341;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3184 = x3179 + x3183;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3185 = x3157 * x3167;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3186 = x3158 * x3166;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3187 = x3185 + x3186;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3188 = x3159 * x3165;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3189 = x3187 + x3188;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3190 = x3160 * x3168;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3191 = x3190 * x2341;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3192 = x3189 + x3191;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3193 = x3157 * x3168;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3194 = x3158 * x3167;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3195 = x3193 + x3194;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3196 = x3159 * x3166;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3197 = x3195 + x3196;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3198 = x3160 * x3165;
      // loc("zirgen/circuit/recursion/micro.cpp":40:30)
      auto x3199 = x3197 + x3198;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][45 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3053);
        reg = x3053;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][46 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3176);
        reg = x3176;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][47 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3184);
        reg = x3184;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][48 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3192);
        reg = x3192;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][49 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3199);
        reg = x3199;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x3200 = args[2][45 * steps + ((cycle - 0) & mask)];
        assert(x3200 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3201 = args[2][46 * steps + ((cycle - 0) & mask)];
        assert(x3201 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3202 = args[2][47 * steps + ((cycle - 0) & mask)];
        assert(x3202 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3203 = args[2][48 * steps + ((cycle - 0) & mask)];
        assert(x3203 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3204 = args[2][49 * steps + ((cycle - 0) & mask)];
        assert(x3204 != Fp::invalid());
        host_args.at(0) = x3200;
        host_args.at(1) = x3201;
        host_args.at(2) = x3202;
        host_args.at(3) = x3203;
        host_args.at(4) = x3204;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3205 = args[2][46 * steps + ((cycle - 0) & mask)];
      assert(x3205 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3206 = args[2][47 * steps + ((cycle - 0) & mask)];
      assert(x3206 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3207 = args[2][48 * steps + ((cycle - 0) & mask)];
      assert(x3207 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3208 = args[2][49 * steps + ((cycle - 0) & mask)];
      assert(x3208 != Fp::invalid());
      host_args.at(0) = x3157;
      host_args.at(1) = x3158;
      host_args.at(2) = x3159;
      host_args.at(3) = x3160;
      host_args.at(4) = x3165;
      host_args.at(5) = x3166;
      host_args.at(6) = x3167;
      host_args.at(7) = x3168;
      host_args.at(8) = x3205;
      host_args.at(9) = x3206;
      host_args.at(10) = x3207;
      host_args.at(11) = x3208;
      host(ctx, "log", "MUL: %e * %e -> %e", host_args.data(), 12, host_outs.data(), 0);
    }
    // loc("zirgen/circuit/recursion/micro.cpp":43:56)
    auto x3209 = x3079 * x3087;
    if (x3209 != 0) {
      {
        host_args.at(0) = x3086;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3210 = host_outs.at(0);
        auto x3211 = host_outs.at(1);
        auto x3212 = host_outs.at(2);
        auto x3213 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3210);
          reg = x3210;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][37 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3211);
          reg = x3211;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][38 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3212);
          reg = x3212;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][39 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3213);
          reg = x3213;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3086);
        reg = x3086;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3214 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x3214 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3215 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x3215 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3216 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x3216 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3217 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x3217 != Fp::invalid());
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][40 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][41 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][42 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][43 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][44 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3218 = x3214 * x3214;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3219 = x3217 + x3217;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3220 = x3215 * x3219;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3221 = x3216 * x3216;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3222 = x3220 - x3221;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3223 = x3222 * x2342;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3224 = x3218 + x3223;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3225 = x3216 + x3216;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3226 = x3214 * x3225;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3227 = x3215 * x3215;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3228 = x3226 - x3227;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3229 = x3217 * x3217;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3230 = x3229 * x2342;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3231 = x3228 + x3230;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3232 = x3224 * x3224;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3233 = x3231 * x2342;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3234 = x3233 * x3231;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3235 = x3232 + x3234;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3236 = inv(x3235);
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3237 = x3224 * x3236;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3238 = x3231 * x3236;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3239 = x3214 * x3237;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3240 = x3216 * x2342;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3241 = x3240 * x3238;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3242 = x3239 + x3241;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3243 = -x3215;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3244 = x3243 * x3237;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3245 = x3217 * x2342;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3246 = x3245 * x3238;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3247 = x3244 - x3246;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3248 = -x3214;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3249 = x3248 * x3238;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3250 = x3216 * x3237;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3251 = x3249 + x3250;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3252 = x3215 * x3238;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3253 = x3217 * x3237;
        // loc("zirgen/circuit/recursion/micro.cpp":46:42)
        auto x3254 = x3252 - x3253;
        // loc("zirgen/circuit/recursion/wom.cpp":85:3)
        {
          auto& reg = args[2][45 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3053);
          reg = x3053;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][46 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3242);
          reg = x3242;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][47 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3247);
          reg = x3247;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][48 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3251);
          reg = x3251;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][49 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3254);
          reg = x3254;
        }
        {
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
          auto x3255 = args[2][45 * steps + ((cycle - 0) & mask)];
          assert(x3255 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x3256 = args[2][46 * steps + ((cycle - 0) & mask)];
          assert(x3256 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x3257 = args[2][47 * steps + ((cycle - 0) & mask)];
          assert(x3257 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x3258 = args[2][48 * steps + ((cycle - 0) & mask)];
          assert(x3258 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x3259 = args[2][49 * steps + ((cycle - 0) & mask)];
          assert(x3259 != Fp::invalid());
          host_args.at(0) = x3255;
          host_args.at(1) = x3256;
          host_args.at(2) = x3257;
          host_args.at(3) = x3258;
          host_args.at(4) = x3259;
          host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3260 = args[2][46 * steps + ((cycle - 0) & mask)];
      assert(x3260 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3261 = args[2][47 * steps + ((cycle - 0) & mask)];
      assert(x3261 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3262 = args[2][48 * steps + ((cycle - 0) & mask)];
      assert(x3262 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3263 = args[2][49 * steps + ((cycle - 0) & mask)];
      assert(x3263 != Fp::invalid());
      host_args.at(0) = x3214;
      host_args.at(1) = x3215;
      host_args.at(2) = x3216;
      host_args.at(3) = x3217;
      host_args.at(4) = x3260;
      host_args.at(5) = x3261;
      host_args.at(6) = x3262;
      host_args.at(7) = x3263;
      host(ctx, "log", "INV: %e -> %e", host_args.data(), 8, host_outs.data(), 0);
    }
    // loc("zirgen/circuit/recursion/micro.cpp":50:62)
    auto x3264 = x2352 - x3087;
    // loc("zirgen/circuit/recursion/micro.cpp":50:62)
    auto x3265 = x3079 * x3264;
    if (x3265 != 0) {
      {
        host_args.at(0) = x3086;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3266 = host_outs.at(0);
        auto x3267 = host_outs.at(1);
        auto x3268 = host_outs.at(2);
        auto x3269 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3266);
          reg = x3266;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][37 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3267);
          reg = x3267;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][38 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3268);
          reg = x3268;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][39 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3269);
          reg = x3269;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3086);
        reg = x3086;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][40 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][41 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][42 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][43 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][44 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3270 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x3270 != Fp::invalid());
      {
        // loc("zirgen/circuit/recursion/micro.cpp":55:22)
        auto x3271 = inv(x3270);
        // loc("zirgen/circuit/recursion/micro.cpp":55:7)
        {
          auto& reg = args[2][125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3271);
          reg = x3271;
        }
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[2](recursion::MicroOp)/extra(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
        auto x3272 = args[2][125 * steps + ((cycle - 0) & mask)];
        assert(x3272 != Fp::invalid());
        // loc("zirgen/circuit/recursion/micro.cpp":56:36)
        auto x3273 = x3272 * x3270;
        // loc("zirgen/circuit/recursion/micro.cpp":56:32)
        auto x3274 = x2352 - x3273;
        // loc("zirgen/circuit/recursion/wom.cpp":85:3)
        {
          auto& reg = args[2][45 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3053);
          reg = x3053;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][46 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3274);
          reg = x3274;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][47 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][48 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][49 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        {
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
          auto x3275 = args[2][45 * steps + ((cycle - 0) & mask)];
          assert(x3275 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x3276 = args[2][46 * steps + ((cycle - 0) & mask)];
          assert(x3276 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x3277 = args[2][47 * steps + ((cycle - 0) & mask)];
          assert(x3277 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x3278 = args[2][48 * steps + ((cycle - 0) & mask)];
          assert(x3278 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x3279 = args[2][49 * steps + ((cycle - 0) & mask)];
          assert(x3279 != Fp::invalid());
          host_args.at(0) = x3275;
          host_args.at(1) = x3276;
          host_args.at(2) = x3277;
          host_args.at(3) = x3278;
          host_args.at(4) = x3279;
          host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3280 = args[2][46 * steps + ((cycle - 0) & mask)];
      assert(x3280 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3281 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x3281 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3282 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x3282 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3283 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x3283 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3284 = args[2][47 * steps + ((cycle - 0) & mask)];
      assert(x3284 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3285 = args[2][48 * steps + ((cycle - 0) & mask)];
      assert(x3285 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3286 = args[2][49 * steps + ((cycle - 0) & mask)];
      assert(x3286 != Fp::invalid());
      host_args.at(0) = x3270;
      host_args.at(1) = x3281;
      host_args.at(2) = x3282;
      host_args.at(3) = x3283;
      host_args.at(4) = x3280;
      host_args.at(5) = x3284;
      host_args.at(6) = x3285;
      host_args.at(7) = x3286;
      host(ctx, "log", "IS_ZERO: %e -> %e", host_args.data(), 8, host_outs.data(), 0);
    }
    if (x3080 != 0) {
      {
        host_args.at(0) = x3086;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3287 = host_outs.at(0);
        auto x3288 = host_outs.at(1);
        auto x3289 = host_outs.at(2);
        auto x3290 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3287);
          reg = x3287;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][37 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3288);
          reg = x3288;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][38 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3289);
          reg = x3289;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][39 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3290);
          reg = x3290;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3086);
        reg = x3086;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3291 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x3291 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3292 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x3292 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3293 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x3293 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3294 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x3294 != Fp::invalid());
      {
        host_args.at(0) = x3087;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3295 = host_outs.at(0);
        auto x3296 = host_outs.at(1);
        auto x3297 = host_outs.at(2);
        auto x3298 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][41 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3295);
          reg = x3295;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][42 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3296);
          reg = x3296;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][43 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3297);
          reg = x3297;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][44 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3298);
          reg = x3298;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][40 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3087);
        reg = x3087;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3299 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x3299 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3300 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x3300 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3301 = args[2][43 * steps + ((cycle - 0) & mask)];
      assert(x3301 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3302 = args[2][44 * steps + ((cycle - 0) & mask)];
      assert(x3302 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":71:30)
      auto x3303 = x3291 - x3299;
      // loc("zirgen/circuit/recursion/micro.cpp":71:30)
      auto x3304 = x3292 - x3300;
      // loc("zirgen/circuit/recursion/micro.cpp":71:30)
      auto x3305 = x3293 - x3301;
      // loc("zirgen/circuit/recursion/micro.cpp":71:30)
      auto x3306 = x3294 - x3302;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][45 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3053);
        reg = x3053;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][46 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3303);
        reg = x3303;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][47 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3304);
        reg = x3304;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][48 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3305);
        reg = x3305;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][49 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3306);
        reg = x3306;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x3307 = args[2][45 * steps + ((cycle - 0) & mask)];
        assert(x3307 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3308 = args[2][46 * steps + ((cycle - 0) & mask)];
        assert(x3308 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3309 = args[2][47 * steps + ((cycle - 0) & mask)];
        assert(x3309 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3310 = args[2][48 * steps + ((cycle - 0) & mask)];
        assert(x3310 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3311 = args[2][49 * steps + ((cycle - 0) & mask)];
        assert(x3311 != Fp::invalid());
        host_args.at(0) = x3307;
        host_args.at(1) = x3308;
        host_args.at(2) = x3309;
        host_args.at(3) = x3310;
        host_args.at(4) = x3311;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      host_args.at(0) = x3291;
      host_args.at(1) = x3292;
      host_args.at(2) = x3293;
      host_args.at(3) = x3294;
      host_args.at(4) = x3299;
      host_args.at(5) = x3300;
      host_args.at(6) = x3301;
      host_args.at(7) = x3302;
      host(ctx, "log", "EQ: %e == %e", host_args.data(), 8, host_outs.data(), 0);
    }
    if (x3081 != 0) {
      host_args.at(0) = x3086;
      host_args.at(1) = x3087;
      host(ctx, "log", "READ_IOP_HEADER: %u %u", host_args.data(), 2, host_outs.data(), 0);
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][36 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][37 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][38 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][39 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][40 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][41 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][42 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][43 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][44 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][45 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3053);
        reg = x3053;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][46 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][47 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][48 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][49 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x3312 = args[2][45 * steps + ((cycle - 0) & mask)];
        assert(x3312 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3313 = args[2][46 * steps + ((cycle - 0) & mask)];
        assert(x3313 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3314 = args[2][47 * steps + ((cycle - 0) & mask)];
        assert(x3314 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3315 = args[2][48 * steps + ((cycle - 0) & mask)];
        assert(x3315 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3316 = args[2][49 * steps + ((cycle - 0) & mask)];
        assert(x3316 != Fp::invalid());
        host_args.at(0) = x3312;
        host_args.at(1) = x3313;
        host_args.at(2) = x3314;
        host_args.at(3) = x3315;
        host_args.at(4) = x3316;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      {
        host_args.at(0) = x3086;
        host_args.at(1) = x3087;
        host(ctx, "readIOPHeader", "", host_args.data(), 2, host_outs.data(), 0);
      }
    }
    if (x3082 != 0) {
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][36 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][37 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][38 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][39 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][40 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][41 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][42 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][43 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][44 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        host_args.at(0) = x3086;
        host_args.at(1) = x3087;
        host_args.at(2) = x3088;
        host(ctx, "readIOPBody", "", host_args.data(), 3, host_outs.data(), 4);
        auto x3317 = host_outs.at(0);
        auto x3318 = host_outs.at(1);
        auto x3319 = host_outs.at(2);
        auto x3320 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":85:3)
        {
          auto& reg = args[2][45 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3053);
          reg = x3053;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][46 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3317);
          reg = x3317;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][47 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3318);
          reg = x3318;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][48 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3319);
          reg = x3319;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][49 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3320);
          reg = x3320;
        }
        {
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
          auto x3321 = args[2][45 * steps + ((cycle - 0) & mask)];
          assert(x3321 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x3322 = args[2][46 * steps + ((cycle - 0) & mask)];
          assert(x3322 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x3323 = args[2][47 * steps + ((cycle - 0) & mask)];
          assert(x3323 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x3324 = args[2][48 * steps + ((cycle - 0) & mask)];
          assert(x3324 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x3325 = args[2][49 * steps + ((cycle - 0) & mask)];
          assert(x3325 != Fp::invalid());
          host_args.at(0) = x3321;
          host_args.at(1) = x3322;
          host_args.at(2) = x3323;
          host_args.at(3) = x3324;
          host_args.at(4) = x3325;
          host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3326 = args[2][46 * steps + ((cycle - 0) & mask)];
      assert(x3326 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3327 = args[2][47 * steps + ((cycle - 0) & mask)];
      assert(x3327 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3328 = args[2][48 * steps + ((cycle - 0) & mask)];
      assert(x3328 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3329 = args[2][49 * steps + ((cycle - 0) & mask)];
      assert(x3329 != Fp::invalid());
      host_args.at(0) = x3086;
      host_args.at(1) = x3087;
      host_args.at(2) = x3326;
      host_args.at(3) = x3327;
      host_args.at(4) = x3328;
      host_args.at(5) = x3329;
      host(ctx, "log", "READ_IOP_BODY: %u %u -> %e", host_args.data(), 6, host_outs.data(), 0);
    }
    if (x3083 != 0) {
      host_args.at(0) = x3086;
      host_args.at(1) = x3087;
      host_args.at(2) = x3088;
      host(ctx, "log", "MIX_RNG: %u, %u, %u", host_args.data(), 3, host_outs.data(), 0);
      {
        host_args.at(0) = x3086;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3330 = host_outs.at(0);
        auto x3331 = host_outs.at(1);
        auto x3332 = host_outs.at(2);
        auto x3333 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3330);
          reg = x3330;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][37 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3331);
          reg = x3331;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][38 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3332);
          reg = x3332;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][39 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3333);
          reg = x3333;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3086);
        reg = x3086;
      }
      {
        host_args.at(0) = x3087;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3334 = host_outs.at(0);
        auto x3335 = host_outs.at(1);
        auto x3336 = host_outs.at(2);
        auto x3337 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][41 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3334);
          reg = x3334;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][42 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3335);
          reg = x3335;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][43 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3336);
          reg = x3336;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][44 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3337);
          reg = x3337;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][40 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3087);
        reg = x3087;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3338 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x3338 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3339 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x3339 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3340 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x3340 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3341 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x3341 != Fp::invalid());
      host_args.at(0) = x3338;
      host_args.at(1) = x3339;
      host_args.at(2) = x3340;
      host_args.at(3) = x3341;
      host(ctx, "log", "  in0=[%x %x], in1=[%x %x]", host_args.data(), 4, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/op[1](recursion::MicroOp)/extra(Reg)"("zirgen/circuit/recursion/micro.cpp":107:71))
      auto x3342 = args[2][113 * steps + ((cycle - 0) & mask)];
      if (x3342 == Fp::invalid()) x3342 = 0;
      // loc("zirgen/circuit/recursion/micro.cpp":107:15)
      auto x3343 = x3088 * x3342;
      host_args.at(0) = x3343;
      host(ctx, "log", "  prev_val = %u", host_args.data(), 1, host_outs.data(), 0);
      // loc("zirgen/circuit/recursion/micro.cpp":109:11)
      auto x3344 = x3343 * x2340;
      // loc("zirgen/circuit/recursion/micro.cpp":109:11)
      auto x3345 = x3344 + x3339;
      // loc("zirgen/circuit/recursion/micro.cpp":110:11)
      auto x3346 = x3345 * x2340;
      // loc("zirgen/circuit/recursion/micro.cpp":110:11)
      auto x3347 = x3346 + x3338;
      // loc("zirgen/circuit/recursion/micro.cpp":111:11)
      auto x3348 = x3347 * x2340;
      // loc("zirgen/circuit/recursion/micro.cpp":111:11)
      auto x3349 = x3348 + x3341;
      // loc("zirgen/circuit/recursion/micro.cpp":112:11)
      auto x3350 = x3349 * x2340;
      // loc("zirgen/circuit/recursion/micro.cpp":112:11)
      auto x3351 = x3350 + x3340;
      host_args.at(0) = x3351;
      host(ctx, "log", "  val = %u", host_args.data(), 1, host_outs.data(), 0);
      // loc("zirgen/circuit/recursion/micro.cpp":114:5)
      {
        auto& reg = args[2][125 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3351);
        reg = x3351;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][45 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3053);
        reg = x3053;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][46 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3351);
        reg = x3351;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][47 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][48 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][49 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x3352 = args[2][45 * steps + ((cycle - 0) & mask)];
        assert(x3352 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3353 = args[2][46 * steps + ((cycle - 0) & mask)];
        assert(x3353 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3354 = args[2][47 * steps + ((cycle - 0) & mask)];
        assert(x3354 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3355 = args[2][48 * steps + ((cycle - 0) & mask)];
        assert(x3355 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3356 = args[2][49 * steps + ((cycle - 0) & mask)];
        assert(x3356 != Fp::invalid());
        host_args.at(0) = x3352;
        host_args.at(1) = x3353;
        host_args.at(2) = x3354;
        host_args.at(3) = x3355;
        host_args.at(4) = x3356;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
    }
    if (x3084 != 0) {
      {
        host_args.at(0) = x3086;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3357 = host_outs.at(0);
        auto x3358 = host_outs.at(1);
        auto x3359 = host_outs.at(2);
        auto x3360 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3357);
          reg = x3357;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][37 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3358);
          reg = x3358;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][38 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3359);
          reg = x3359;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][39 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3360);
          reg = x3360;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3086);
        reg = x3086;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3361 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x3361 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":119:31)
      auto x3362 = x3088 * x3361;
      // loc("zirgen/circuit/recursion/micro.cpp":119:17)
      auto x3363 = x3087 + x3362;
      {
        host_args.at(0) = x3363;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3364 = host_outs.at(0);
        auto x3365 = host_outs.at(1);
        auto x3366 = host_outs.at(2);
        auto x3367 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][41 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3364);
          reg = x3364;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][42 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3365);
          reg = x3365;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][43 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3366);
          reg = x3366;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][44 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3367);
          reg = x3367;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][40 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3363);
        reg = x3363;
      }
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3368 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x3368 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3369 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x3369 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3370 = args[2][43 * steps + ((cycle - 0) & mask)];
      assert(x3370 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3371 = args[2][44 * steps + ((cycle - 0) & mask)];
      assert(x3371 != Fp::invalid());
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][45 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3053);
        reg = x3053;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][46 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3368);
        reg = x3368;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][47 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3369);
        reg = x3369;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][48 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3370);
        reg = x3370;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][49 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3371);
        reg = x3371;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x3372 = args[2][45 * steps + ((cycle - 0) & mask)];
        assert(x3372 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3373 = args[2][46 * steps + ((cycle - 0) & mask)];
        assert(x3373 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3374 = args[2][47 * steps + ((cycle - 0) & mask)];
        assert(x3374 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3375 = args[2][48 * steps + ((cycle - 0) & mask)];
        assert(x3375 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3376 = args[2][49 * steps + ((cycle - 0) & mask)];
        assert(x3376 != Fp::invalid());
        host_args.at(0) = x3372;
        host_args.at(1) = x3373;
        host_args.at(2) = x3374;
        host_args.at(3) = x3375;
        host_args.at(4) = x3376;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      host_args.at(0) = x3086;
      host_args.at(1) = x3087;
      host_args.at(2) = x3088;
      host_args.at(3) = x3361;
      host_args.at(4) = x3368;
      host_args.at(5) = x3369;
      host_args.at(6) = x3370;
      host_args.at(7) = x3371;
      host_args.at(8) = x3053;
      host(ctx, "log", "SELECT, idx = %u, start = %u, step = %u, idx = %u, writing %e to %u", host_args.data(), 9, host_outs.data(), 0);
    }
    if (x3085 != 0) {
      {
        host_args.at(0) = x3086;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3377 = host_outs.at(0);
        auto x3378 = host_outs.at(1);
        auto x3379 = host_outs.at(2);
        auto x3380 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3377);
          reg = x3377;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][37 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3378);
          reg = x3378;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][38 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3379);
          reg = x3379;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][39 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3380);
          reg = x3380;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3086);
        reg = x3086;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][40 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][41 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][42 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][43 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][44 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/micro.cpp":132:15)
      auto x3381 = x3087 * x3088;
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3382 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x3382 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":132:15)
      auto x3383 = x3381 * x3382;
      // loc("zirgen/circuit/recursion/micro.cpp":133:30)
      auto x3384 = x2352 - x3088;
      // loc("zirgen/circuit/recursion/micro.cpp":133:15)
      auto x3385 = x3087 * x3384;
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3386 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x3386 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":133:15)
      auto x3387 = x3385 * x3386;
      // loc("zirgen/circuit/recursion/micro.cpp":132:15)
      auto x3388 = x3383 + x3387;
      // loc("zirgen/circuit/recursion/micro.cpp":134:15)
      auto x3389 = x3264 * x3088;
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3390 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x3390 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":134:15)
      auto x3391 = x3389 * x3390;
      // loc("zirgen/circuit/recursion/micro.cpp":132:15)
      auto x3392 = x3388 + x3391;
      // loc("zirgen/circuit/recursion/micro.cpp":135:15)
      auto x3393 = x3264 * x3384;
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3394 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x3394 != Fp::invalid());
      // loc("zirgen/circuit/recursion/micro.cpp":135:15)
      auto x3395 = x3393 * x3394;
      // loc("zirgen/circuit/recursion/micro.cpp":132:15)
      auto x3396 = x3392 + x3395;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][45 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3053);
        reg = x3053;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][46 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3396);
        reg = x3396;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][47 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][48 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][49 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x3397 = args[2][45 * steps + ((cycle - 0) & mask)];
        assert(x3397 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3398 = args[2][46 * steps + ((cycle - 0) & mask)];
        assert(x3398 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3399 = args[2][47 * steps + ((cycle - 0) & mask)];
        assert(x3399 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3400 = args[2][48 * steps + ((cycle - 0) & mask)];
        assert(x3400 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3401 = args[2][49 * steps + ((cycle - 0) & mask)];
        assert(x3401 != Fp::invalid());
        host_args.at(0) = x3397;
        host_args.at(1) = x3398;
        host_args.at(2) = x3399;
        host_args.at(3) = x3400;
        host_args.at(4) = x3401;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
    }
  }
  // loc("top(recursion::Top)/code(recursion::Code)/select(OneHot)/macro_ops(Reg)"("./zirgen/components/mux.h":49:25))
  auto x3402 = args[0][2 * steps + ((cycle - 0) & mask)];
  assert(x3402 != Fp::invalid());
  if (x3402 != 0) {
    // loc("top(recursion::Top)/code(recursion::Code)/write_addr(Reg)"("zirgen/circuit/recursion/top.cpp":22:49))
    auto x3403 = args[0][0 * steps + ((cycle - 0) & mask)];
    assert(x3403 != Fp::invalid());
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/opcode(OneHot)/wom_init(Reg)"("./zirgen/components/mux.h":49:25))
    auto x3404 = args[0][8 * steps + ((cycle - 0) & mask)];
    assert(x3404 != Fp::invalid());
    if (x3404 != 0) {
      host(ctx, "log", "WOM_INIT", host_args.data(), 0, host_outs.data(), 0);
    }
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/opcode(OneHot)/wom_fini(Reg)"("./zirgen/components/mux.h":49:25))
    auto x3405 = args[0][9 * steps + ((cycle - 0) & mask)];
    assert(x3405 != Fp::invalid());
    if (x3405 != 0) {
      host(ctx, "log", "WOM_FINI", host_args.data(), 0, host_outs.data(), 0);
      // loc("zirgen/circuit/recursion/wom.cpp":17:3)
      {
        auto& reg = args[2][11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3403);
        reg = x3403;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][12 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][13 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][14 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
    }
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/opcode(OneHot)/bit_and_elem(Reg)"("./zirgen/components/mux.h":49:25))
    auto x3406 = args[0][10 * steps + ((cycle - 0) & mask)];
    assert(x3406 != Fp::invalid());
    if (x3406 != 0) {
      // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3407 = args[0][17 * steps + ((cycle - 0) & mask)];
      assert(x3407 != Fp::invalid());
      {
        host_args.at(0) = x3407;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3408 = host_outs.at(0);
        auto x3409 = host_outs.at(1);
        auto x3410 = host_outs.at(2);
        auto x3411 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3408);
          reg = x3408;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3409);
          reg = x3409;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3410);
          reg = x3410;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3411);
          reg = x3411;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3407);
        reg = x3407;
      }
      // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3412 = args[0][18 * steps + ((cycle - 0) & mask)];
      assert(x3412 != Fp::invalid());
      {
        host_args.at(0) = x3412;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3413 = host_outs.at(0);
        auto x3414 = host_outs.at(1);
        auto x3415 = host_outs.at(2);
        auto x3416 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3413);
          reg = x3413;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3414);
          reg = x3414;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3415);
          reg = x3415;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3416);
          reg = x3416;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3412);
        reg = x3412;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3417 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3417 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3418 = Fp(x3417.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3418);
          reg = x3418;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3419 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3419 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3420 = Fp(x3419.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][37 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3420);
          reg = x3420;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3421 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x3421 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3422 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x3422 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3423 = x3421 * x3422;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3424 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3424 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3425 = Fp(x3424.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3426 = x3425 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][38 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3426);
          reg = x3426;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3427 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3427 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3428 = Fp(x3427.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3429 = x3428 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][39 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3429);
          reg = x3429;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3430 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x3430 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3431 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x3431 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3432 = x3430 * x3431;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3433 = x3432 * x2351;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3434 = x3423 + x3433;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3435 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3435 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3436 = Fp(x3435.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3437 = x3436 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][40 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3437);
          reg = x3437;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3438 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3438 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3439 = Fp(x3438.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3440 = x3439 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][41 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3440);
          reg = x3440;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3441 = args[2][40 * steps + ((cycle - 0) & mask)];
      assert(x3441 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3442 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x3442 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3443 = x3441 * x3442;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3444 = x3443 * x2349;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3445 = x3434 + x3444;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3446 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3446 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3447 = Fp(x3446.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3448 = x3447 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][42 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3448);
          reg = x3448;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3449 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3449 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3450 = Fp(x3449.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3451 = x3450 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][43 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3451);
          reg = x3451;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3452 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x3452 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3453 = args[2][43 * steps + ((cycle - 0) & mask)];
      assert(x3453 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3454 = x3452 * x3453;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3455 = x3454 * x2345;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3456 = x3445 + x3455;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3457 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3457 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3458 = Fp(x3457.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3459 = x3458 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][44 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3459);
          reg = x3459;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3460 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3460 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3461 = Fp(x3460.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3462 = x3461 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][45 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3462);
          reg = x3462;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3463 = args[2][44 * steps + ((cycle - 0) & mask)];
      assert(x3463 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3464 = args[2][45 * steps + ((cycle - 0) & mask)];
      assert(x3464 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3465 = x3463 * x3464;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3466 = x3465 * x2336;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3467 = x3456 + x3466;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3468 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3468 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3469 = Fp(x3468.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3470 = x3469 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][46 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3470);
          reg = x3470;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3471 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3471 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3472 = Fp(x3471.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3473 = x3472 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][47 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3473);
          reg = x3473;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3474 = args[2][46 * steps + ((cycle - 0) & mask)];
      assert(x3474 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3475 = args[2][47 * steps + ((cycle - 0) & mask)];
      assert(x3475 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3476 = x3474 * x3475;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3477 = x3476 * x2334;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3478 = x3467 + x3477;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3479 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3479 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3480 = Fp(x3479.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3481 = x3480 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][48 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3481);
          reg = x3481;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3482 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3482 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3483 = Fp(x3482.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3484 = x3483 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][49 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3484);
          reg = x3484;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3485 = args[2][48 * steps + ((cycle - 0) & mask)];
      assert(x3485 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3486 = args[2][49 * steps + ((cycle - 0) & mask)];
      assert(x3486 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3487 = x3485 * x3486;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3488 = x3487 * x2332;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3489 = x3478 + x3488;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3490 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3490 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3491 = Fp(x3490.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3492 = x3491 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][50 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3492);
          reg = x3492;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3493 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3493 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3494 = Fp(x3493.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3495 = x3494 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][51 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3495);
          reg = x3495;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3496 = args[2][50 * steps + ((cycle - 0) & mask)];
      assert(x3496 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3497 = args[2][51 * steps + ((cycle - 0) & mask)];
      assert(x3497 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3498 = x3496 * x3497;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3499 = x3498 * x2330;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3500 = x3489 + x3499;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3501 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3501 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3502 = Fp(x3501.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3503 = x3502 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][52 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3503);
          reg = x3503;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3504 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3504 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3505 = Fp(x3504.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3506 = x3505 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][53 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3506);
          reg = x3506;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3507 = args[2][52 * steps + ((cycle - 0) & mask)];
      assert(x3507 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3508 = args[2][53 * steps + ((cycle - 0) & mask)];
      assert(x3508 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3509 = x3507 * x3508;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3510 = x3509 * x2328;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3511 = x3500 + x3510;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3512 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3512 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3513 = Fp(x3512.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3514 = x3513 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][54 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3514);
          reg = x3514;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3515 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3515 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3516 = Fp(x3515.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3517 = x3516 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][55 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3517);
          reg = x3517;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3518 = args[2][54 * steps + ((cycle - 0) & mask)];
      assert(x3518 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3519 = args[2][55 * steps + ((cycle - 0) & mask)];
      assert(x3519 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3520 = x3518 * x3519;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3521 = x3520 * x2326;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3522 = x3511 + x3521;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3523 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3523 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3524 = Fp(x3523.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3525 = x3524 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][56 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3525);
          reg = x3525;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3526 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3526 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3527 = Fp(x3526.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3528 = x3527 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][57 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3528);
          reg = x3528;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3529 = args[2][56 * steps + ((cycle - 0) & mask)];
      assert(x3529 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3530 = args[2][57 * steps + ((cycle - 0) & mask)];
      assert(x3530 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3531 = x3529 * x3530;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3532 = x3531 * x2324;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3533 = x3522 + x3532;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3534 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3534 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3535 = Fp(x3534.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3536 = x3535 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][58 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3536);
          reg = x3536;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3537 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3537 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3538 = Fp(x3537.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3539 = x3538 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][59 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3539);
          reg = x3539;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3540 = args[2][58 * steps + ((cycle - 0) & mask)];
      assert(x3540 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3541 = args[2][59 * steps + ((cycle - 0) & mask)];
      assert(x3541 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3542 = x3540 * x3541;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3543 = x3542 * x2322;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3544 = x3533 + x3543;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3545 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3545 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3546 = Fp(x3545.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3547 = x3546 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][60 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3547);
          reg = x3547;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3548 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3548 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3549 = Fp(x3548.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3550 = x3549 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][61 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3550);
          reg = x3550;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3551 = args[2][60 * steps + ((cycle - 0) & mask)];
      assert(x3551 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3552 = args[2][61 * steps + ((cycle - 0) & mask)];
      assert(x3552 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3553 = x3551 * x3552;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3554 = x3553 * x2320;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3555 = x3544 + x3554;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3556 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3556 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3557 = Fp(x3556.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3558 = x3557 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][62 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3558);
          reg = x3558;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3559 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3559 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3560 = Fp(x3559.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3561 = x3560 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][63 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3561);
          reg = x3561;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3562 = args[2][62 * steps + ((cycle - 0) & mask)];
      assert(x3562 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3563 = args[2][63 * steps + ((cycle - 0) & mask)];
      assert(x3563 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3564 = x3562 * x3563;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3565 = x3564 * x2318;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3566 = x3555 + x3565;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3567 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3567 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3568 = Fp(x3567.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3569 = x3568 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][64 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3569);
          reg = x3569;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3570 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3570 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3571 = Fp(x3570.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3572 = x3571 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][65 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3572);
          reg = x3572;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3573 = args[2][64 * steps + ((cycle - 0) & mask)];
      assert(x3573 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3574 = args[2][65 * steps + ((cycle - 0) & mask)];
      assert(x3574 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3575 = x3573 * x3574;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3576 = x3575 * x2316;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3577 = x3566 + x3576;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3578 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3578 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3579 = Fp(x3578.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3580 = x3579 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][66 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3580);
          reg = x3580;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3581 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3581 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3582 = Fp(x3581.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3583 = x3582 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][67 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3583);
          reg = x3583;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3584 = args[2][66 * steps + ((cycle - 0) & mask)];
      assert(x3584 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3585 = args[2][67 * steps + ((cycle - 0) & mask)];
      assert(x3585 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3586 = x3584 * x3585;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3587 = x3586 * x2314;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3588 = x3577 + x3587;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3589 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3589 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3590 = Fp(x3589.asUInt32() & x2340.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3591 = x3590 * x2312;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][68 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3591);
          reg = x3591;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3592 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3592 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3593 = Fp(x3592.asUInt32() & x2340.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3594 = x3593 * x2312;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][69 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3594);
          reg = x3594;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3595 = args[2][68 * steps + ((cycle - 0) & mask)];
      assert(x3595 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3596 = args[2][69 * steps + ((cycle - 0) & mask)];
      assert(x3596 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3597 = x3595 * x3596;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3598 = x3597 * x2340;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3599 = x3588 + x3598;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3600 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3600 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3601 = Fp(x3600.asUInt32() & x2311.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3602 = x3601 * x2310;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3602);
          reg = x3602;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3603 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3603 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3604 = Fp(x3603.asUInt32() & x2311.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3605 = x3604 * x2310;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3605);
          reg = x3605;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3606 = args[2][70 * steps + ((cycle - 0) & mask)];
      assert(x3606 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3607 = args[2][71 * steps + ((cycle - 0) & mask)];
      assert(x3607 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3608 = x3606 * x3607;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3609 = x3608 * x2311;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3610 = x3599 + x3609;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3611 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3611 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3612 = Fp(x3611.asUInt32() & x2309.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3613 = x3612 * x2308;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][72 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3613);
          reg = x3613;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3614 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3614 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3615 = Fp(x3614.asUInt32() & x2309.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3616 = x3615 * x2308;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3616);
          reg = x3616;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3617 = args[2][72 * steps + ((cycle - 0) & mask)];
      assert(x3617 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3618 = args[2][73 * steps + ((cycle - 0) & mask)];
      assert(x3618 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3619 = x3617 * x3618;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3620 = x3619 * x2309;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3621 = x3610 + x3620;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3622 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3622 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3623 = Fp(x3622.asUInt32() & x2307.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3624 = x3623 * x2306;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3624);
          reg = x3624;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3625 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3625 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3626 = Fp(x3625.asUInt32() & x2307.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3627 = x3626 * x2306;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3627);
          reg = x3627;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3628 = args[2][74 * steps + ((cycle - 0) & mask)];
      assert(x3628 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3629 = args[2][75 * steps + ((cycle - 0) & mask)];
      assert(x3629 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3630 = x3628 * x3629;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3631 = x3630 * x2307;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3632 = x3621 + x3631;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3633 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3633 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3634 = Fp(x3633.asUInt32() & x2305.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3635 = x3634 * x2304;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3635);
          reg = x3635;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3636 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3636 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3637 = Fp(x3636.asUInt32() & x2305.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3638 = x3637 * x2304;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3638);
          reg = x3638;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3639 = args[2][76 * steps + ((cycle - 0) & mask)];
      assert(x3639 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3640 = args[2][77 * steps + ((cycle - 0) & mask)];
      assert(x3640 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3641 = x3639 * x3640;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3642 = x3641 * x2305;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3643 = x3632 + x3642;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3644 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3644 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3645 = Fp(x3644.asUInt32() & x2303.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3646 = x3645 * x2302;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3646);
          reg = x3646;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3647 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3647 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3648 = Fp(x3647.asUInt32() & x2303.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3649 = x3648 * x2302;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3649);
          reg = x3649;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3650 = args[2][78 * steps + ((cycle - 0) & mask)];
      assert(x3650 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3651 = args[2][79 * steps + ((cycle - 0) & mask)];
      assert(x3651 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3652 = x3650 * x3651;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3653 = x3652 * x2303;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3654 = x3643 + x3653;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3655 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3655 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3656 = Fp(x3655.asUInt32() & x2301.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3657 = x3656 * x2300;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3657);
          reg = x3657;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3658 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3658 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3659 = Fp(x3658.asUInt32() & x2301.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3660 = x3659 * x2300;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3660);
          reg = x3660;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3661 = args[2][80 * steps + ((cycle - 0) & mask)];
      assert(x3661 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3662 = args[2][81 * steps + ((cycle - 0) & mask)];
      assert(x3662 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3663 = x3661 * x3662;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3664 = x3663 * x2301;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3665 = x3654 + x3664;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3666 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3666 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3667 = Fp(x3666.asUInt32() & x2299.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3668 = x3667 * x2298;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3668);
          reg = x3668;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3669 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3669 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3670 = Fp(x3669.asUInt32() & x2299.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3671 = x3670 * x2298;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3671);
          reg = x3671;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3672 = args[2][82 * steps + ((cycle - 0) & mask)];
      assert(x3672 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3673 = args[2][83 * steps + ((cycle - 0) & mask)];
      assert(x3673 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3674 = x3672 * x3673;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3675 = x3674 * x2299;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3676 = x3665 + x3675;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3677 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3677 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3678 = Fp(x3677.asUInt32() & x2297.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3679 = x3678 * x2296;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3679);
          reg = x3679;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3680 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3680 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3681 = Fp(x3680.asUInt32() & x2297.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3682 = x3681 * x2296;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3682);
          reg = x3682;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3683 = args[2][84 * steps + ((cycle - 0) & mask)];
      assert(x3683 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3684 = args[2][85 * steps + ((cycle - 0) & mask)];
      assert(x3684 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3685 = x3683 * x3684;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3686 = x3685 * x2297;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3687 = x3676 + x3686;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3688 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3688 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3689 = Fp(x3688.asUInt32() & x2295.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3690 = x3689 * x2294;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3690);
          reg = x3690;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3691 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3691 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3692 = Fp(x3691.asUInt32() & x2295.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3693 = x3692 * x2294;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3693);
          reg = x3693;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3694 = args[2][86 * steps + ((cycle - 0) & mask)];
      assert(x3694 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3695 = args[2][87 * steps + ((cycle - 0) & mask)];
      assert(x3695 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3696 = x3694 * x3695;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3697 = x3696 * x2295;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3698 = x3687 + x3697;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3699 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3699 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3700 = Fp(x3699.asUInt32() & x2293.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3701 = x3700 * x2292;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3701);
          reg = x3701;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3702 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3702 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3703 = Fp(x3702.asUInt32() & x2293.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3704 = x3703 * x2292;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][89 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3704);
          reg = x3704;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3705 = args[2][88 * steps + ((cycle - 0) & mask)];
      assert(x3705 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3706 = args[2][89 * steps + ((cycle - 0) & mask)];
      assert(x3706 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3707 = x3705 * x3706;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3708 = x3707 * x2293;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3709 = x3698 + x3708;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3710 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3710 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3711 = Fp(x3710.asUInt32() & x2291.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3712 = x3711 * x2290;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][90 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3712);
          reg = x3712;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3713 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3713 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3714 = Fp(x3713.asUInt32() & x2291.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3715 = x3714 * x2290;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][91 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3715);
          reg = x3715;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3716 = args[2][90 * steps + ((cycle - 0) & mask)];
      assert(x3716 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3717 = args[2][91 * steps + ((cycle - 0) & mask)];
      assert(x3717 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3718 = x3716 * x3717;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3719 = x3718 * x2291;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3720 = x3709 + x3719;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3721 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3721 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3722 = Fp(x3721.asUInt32() & x2289.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3723 = x3722 * x2288;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][92 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3723);
          reg = x3723;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3724 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3724 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3725 = Fp(x3724.asUInt32() & x2289.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3726 = x3725 * x2288;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][93 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3726);
          reg = x3726;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3727 = args[2][92 * steps + ((cycle - 0) & mask)];
      assert(x3727 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3728 = args[2][93 * steps + ((cycle - 0) & mask)];
      assert(x3728 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3729 = x3727 * x3728;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3730 = x3729 * x2289;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3731 = x3720 + x3730;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3732 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3732 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3733 = Fp(x3732.asUInt32() & x2287.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3734 = x3733 * x2286;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][94 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3734);
          reg = x3734;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3735 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3735 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3736 = Fp(x3735.asUInt32() & x2287.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3737 = x3736 * x2286;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][95 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3737);
          reg = x3737;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3738 = args[2][94 * steps + ((cycle - 0) & mask)];
      assert(x3738 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3739 = args[2][95 * steps + ((cycle - 0) & mask)];
      assert(x3739 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3740 = x3738 * x3739;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3741 = x3740 * x2287;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3742 = x3731 + x3741;
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3743 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x3743 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":75:22)
        auto x3744 = Fp(x3743.asUInt32() & x2285.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":75:21)
        auto x3745 = x3744 * x2284;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][96 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3745);
          reg = x3745;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3746 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x3746 != Fp::invalid());
        // loc("zirgen/circuit/recursion/bits.cpp":76:22)
        auto x3747 = Fp(x3746.asUInt32() & x2285.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":76:21)
        auto x3748 = x3747 * x2284;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][97 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3748);
          reg = x3748;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3749 = args[2][96 * steps + ((cycle - 0) & mask)];
      assert(x3749 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/bits_b[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3750 = args[2][97 * steps + ((cycle - 0) & mask)];
      assert(x3750 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3751 = x3749 * x3750;
      // loc("zirgen/circuit/recursion/bits.cpp":80:19)
      auto x3752 = x3751 * x2285;
      // loc("zirgen/circuit/recursion/bits.cpp":80:12)
      auto x3753 = x3742 + x3752;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3754 = args[2][12 * steps + ((cycle - 0) & mask)];
      assert(x3754 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3755 = args[2][17 * steps + ((cycle - 0) & mask)];
      assert(x3755 != Fp::invalid());
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3403);
        reg = x3403;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][22 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3753);
        reg = x3753;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][23 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][24 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x3756 = args[2][21 * steps + ((cycle - 0) & mask)];
        assert(x3756 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3757 = args[2][22 * steps + ((cycle - 0) & mask)];
        assert(x3757 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3758 = args[2][23 * steps + ((cycle - 0) & mask)];
        assert(x3758 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3759 = args[2][24 * steps + ((cycle - 0) & mask)];
        assert(x3759 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x3760 = args[2][25 * steps + ((cycle - 0) & mask)];
        assert(x3760 != Fp::invalid());
        host_args.at(0) = x3756;
        host_args.at(1) = x3757;
        host_args.at(2) = x3758;
        host_args.at(3) = x3759;
        host_args.at(4) = x3760;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3761 = args[2][13 * steps + ((cycle - 0) & mask)];
      assert(x3761 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3762 = args[2][18 * steps + ((cycle - 0) & mask)];
      assert(x3762 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3763 = args[2][22 * steps + ((cycle - 0) & mask)];
      assert(x3763 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3764 = args[2][23 * steps + ((cycle - 0) & mask)];
      assert(x3764 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3765 = args[2][24 * steps + ((cycle - 0) & mask)];
      assert(x3765 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3766 = args[2][25 * steps + ((cycle - 0) & mask)];
      assert(x3766 != Fp::invalid());
      // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3767 = args[0][19 * steps + ((cycle - 0) & mask)];
      assert(x3767 != Fp::invalid());
      host_args.at(0) = x3407;
      host_args.at(1) = x3412;
      host_args.at(2) = x3754;
      host_args.at(3) = x3761;
      host_args.at(4) = x3755;
      host_args.at(5) = x3762;
      host_args.at(6) = x3767;
      host_args.at(7) = x3753;
      host_args.at(8) = x3763;
      host_args.at(9) = x3764;
      host_args.at(10) = x3765;
      host_args.at(11) = x3766;
      host(ctx, "log", "BIT_AND_ELEM, reading from [%u, %u],  A = [%x, %x], B = [%x, %x], type = %u, Out=%x, Result=%e", host_args.data(), 12, host_outs.data(), 0);
    }
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/opcode(OneHot)/bit_op_shorts(Reg)"("./zirgen/components/mux.h":49:25))
    auto x3768 = args[0][11 * steps + ((cycle - 0) & mask)];
    assert(x3768 != Fp::invalid());
    if (x3768 != 0) {
      // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3769 = args[0][17 * steps + ((cycle - 0) & mask)];
      assert(x3769 != Fp::invalid());
      // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3770 = args[0][18 * steps + ((cycle - 0) & mask)];
      assert(x3770 != Fp::invalid());
      // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3771 = args[0][19 * steps + ((cycle - 0) & mask)];
      assert(x3771 != Fp::invalid());
      host_args.at(0) = x3769;
      host_args.at(1) = x3770;
      host_args.at(2) = x3771;
      host(ctx, "log", "BIT_OP_SHORTS, reading from [%u, %u], type=%u", host_args.data(), 3, host_outs.data(), 0);
      {
        host_args.at(0) = x3769;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3772 = host_outs.at(0);
        auto x3773 = host_outs.at(1);
        auto x3774 = host_outs.at(2);
        auto x3775 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3772);
          reg = x3772;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3773);
          reg = x3773;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3774);
          reg = x3774;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3775);
          reg = x3775;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3769);
        reg = x3769;
      }
      {
        host_args.at(0) = x3770;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x3776 = host_outs.at(0);
        auto x3777 = host_outs.at(1);
        auto x3778 = host_outs.at(2);
        auto x3779 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3776);
          reg = x3776;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3777);
          reg = x3777;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3778);
          reg = x3778;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3779);
          reg = x3779;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3770);
        reg = x3770;
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3780 = args[2][12 * steps + ((cycle - 0) & mask)];
      assert(x3780 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3781 = args[2][13 * steps + ((cycle - 0) & mask)];
      assert(x3781 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3782 = args[2][17 * steps + ((cycle - 0) & mask)];
      assert(x3782 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x3783 = args[2][18 * steps + ((cycle - 0) & mask)];
      assert(x3783 != Fp::invalid());
      host_args.at(0) = x3780;
      host_args.at(1) = x3781;
      host_args.at(2) = x3782;
      host_args.at(3) = x3783;
      host(ctx, "log", "  A = [%x, %x], B = [%x, %x]", host_args.data(), 4, host_outs.data(), 0);
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3784 = Fp(x3780.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3784);
          reg = x3784;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3785 = Fp(x3782.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][68 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3785);
          reg = x3785;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3786 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x3786 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3787 = args[2][68 * steps + ((cycle - 0) & mask)];
      assert(x3787 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3788 = x3786 * x3787;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3789 = Fp(x3780.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3790 = x3789 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][37 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3790);
          reg = x3790;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3791 = Fp(x3782.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3792 = x3791 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][69 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3792);
          reg = x3792;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3793 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x3793 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3794 = args[2][69 * steps + ((cycle - 0) & mask)];
      assert(x3794 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3795 = x3793 * x3794;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3796 = x3795 * x2351;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3797 = x3788 + x3796;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3798 = Fp(x3780.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3799 = x3798 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][38 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3799);
          reg = x3799;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3800 = Fp(x3782.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3801 = x3800 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3801);
          reg = x3801;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3802 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x3802 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3803 = args[2][70 * steps + ((cycle - 0) & mask)];
      assert(x3803 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3804 = x3802 * x3803;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3805 = x3804 * x2349;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3806 = x3797 + x3805;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3807 = Fp(x3780.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3808 = x3807 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][39 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3808);
          reg = x3808;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3809 = Fp(x3782.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3810 = x3809 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3810);
          reg = x3810;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3811 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x3811 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3812 = args[2][71 * steps + ((cycle - 0) & mask)];
      assert(x3812 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3813 = x3811 * x3812;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3814 = x3813 * x2345;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3815 = x3806 + x3814;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3816 = Fp(x3780.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3817 = x3816 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][40 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3817);
          reg = x3817;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3818 = Fp(x3782.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3819 = x3818 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][72 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3819);
          reg = x3819;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3820 = args[2][40 * steps + ((cycle - 0) & mask)];
      assert(x3820 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3821 = args[2][72 * steps + ((cycle - 0) & mask)];
      assert(x3821 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3822 = x3820 * x3821;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3823 = x3822 * x2336;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3824 = x3815 + x3823;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3825 = Fp(x3780.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3826 = x3825 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][41 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3826);
          reg = x3826;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3827 = Fp(x3782.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3828 = x3827 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3828);
          reg = x3828;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3829 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x3829 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3830 = args[2][73 * steps + ((cycle - 0) & mask)];
      assert(x3830 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3831 = x3829 * x3830;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3832 = x3831 * x2334;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3833 = x3824 + x3832;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3834 = Fp(x3780.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3835 = x3834 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][42 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3835);
          reg = x3835;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3836 = Fp(x3782.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3837 = x3836 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3837);
          reg = x3837;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3838 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x3838 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3839 = args[2][74 * steps + ((cycle - 0) & mask)];
      assert(x3839 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3840 = x3838 * x3839;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3841 = x3840 * x2332;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3842 = x3833 + x3841;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3843 = Fp(x3780.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3844 = x3843 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][43 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3844);
          reg = x3844;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3845 = Fp(x3782.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3846 = x3845 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3846);
          reg = x3846;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3847 = args[2][43 * steps + ((cycle - 0) & mask)];
      assert(x3847 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3848 = args[2][75 * steps + ((cycle - 0) & mask)];
      assert(x3848 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3849 = x3847 * x3848;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3850 = x3849 * x2330;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3851 = x3842 + x3850;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3852 = Fp(x3780.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3853 = x3852 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][44 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3853);
          reg = x3853;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3854 = Fp(x3782.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3855 = x3854 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3855);
          reg = x3855;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3856 = args[2][44 * steps + ((cycle - 0) & mask)];
      assert(x3856 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3857 = args[2][76 * steps + ((cycle - 0) & mask)];
      assert(x3857 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3858 = x3856 * x3857;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3859 = x3858 * x2328;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3860 = x3851 + x3859;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3861 = Fp(x3780.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3862 = x3861 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][45 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3862);
          reg = x3862;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3863 = Fp(x3782.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3864 = x3863 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3864);
          reg = x3864;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3865 = args[2][45 * steps + ((cycle - 0) & mask)];
      assert(x3865 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3866 = args[2][77 * steps + ((cycle - 0) & mask)];
      assert(x3866 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3867 = x3865 * x3866;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3868 = x3867 * x2326;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3869 = x3860 + x3868;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3870 = Fp(x3780.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3871 = x3870 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][46 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3871);
          reg = x3871;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3872 = Fp(x3782.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3873 = x3872 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3873);
          reg = x3873;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3874 = args[2][46 * steps + ((cycle - 0) & mask)];
      assert(x3874 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3875 = args[2][78 * steps + ((cycle - 0) & mask)];
      assert(x3875 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3876 = x3874 * x3875;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3877 = x3876 * x2324;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3878 = x3869 + x3877;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3879 = Fp(x3780.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3880 = x3879 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][47 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3880);
          reg = x3880;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3881 = Fp(x3782.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3882 = x3881 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3882);
          reg = x3882;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3883 = args[2][47 * steps + ((cycle - 0) & mask)];
      assert(x3883 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3884 = args[2][79 * steps + ((cycle - 0) & mask)];
      assert(x3884 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3885 = x3883 * x3884;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3886 = x3885 * x2322;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3887 = x3878 + x3886;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3888 = Fp(x3780.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3889 = x3888 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][48 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3889);
          reg = x3889;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3890 = Fp(x3782.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3891 = x3890 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3891);
          reg = x3891;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3892 = args[2][48 * steps + ((cycle - 0) & mask)];
      assert(x3892 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3893 = args[2][80 * steps + ((cycle - 0) & mask)];
      assert(x3893 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3894 = x3892 * x3893;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3895 = x3894 * x2320;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3896 = x3887 + x3895;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3897 = Fp(x3780.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3898 = x3897 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][49 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3898);
          reg = x3898;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3899 = Fp(x3782.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3900 = x3899 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3900);
          reg = x3900;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3901 = args[2][49 * steps + ((cycle - 0) & mask)];
      assert(x3901 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3902 = args[2][81 * steps + ((cycle - 0) & mask)];
      assert(x3902 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3903 = x3901 * x3902;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3904 = x3903 * x2318;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3905 = x3896 + x3904;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3906 = Fp(x3780.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3907 = x3906 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][50 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3907);
          reg = x3907;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3908 = Fp(x3782.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3909 = x3908 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3909);
          reg = x3909;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3910 = args[2][50 * steps + ((cycle - 0) & mask)];
      assert(x3910 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3911 = args[2][82 * steps + ((cycle - 0) & mask)];
      assert(x3911 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3912 = x3910 * x3911;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3913 = x3912 * x2316;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3914 = x3905 + x3913;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3915 = Fp(x3780.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3916 = x3915 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][51 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3916);
          reg = x3916;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3917 = Fp(x3782.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3918 = x3917 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3918);
          reg = x3918;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3919 = args[2][51 * steps + ((cycle - 0) & mask)];
      assert(x3919 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3920 = args[2][83 * steps + ((cycle - 0) & mask)];
      assert(x3920 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3921 = x3919 * x3920;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3922 = x3921 * x2314;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3923 = x3914 + x3922;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3924 = Fp(x3781.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][52 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3924);
          reg = x3924;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3925 = Fp(x3783.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3925);
          reg = x3925;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3926 = args[2][52 * steps + ((cycle - 0) & mask)];
      assert(x3926 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3927 = args[2][84 * steps + ((cycle - 0) & mask)];
      assert(x3927 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3928 = x3926 * x3927;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3929 = Fp(x3781.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3930 = x3929 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][53 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3930);
          reg = x3930;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3931 = Fp(x3783.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3932 = x3931 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3932);
          reg = x3932;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3933 = args[2][53 * steps + ((cycle - 0) & mask)];
      assert(x3933 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3934 = args[2][85 * steps + ((cycle - 0) & mask)];
      assert(x3934 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3935 = x3933 * x3934;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3936 = x3935 * x2351;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3937 = x3928 + x3936;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3938 = Fp(x3781.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3939 = x3938 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][54 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3939);
          reg = x3939;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3940 = Fp(x3783.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3941 = x3940 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3941);
          reg = x3941;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3942 = args[2][54 * steps + ((cycle - 0) & mask)];
      assert(x3942 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3943 = args[2][86 * steps + ((cycle - 0) & mask)];
      assert(x3943 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3944 = x3942 * x3943;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3945 = x3944 * x2349;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3946 = x3937 + x3945;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3947 = Fp(x3781.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3948 = x3947 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][55 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3948);
          reg = x3948;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3949 = Fp(x3783.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3950 = x3949 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3950);
          reg = x3950;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3951 = args[2][55 * steps + ((cycle - 0) & mask)];
      assert(x3951 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3952 = args[2][87 * steps + ((cycle - 0) & mask)];
      assert(x3952 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3953 = x3951 * x3952;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3954 = x3953 * x2345;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3955 = x3946 + x3954;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3956 = Fp(x3781.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3957 = x3956 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][56 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3957);
          reg = x3957;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3958 = Fp(x3783.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3959 = x3958 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3959);
          reg = x3959;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3960 = args[2][56 * steps + ((cycle - 0) & mask)];
      assert(x3960 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3961 = args[2][88 * steps + ((cycle - 0) & mask)];
      assert(x3961 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3962 = x3960 * x3961;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3963 = x3962 * x2336;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3964 = x3955 + x3963;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3965 = Fp(x3781.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3966 = x3965 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][57 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3966);
          reg = x3966;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3967 = Fp(x3783.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3968 = x3967 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][89 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3968);
          reg = x3968;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3969 = args[2][57 * steps + ((cycle - 0) & mask)];
      assert(x3969 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3970 = args[2][89 * steps + ((cycle - 0) & mask)];
      assert(x3970 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3971 = x3969 * x3970;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3972 = x3971 * x2334;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3973 = x3964 + x3972;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3974 = Fp(x3781.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3975 = x3974 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][58 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3975);
          reg = x3975;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3976 = Fp(x3783.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3977 = x3976 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][90 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3977);
          reg = x3977;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3978 = args[2][58 * steps + ((cycle - 0) & mask)];
      assert(x3978 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3979 = args[2][90 * steps + ((cycle - 0) & mask)];
      assert(x3979 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3980 = x3978 * x3979;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3981 = x3980 * x2332;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3982 = x3973 + x3981;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3983 = Fp(x3781.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3984 = x3983 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][59 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3984);
          reg = x3984;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3985 = Fp(x3783.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3986 = x3985 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][91 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3986);
          reg = x3986;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3987 = args[2][59 * steps + ((cycle - 0) & mask)];
      assert(x3987 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3988 = args[2][91 * steps + ((cycle - 0) & mask)];
      assert(x3988 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3989 = x3987 * x3988;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3990 = x3989 * x2330;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x3991 = x3982 + x3990;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x3992 = Fp(x3781.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x3993 = x3992 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][60 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3993);
          reg = x3993;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x3994 = Fp(x3783.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x3995 = x3994 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][92 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3995);
          reg = x3995;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3996 = args[2][60 * steps + ((cycle - 0) & mask)];
      assert(x3996 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3997 = args[2][92 * steps + ((cycle - 0) & mask)];
      assert(x3997 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3998 = x3996 * x3997;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x3999 = x3998 * x2328;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x4000 = x3991 + x3999;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x4001 = Fp(x3781.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x4002 = x4001 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][61 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4002);
          reg = x4002;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x4003 = Fp(x3783.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x4004 = x4003 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][93 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4004);
          reg = x4004;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4005 = args[2][61 * steps + ((cycle - 0) & mask)];
      assert(x4005 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4006 = args[2][93 * steps + ((cycle - 0) & mask)];
      assert(x4006 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x4007 = x4005 * x4006;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x4008 = x4007 * x2326;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x4009 = x4000 + x4008;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x4010 = Fp(x3781.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x4011 = x4010 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][62 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4011);
          reg = x4011;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x4012 = Fp(x3783.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x4013 = x4012 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][94 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4013);
          reg = x4013;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4014 = args[2][62 * steps + ((cycle - 0) & mask)];
      assert(x4014 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4015 = args[2][94 * steps + ((cycle - 0) & mask)];
      assert(x4015 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x4016 = x4014 * x4015;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x4017 = x4016 * x2324;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x4018 = x4009 + x4017;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x4019 = Fp(x3781.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x4020 = x4019 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][63 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4020);
          reg = x4020;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x4021 = Fp(x3783.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x4022 = x4021 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][95 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4022);
          reg = x4022;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4023 = args[2][63 * steps + ((cycle - 0) & mask)];
      assert(x4023 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4024 = args[2][95 * steps + ((cycle - 0) & mask)];
      assert(x4024 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x4025 = x4023 * x4024;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x4026 = x4025 * x2322;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x4027 = x4018 + x4026;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x4028 = Fp(x3781.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x4029 = x4028 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][64 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4029);
          reg = x4029;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x4030 = Fp(x3783.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x4031 = x4030 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][96 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4031);
          reg = x4031;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4032 = args[2][64 * steps + ((cycle - 0) & mask)];
      assert(x4032 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4033 = args[2][96 * steps + ((cycle - 0) & mask)];
      assert(x4033 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x4034 = x4032 * x4033;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x4035 = x4034 * x2320;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x4036 = x4027 + x4035;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x4037 = Fp(x3781.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x4038 = x4037 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][65 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4038);
          reg = x4038;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x4039 = Fp(x3783.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x4040 = x4039 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][97 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4040);
          reg = x4040;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4041 = args[2][65 * steps + ((cycle - 0) & mask)];
      assert(x4041 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4042 = args[2][97 * steps + ((cycle - 0) & mask)];
      assert(x4042 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x4043 = x4041 * x4042;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x4044 = x4043 * x2318;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x4045 = x4036 + x4044;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x4046 = Fp(x3781.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x4047 = x4046 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][66 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4047);
          reg = x4047;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x4048 = Fp(x3783.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x4049 = x4048 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4049);
          reg = x4049;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4050 = args[2][66 * steps + ((cycle - 0) & mask)];
      assert(x4050 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4051 = args[2][98 * steps + ((cycle - 0) & mask)];
      assert(x4051 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x4052 = x4050 * x4051;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x4053 = x4052 * x2316;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x4054 = x4045 + x4053;
      {
        // loc("zirgen/circuit/recursion/bits.cpp":31:33)
        auto x4055 = Fp(x3781.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":31:32)
        auto x4056 = x4055 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][67 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4056);
          reg = x4056;
        }
        // loc("zirgen/circuit/recursion/bits.cpp":32:33)
        auto x4057 = Fp(x3783.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/bits.cpp":32:32)
        auto x4058 = x4057 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4058);
          reg = x4058;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_a[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4059 = args[2][67 * steps + ((cycle - 0) & mask)];
      assert(x4059 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/bits_b[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4060 = args[2][99 * steps + ((cycle - 0) & mask)];
      assert(x4060 != Fp::invalid());
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x4061 = x4059 * x4060;
      // loc("zirgen/circuit/recursion/bits.cpp":36:21)
      auto x4062 = x4061 * x2314;
      // loc("zirgen/circuit/recursion/bits.cpp":36:14)
      auto x4063 = x4054 + x4062;
      if (x3771 != 0) {
        // loc("zirgen/circuit/recursion/bits.cpp":44:30)
        auto x4064 = x4063 * x2340;
        // loc("zirgen/circuit/recursion/bits.cpp":44:30)
        auto x4065 = x4064 + x3923;
        // loc("zirgen/circuit/recursion/wom.cpp":85:3)
        {
          auto& reg = args[2][21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3403);
          reg = x3403;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4065);
          reg = x4065;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        {
          // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
          auto x4066 = args[2][21 * steps + ((cycle - 0) & mask)];
          assert(x4066 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x4067 = args[2][22 * steps + ((cycle - 0) & mask)];
          assert(x4067 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x4068 = args[2][23 * steps + ((cycle - 0) & mask)];
          assert(x4068 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x4069 = args[2][24 * steps + ((cycle - 0) & mask)];
          assert(x4069 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x4070 = args[2][25 * steps + ((cycle - 0) & mask)];
          assert(x4070 != Fp::invalid());
          host_args.at(0) = x4066;
          host_args.at(1) = x4067;
          host_args.at(2) = x4068;
          host_args.at(3) = x4069;
          host_args.at(4) = x4070;
          host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x4071 = args[2][22 * steps + ((cycle - 0) & mask)];
        assert(x4071 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x4072 = args[2][23 * steps + ((cycle - 0) & mask)];
        assert(x4072 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x4073 = args[2][24 * steps + ((cycle - 0) & mask)];
        assert(x4073 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x4074 = args[2][25 * steps + ((cycle - 0) & mask)];
        assert(x4074 != Fp::invalid());
        host_args.at(0) = x4071;
        host_args.at(1) = x4072;
        host_args.at(2) = x4073;
        host_args.at(3) = x4074;
        host(ctx, "log", "  AND Result = %e", host_args.data(), 4, host_outs.data(), 0);
      }
      // loc("zirgen/circuit/recursion/bits.cpp":47:27)
      auto x4075 = x2352 - x3771;
      if (x4075 != 0) {
        // loc("zirgen/circuit/recursion/bits.cpp":50:19)
        auto x4076 = x3780 + x3782;
        // loc("zirgen/circuit/recursion/bits.cpp":50:53)
        auto x4077 = x3923 * x2351;
        // loc("zirgen/circuit/recursion/bits.cpp":50:19)
        auto x4078 = x4076 - x4077;
        // loc("zirgen/circuit/recursion/bits.cpp":51:19)
        auto x4079 = x3781 + x3783;
        // loc("zirgen/circuit/recursion/bits.cpp":51:53)
        auto x4080 = x4063 * x2351;
        // loc("zirgen/circuit/recursion/bits.cpp":51:19)
        auto x4081 = x4079 - x4080;
        // loc("zirgen/circuit/recursion/wom.cpp":85:3)
        {
          auto& reg = args[2][21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3403);
          reg = x3403;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4078);
          reg = x4078;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4081);
          reg = x4081;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        {
          // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
          auto x4082 = args[2][21 * steps + ((cycle - 0) & mask)];
          assert(x4082 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x4083 = args[2][22 * steps + ((cycle - 0) & mask)];
          assert(x4083 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x4084 = args[2][23 * steps + ((cycle - 0) & mask)];
          assert(x4084 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x4085 = args[2][24 * steps + ((cycle - 0) & mask)];
          assert(x4085 != Fp::invalid());
          // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
          auto x4086 = args[2][25 * steps + ((cycle - 0) & mask)];
          assert(x4086 != Fp::invalid());
          host_args.at(0) = x4082;
          host_args.at(1) = x4083;
          host_args.at(2) = x4084;
          host_args.at(3) = x4085;
          host_args.at(4) = x4086;
          host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x4087 = args[2][22 * steps + ((cycle - 0) & mask)];
        assert(x4087 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x4088 = args[2][23 * steps + ((cycle - 0) & mask)];
        assert(x4088 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x4089 = args[2][24 * steps + ((cycle - 0) & mask)];
        assert(x4089 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x4090 = args[2][25 * steps + ((cycle - 0) & mask)];
        assert(x4090 != Fp::invalid());
        host_args.at(0) = x4087;
        host_args.at(1) = x4088;
        host_args.at(2) = x4089;
        host_args.at(3) = x4090;
        host(ctx, "log", "  XOR Result = %e", host_args.data(), 4, host_outs.data(), 0);
      }
    }
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/opcode(OneHot)/sha_init(Reg)"("./zirgen/components/mux.h":49:25))
    auto x4091 = args[0][12 * steps + ((cycle - 0) & mask)];
    assert(x4091 != Fp::invalid());
    if (x4091 != 0) {
      // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4092 = args[0][17 * steps + ((cycle - 0) & mask)];
      assert(x4092 != Fp::invalid());
      {
        host_args.at(0) = x4092;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x4093 = host_outs.at(0);
        auto x4094 = host_outs.at(1);
        auto x4095 = host_outs.at(2);
        auto x4096 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4093);
          reg = x4093;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4094);
          reg = x4094;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4095);
          reg = x4095;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4096);
          reg = x4096;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4092);
        reg = x4092;
      }
      // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4097 = args[0][18 * steps + ((cycle - 0) & mask)];
      assert(x4097 != Fp::invalid());
      {
        host_args.at(0) = x4097;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x4098 = host_outs.at(0);
        auto x4099 = host_outs.at(1);
        auto x4100 = host_outs.at(2);
        auto x4101 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4098);
          reg = x4098;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4099);
          reg = x4099;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4100);
          reg = x4100;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4101);
          reg = x4101;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4097);
        reg = x4097;
      }
      {
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][94 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][95 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][96 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][97 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][101 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][102 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][103 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][104 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][105 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][106 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][107 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][108 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][109 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4102 = args[2][94 * steps + ((cycle - 0) & mask)];
      assert(x4102 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4103 = args[2][95 * steps + ((cycle - 0) & mask)];
      assert(x4103 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4104 = x4103 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4105 = x4102 + x4104;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4106 = args[2][96 * steps + ((cycle - 0) & mask)];
      assert(x4106 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4107 = x4106 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4108 = x4105 + x4107;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4109 = args[2][97 * steps + ((cycle - 0) & mask)];
      assert(x4109 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4110 = x4109 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4111 = x4108 + x4110;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4112 = args[2][98 * steps + ((cycle - 0) & mask)];
      assert(x4112 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4113 = x4112 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4114 = x4111 + x4113;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4115 = args[2][99 * steps + ((cycle - 0) & mask)];
      assert(x4115 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4116 = x4115 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4117 = x4114 + x4116;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4118 = args[2][100 * steps + ((cycle - 0) & mask)];
      assert(x4118 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4119 = x4118 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4120 = x4117 + x4119;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4121 = args[2][101 * steps + ((cycle - 0) & mask)];
      assert(x4121 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4122 = x4121 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4123 = x4120 + x4122;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4124 = args[2][102 * steps + ((cycle - 0) & mask)];
      assert(x4124 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4125 = x4124 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4126 = x4123 + x4125;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4127 = args[2][103 * steps + ((cycle - 0) & mask)];
      assert(x4127 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4128 = x4127 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4129 = x4126 + x4128;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4130 = args[2][104 * steps + ((cycle - 0) & mask)];
      assert(x4130 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4131 = x4130 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4132 = x4129 + x4131;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4133 = args[2][105 * steps + ((cycle - 0) & mask)];
      assert(x4133 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4134 = x4133 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4135 = x4132 + x4134;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4136 = args[2][106 * steps + ((cycle - 0) & mask)];
      assert(x4136 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4137 = x4136 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4138 = x4135 + x4137;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4139 = args[2][107 * steps + ((cycle - 0) & mask)];
      assert(x4139 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4140 = x4139 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4141 = x4138 + x4140;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4142 = args[2][108 * steps + ((cycle - 0) & mask)];
      assert(x4142 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4143 = x4142 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4144 = x4141 + x4143;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4145 = args[2][109 * steps + ((cycle - 0) & mask)];
      assert(x4145 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4146 = x4145 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4147 = x4144 + x4146;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x4148 = x2353 - x4147;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x4149 = x4148 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":124:26)
        auto x4150 = Fp(x4149.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4150);
          reg = x4150;
        }
      }
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4151 = Fp(x4149.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][110 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4151);
          reg = x4151;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4152 = Fp(x4149.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4153 = x4152 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][111 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4153);
          reg = x4153;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4154 = Fp(x4149.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4155 = x4154 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][112 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4155);
          reg = x4155;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4156 = Fp(x4149.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4157 = x4156 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][113 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4157);
          reg = x4157;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4158 = Fp(x4149.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4159 = x4158 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][114 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4159);
          reg = x4159;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4160 = Fp(x4149.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4161 = x4160 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][115 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4161);
          reg = x4161;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4162 = Fp(x4149.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4163 = x4162 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4163);
          reg = x4163;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4164 = Fp(x4149.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4165 = x4164 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4165);
          reg = x4165;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4166 = Fp(x4149.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4167 = x4166 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4167);
          reg = x4167;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4168 = Fp(x4149.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4169 = x4168 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4169);
          reg = x4169;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4170 = Fp(x4149.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4171 = x4170 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4171);
          reg = x4171;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4172 = Fp(x4149.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4173 = x4172 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4173);
          reg = x4173;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4174 = Fp(x4149.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4175 = x4174 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4175);
          reg = x4175;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4176 = Fp(x4149.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4177 = x4176 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4177);
          reg = x4177;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4178 = Fp(x4149.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4179 = x4178 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4179);
          reg = x4179;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4180 = Fp(x4149.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4181 = x4180 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4181);
          reg = x4181;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4182 = args[2][110 * steps + ((cycle - 0) & mask)];
      assert(x4182 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4183 = args[2][111 * steps + ((cycle - 0) & mask)];
      assert(x4183 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4184 = x4183 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4185 = x4182 + x4184;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4186 = args[2][112 * steps + ((cycle - 0) & mask)];
      assert(x4186 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4187 = x4186 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4188 = x4185 + x4187;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4189 = args[2][113 * steps + ((cycle - 0) & mask)];
      assert(x4189 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4190 = x4189 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4191 = x4188 + x4190;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4192 = args[2][114 * steps + ((cycle - 0) & mask)];
      assert(x4192 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4193 = x4192 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4194 = x4191 + x4193;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4195 = args[2][115 * steps + ((cycle - 0) & mask)];
      assert(x4195 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4196 = x4195 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4197 = x4194 + x4196;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4198 = args[2][116 * steps + ((cycle - 0) & mask)];
      assert(x4198 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4199 = x4198 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4200 = x4197 + x4199;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4201 = args[2][117 * steps + ((cycle - 0) & mask)];
      assert(x4201 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4202 = x4201 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4203 = x4200 + x4202;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4204 = args[2][118 * steps + ((cycle - 0) & mask)];
      assert(x4204 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4205 = x4204 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4206 = x4203 + x4205;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4207 = args[2][119 * steps + ((cycle - 0) & mask)];
      assert(x4207 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4208 = x4207 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4209 = x4206 + x4208;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4210 = args[2][120 * steps + ((cycle - 0) & mask)];
      assert(x4210 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4211 = x4210 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4212 = x4209 + x4211;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4213 = args[2][121 * steps + ((cycle - 0) & mask)];
      assert(x4213 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4214 = x4213 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4215 = x4212 + x4214;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4216 = args[2][122 * steps + ((cycle - 0) & mask)];
      assert(x4216 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4217 = x4216 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4218 = x4215 + x4217;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4219 = args[2][123 * steps + ((cycle - 0) & mask)];
      assert(x4219 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4220 = x4219 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4221 = x4218 + x4220;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4222 = args[2][124 * steps + ((cycle - 0) & mask)];
      assert(x4222 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4223 = x4222 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4224 = x4221 + x4223;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4225 = args[2][125 * steps + ((cycle - 0) & mask)];
      assert(x4225 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4226 = x4225 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4227 = x4224 + x4226;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x4228 = x4149 - x4227;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x4229 = x4228 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":128:27)
        auto x4230 = Fp(x4229.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4230);
          reg = x4230;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x4231 = args[2][12 * steps + ((cycle - 0) & mask)];
      assert(x4231 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x4232 = args[2][13 * steps + ((cycle - 0) & mask)];
      assert(x4232 != Fp::invalid());
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4233 = Fp(x4231.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4233);
          reg = x4233;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4234 = Fp(x4231.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4235 = x4234 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4235);
          reg = x4235;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4236 = Fp(x4231.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4237 = x4236 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4237);
          reg = x4237;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4238 = Fp(x4231.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4239 = x4238 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4239);
          reg = x4239;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4240 = Fp(x4231.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4241 = x4240 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4241);
          reg = x4241;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4242 = Fp(x4231.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4243 = x4242 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4243);
          reg = x4243;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4244 = Fp(x4231.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4245 = x4244 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4245);
          reg = x4245;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4246 = Fp(x4231.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4247 = x4246 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4247);
          reg = x4247;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4248 = Fp(x4231.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4249 = x4248 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4249);
          reg = x4249;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4250 = Fp(x4231.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4251 = x4250 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4251);
          reg = x4251;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4252 = Fp(x4231.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4253 = x4252 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4253);
          reg = x4253;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4254 = Fp(x4231.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4255 = x4254 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][37 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4255);
          reg = x4255;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4256 = Fp(x4231.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4257 = x4256 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][38 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4257);
          reg = x4257;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4258 = Fp(x4231.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4259 = x4258 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][39 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4259);
          reg = x4259;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4260 = Fp(x4231.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4261 = x4260 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][40 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4261);
          reg = x4261;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4262 = Fp(x4231.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4263 = x4262 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][41 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4263);
          reg = x4263;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4264 = args[2][26 * steps + ((cycle - 0) & mask)];
      assert(x4264 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4265 = args[2][27 * steps + ((cycle - 0) & mask)];
      assert(x4265 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4266 = x4265 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4267 = x4264 + x4266;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4268 = args[2][28 * steps + ((cycle - 0) & mask)];
      assert(x4268 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4269 = x4268 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4270 = x4267 + x4269;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4271 = args[2][29 * steps + ((cycle - 0) & mask)];
      assert(x4271 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4272 = x4271 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4273 = x4270 + x4272;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4274 = args[2][30 * steps + ((cycle - 0) & mask)];
      assert(x4274 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4275 = x4274 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4276 = x4273 + x4275;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4277 = args[2][31 * steps + ((cycle - 0) & mask)];
      assert(x4277 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4278 = x4277 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4279 = x4276 + x4278;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4280 = args[2][32 * steps + ((cycle - 0) & mask)];
      assert(x4280 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4281 = x4280 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4282 = x4279 + x4281;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4283 = args[2][33 * steps + ((cycle - 0) & mask)];
      assert(x4283 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4284 = x4283 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4285 = x4282 + x4284;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4286 = args[2][34 * steps + ((cycle - 0) & mask)];
      assert(x4286 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4287 = x4286 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4288 = x4285 + x4287;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4289 = args[2][35 * steps + ((cycle - 0) & mask)];
      assert(x4289 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4290 = x4289 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4291 = x4288 + x4290;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4292 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x4292 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4293 = x4292 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4294 = x4291 + x4293;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4295 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x4295 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4296 = x4295 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4297 = x4294 + x4296;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4298 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x4298 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4299 = x4298 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4300 = x4297 + x4299;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4301 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x4301 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4302 = x4301 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4303 = x4300 + x4302;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4304 = args[2][40 * steps + ((cycle - 0) & mask)];
      assert(x4304 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4305 = x4304 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4306 = x4303 + x4305;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4307 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x4307 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4308 = x4307 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4309 = x4306 + x4308;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x4310 = x4231 - x4309;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x4311 = x4310 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":124:26)
        auto x4312 = Fp(x4311.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][5 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4312);
          reg = x4312;
        }
      }
      // loc("zirgen/circuit/recursion/sha.cpp":127:32)
      auto x4313 = x4232 + x4311;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4314 = Fp(x4313.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][42 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4314);
          reg = x4314;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4315 = Fp(x4313.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4316 = x4315 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][43 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4316);
          reg = x4316;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4317 = Fp(x4313.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4318 = x4317 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][44 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4318);
          reg = x4318;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4319 = Fp(x4313.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4320 = x4319 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][45 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4320);
          reg = x4320;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4321 = Fp(x4313.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4322 = x4321 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][46 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4322);
          reg = x4322;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4323 = Fp(x4313.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4324 = x4323 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][47 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4324);
          reg = x4324;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4325 = Fp(x4313.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4326 = x4325 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][48 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4326);
          reg = x4326;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4327 = Fp(x4313.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4328 = x4327 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][49 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4328);
          reg = x4328;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4329 = Fp(x4313.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4330 = x4329 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][50 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4330);
          reg = x4330;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4331 = Fp(x4313.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4332 = x4331 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][51 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4332);
          reg = x4332;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4333 = Fp(x4313.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4334 = x4333 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][52 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4334);
          reg = x4334;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4335 = Fp(x4313.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4336 = x4335 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][53 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4336);
          reg = x4336;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4337 = Fp(x4313.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4338 = x4337 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][54 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4338);
          reg = x4338;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4339 = Fp(x4313.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4340 = x4339 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][55 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4340);
          reg = x4340;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4341 = Fp(x4313.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4342 = x4341 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][56 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4342);
          reg = x4342;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4343 = Fp(x4313.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4344 = x4343 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][57 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4344);
          reg = x4344;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4345 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x4345 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4346 = args[2][43 * steps + ((cycle - 0) & mask)];
      assert(x4346 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4347 = x4346 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4348 = x4345 + x4347;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4349 = args[2][44 * steps + ((cycle - 0) & mask)];
      assert(x4349 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4350 = x4349 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4351 = x4348 + x4350;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4352 = args[2][45 * steps + ((cycle - 0) & mask)];
      assert(x4352 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4353 = x4352 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4354 = x4351 + x4353;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4355 = args[2][46 * steps + ((cycle - 0) & mask)];
      assert(x4355 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4356 = x4355 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4357 = x4354 + x4356;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4358 = args[2][47 * steps + ((cycle - 0) & mask)];
      assert(x4358 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4359 = x4358 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4360 = x4357 + x4359;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4361 = args[2][48 * steps + ((cycle - 0) & mask)];
      assert(x4361 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4362 = x4361 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4363 = x4360 + x4362;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4364 = args[2][49 * steps + ((cycle - 0) & mask)];
      assert(x4364 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4365 = x4364 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4366 = x4363 + x4365;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4367 = args[2][50 * steps + ((cycle - 0) & mask)];
      assert(x4367 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4368 = x4367 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4369 = x4366 + x4368;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4370 = args[2][51 * steps + ((cycle - 0) & mask)];
      assert(x4370 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4371 = x4370 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4372 = x4369 + x4371;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4373 = args[2][52 * steps + ((cycle - 0) & mask)];
      assert(x4373 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4374 = x4373 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4375 = x4372 + x4374;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4376 = args[2][53 * steps + ((cycle - 0) & mask)];
      assert(x4376 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4377 = x4376 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4378 = x4375 + x4377;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4379 = args[2][54 * steps + ((cycle - 0) & mask)];
      assert(x4379 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4380 = x4379 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4381 = x4378 + x4380;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4382 = args[2][55 * steps + ((cycle - 0) & mask)];
      assert(x4382 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4383 = x4382 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4384 = x4381 + x4383;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4385 = args[2][56 * steps + ((cycle - 0) & mask)];
      assert(x4385 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4386 = x4385 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4387 = x4384 + x4386;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4388 = args[2][57 * steps + ((cycle - 0) & mask)];
      assert(x4388 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4389 = x4388 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4390 = x4387 + x4389;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x4391 = x4313 - x4390;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x4392 = x4391 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":128:27)
        auto x4393 = Fp(x4392.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4393);
          reg = x4393;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x4394 = args[2][17 * steps + ((cycle - 0) & mask)];
      assert(x4394 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x4395 = args[2][18 * steps + ((cycle - 0) & mask)];
      assert(x4395 != Fp::invalid());
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4396 = Fp(x4394.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][60 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4396);
          reg = x4396;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4397 = Fp(x4394.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4398 = x4397 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][61 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4398);
          reg = x4398;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4399 = Fp(x4394.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4400 = x4399 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][62 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4400);
          reg = x4400;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4401 = Fp(x4394.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4402 = x4401 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][63 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4402);
          reg = x4402;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4403 = Fp(x4394.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4404 = x4403 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][64 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4404);
          reg = x4404;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4405 = Fp(x4394.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4406 = x4405 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][65 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4406);
          reg = x4406;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4407 = Fp(x4394.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4408 = x4407 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][66 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4408);
          reg = x4408;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4409 = Fp(x4394.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4410 = x4409 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][67 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4410);
          reg = x4410;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4411 = Fp(x4394.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4412 = x4411 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][68 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4412);
          reg = x4412;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4413 = Fp(x4394.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4414 = x4413 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][69 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4414);
          reg = x4414;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4415 = Fp(x4394.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4416 = x4415 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4416);
          reg = x4416;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4417 = Fp(x4394.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4418 = x4417 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4418);
          reg = x4418;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4419 = Fp(x4394.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4420 = x4419 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][72 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4420);
          reg = x4420;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4421 = Fp(x4394.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4422 = x4421 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4422);
          reg = x4422;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4423 = Fp(x4394.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4424 = x4423 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4424);
          reg = x4424;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4425 = Fp(x4394.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4426 = x4425 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4426);
          reg = x4426;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4427 = args[2][60 * steps + ((cycle - 0) & mask)];
      assert(x4427 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4428 = args[2][61 * steps + ((cycle - 0) & mask)];
      assert(x4428 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4429 = x4428 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4430 = x4427 + x4429;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4431 = args[2][62 * steps + ((cycle - 0) & mask)];
      assert(x4431 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4432 = x4431 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4433 = x4430 + x4432;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4434 = args[2][63 * steps + ((cycle - 0) & mask)];
      assert(x4434 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4435 = x4434 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4436 = x4433 + x4435;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4437 = args[2][64 * steps + ((cycle - 0) & mask)];
      assert(x4437 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4438 = x4437 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4439 = x4436 + x4438;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4440 = args[2][65 * steps + ((cycle - 0) & mask)];
      assert(x4440 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4441 = x4440 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4442 = x4439 + x4441;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4443 = args[2][66 * steps + ((cycle - 0) & mask)];
      assert(x4443 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4444 = x4443 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4445 = x4442 + x4444;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4446 = args[2][67 * steps + ((cycle - 0) & mask)];
      assert(x4446 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4447 = x4446 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4448 = x4445 + x4447;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4449 = args[2][68 * steps + ((cycle - 0) & mask)];
      assert(x4449 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4450 = x4449 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4451 = x4448 + x4450;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4452 = args[2][69 * steps + ((cycle - 0) & mask)];
      assert(x4452 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4453 = x4452 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4454 = x4451 + x4453;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4455 = args[2][70 * steps + ((cycle - 0) & mask)];
      assert(x4455 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4456 = x4455 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4457 = x4454 + x4456;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4458 = args[2][71 * steps + ((cycle - 0) & mask)];
      assert(x4458 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4459 = x4458 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4460 = x4457 + x4459;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4461 = args[2][72 * steps + ((cycle - 0) & mask)];
      assert(x4461 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4462 = x4461 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4463 = x4460 + x4462;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4464 = args[2][73 * steps + ((cycle - 0) & mask)];
      assert(x4464 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4465 = x4464 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4466 = x4463 + x4465;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4467 = args[2][74 * steps + ((cycle - 0) & mask)];
      assert(x4467 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4468 = x4467 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4469 = x4466 + x4468;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4470 = args[2][75 * steps + ((cycle - 0) & mask)];
      assert(x4470 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4471 = x4470 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4472 = x4469 + x4471;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x4473 = x4394 - x4472;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x4474 = x4473 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":124:26)
        auto x4475 = Fp(x4474.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4475);
          reg = x4475;
        }
      }
      // loc("zirgen/circuit/recursion/sha.cpp":127:32)
      auto x4476 = x4395 + x4474;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4477 = Fp(x4476.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4477);
          reg = x4477;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4478 = Fp(x4476.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4479 = x4478 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4479);
          reg = x4479;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4480 = Fp(x4476.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4481 = x4480 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4481);
          reg = x4481;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4482 = Fp(x4476.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4483 = x4482 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4483);
          reg = x4483;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4484 = Fp(x4476.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4485 = x4484 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4485);
          reg = x4485;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4486 = Fp(x4476.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4487 = x4486 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4487);
          reg = x4487;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4488 = Fp(x4476.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4489 = x4488 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4489);
          reg = x4489;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4490 = Fp(x4476.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4491 = x4490 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4491);
          reg = x4491;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4492 = Fp(x4476.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4493 = x4492 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4493);
          reg = x4493;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4494 = Fp(x4476.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4495 = x4494 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4495);
          reg = x4495;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4496 = Fp(x4476.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4497 = x4496 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4497);
          reg = x4497;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4498 = Fp(x4476.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4499 = x4498 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4499);
          reg = x4499;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4500 = Fp(x4476.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4501 = x4500 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4501);
          reg = x4501;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4502 = Fp(x4476.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4503 = x4502 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][89 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4503);
          reg = x4503;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4504 = Fp(x4476.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4505 = x4504 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][90 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4505);
          reg = x4505;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4506 = Fp(x4476.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4507 = x4506 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][91 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4507);
          reg = x4507;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4508 = args[2][76 * steps + ((cycle - 0) & mask)];
      assert(x4508 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4509 = args[2][77 * steps + ((cycle - 0) & mask)];
      assert(x4509 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4510 = x4509 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4511 = x4508 + x4510;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4512 = args[2][78 * steps + ((cycle - 0) & mask)];
      assert(x4512 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4513 = x4512 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4514 = x4511 + x4513;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4515 = args[2][79 * steps + ((cycle - 0) & mask)];
      assert(x4515 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4516 = x4515 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4517 = x4514 + x4516;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4518 = args[2][80 * steps + ((cycle - 0) & mask)];
      assert(x4518 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4519 = x4518 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4520 = x4517 + x4519;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4521 = args[2][81 * steps + ((cycle - 0) & mask)];
      assert(x4521 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4522 = x4521 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4523 = x4520 + x4522;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4524 = args[2][82 * steps + ((cycle - 0) & mask)];
      assert(x4524 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4525 = x4524 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4526 = x4523 + x4525;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4527 = args[2][83 * steps + ((cycle - 0) & mask)];
      assert(x4527 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4528 = x4527 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4529 = x4526 + x4528;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4530 = args[2][84 * steps + ((cycle - 0) & mask)];
      assert(x4530 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4531 = x4530 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4532 = x4529 + x4531;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4533 = args[2][85 * steps + ((cycle - 0) & mask)];
      assert(x4533 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4534 = x4533 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4535 = x4532 + x4534;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4536 = args[2][86 * steps + ((cycle - 0) & mask)];
      assert(x4536 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4537 = x4536 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4538 = x4535 + x4537;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4539 = args[2][87 * steps + ((cycle - 0) & mask)];
      assert(x4539 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4540 = x4539 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4541 = x4538 + x4540;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4542 = args[2][88 * steps + ((cycle - 0) & mask)];
      assert(x4542 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4543 = x4542 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4544 = x4541 + x4543;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4545 = args[2][89 * steps + ((cycle - 0) & mask)];
      assert(x4545 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4546 = x4545 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4547 = x4544 + x4546;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4548 = args[2][90 * steps + ((cycle - 0) & mask)];
      assert(x4548 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4549 = x4548 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4550 = x4547 + x4549;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4551 = args[2][91 * steps + ((cycle - 0) & mask)];
      assert(x4551 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4552 = x4551 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4553 = x4550 + x4552;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x4554 = x4476 - x4553;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x4555 = x4554 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":128:27)
        auto x4556 = Fp(x4555.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4556);
          reg = x4556;
        }
      }
    }
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/opcode(OneHot)/sha_fini(Reg)"("./zirgen/components/mux.h":49:25))
    auto x4557 = args[0][13 * steps + ((cycle - 0) & mask)];
    assert(x4557 != Fp::invalid());
    if (x4557 != 0) {
      {
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][94 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][95 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][96 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][97 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][101 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][102 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][103 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][104 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][105 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][106 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][107 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][108 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][109 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4558 = args[2][94 * steps + ((cycle - 0) & mask)];
      assert(x4558 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4559 = args[2][95 * steps + ((cycle - 0) & mask)];
      assert(x4559 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4560 = x4559 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4561 = x4558 + x4560;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4562 = args[2][96 * steps + ((cycle - 0) & mask)];
      assert(x4562 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4563 = x4562 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4564 = x4561 + x4563;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4565 = args[2][97 * steps + ((cycle - 0) & mask)];
      assert(x4565 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4566 = x4565 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4567 = x4564 + x4566;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4568 = args[2][98 * steps + ((cycle - 0) & mask)];
      assert(x4568 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4569 = x4568 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4570 = x4567 + x4569;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4571 = args[2][99 * steps + ((cycle - 0) & mask)];
      assert(x4571 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4572 = x4571 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4573 = x4570 + x4572;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4574 = args[2][100 * steps + ((cycle - 0) & mask)];
      assert(x4574 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4575 = x4574 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4576 = x4573 + x4575;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4577 = args[2][101 * steps + ((cycle - 0) & mask)];
      assert(x4577 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4578 = x4577 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4579 = x4576 + x4578;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4580 = args[2][102 * steps + ((cycle - 0) & mask)];
      assert(x4580 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4581 = x4580 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4582 = x4579 + x4581;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4583 = args[2][103 * steps + ((cycle - 0) & mask)];
      assert(x4583 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4584 = x4583 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4585 = x4582 + x4584;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4586 = args[2][104 * steps + ((cycle - 0) & mask)];
      assert(x4586 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4587 = x4586 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4588 = x4585 + x4587;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4589 = args[2][105 * steps + ((cycle - 0) & mask)];
      assert(x4589 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4590 = x4589 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4591 = x4588 + x4590;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4592 = args[2][106 * steps + ((cycle - 0) & mask)];
      assert(x4592 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4593 = x4592 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4594 = x4591 + x4593;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4595 = args[2][107 * steps + ((cycle - 0) & mask)];
      assert(x4595 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4596 = x4595 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4597 = x4594 + x4596;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4598 = args[2][108 * steps + ((cycle - 0) & mask)];
      assert(x4598 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4599 = x4598 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4600 = x4597 + x4599;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4601 = args[2][109 * steps + ((cycle - 0) & mask)];
      assert(x4601 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4602 = x4601 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4603 = x4600 + x4602;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x4604 = x2353 - x4603;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x4605 = x4604 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":124:26)
        auto x4606 = Fp(x4605.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4606);
          reg = x4606;
        }
      }
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4607 = Fp(x4605.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][110 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4607);
          reg = x4607;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4608 = Fp(x4605.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4609 = x4608 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][111 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4609);
          reg = x4609;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4610 = Fp(x4605.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4611 = x4610 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][112 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4611);
          reg = x4611;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4612 = Fp(x4605.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4613 = x4612 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][113 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4613);
          reg = x4613;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4614 = Fp(x4605.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4615 = x4614 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][114 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4615);
          reg = x4615;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4616 = Fp(x4605.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4617 = x4616 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][115 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4617);
          reg = x4617;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4618 = Fp(x4605.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4619 = x4618 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4619);
          reg = x4619;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4620 = Fp(x4605.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4621 = x4620 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4621);
          reg = x4621;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4622 = Fp(x4605.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4623 = x4622 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4623);
          reg = x4623;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4624 = Fp(x4605.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4625 = x4624 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4625);
          reg = x4625;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4626 = Fp(x4605.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4627 = x4626 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4627);
          reg = x4627;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4628 = Fp(x4605.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4629 = x4628 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4629);
          reg = x4629;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4630 = Fp(x4605.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4631 = x4630 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4631);
          reg = x4631;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4632 = Fp(x4605.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4633 = x4632 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4633);
          reg = x4633;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4634 = Fp(x4605.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4635 = x4634 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4635);
          reg = x4635;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4636 = Fp(x4605.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4637 = x4636 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4637);
          reg = x4637;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4638 = args[2][110 * steps + ((cycle - 0) & mask)];
      assert(x4638 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4639 = args[2][111 * steps + ((cycle - 0) & mask)];
      assert(x4639 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4640 = x4639 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4641 = x4638 + x4640;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4642 = args[2][112 * steps + ((cycle - 0) & mask)];
      assert(x4642 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4643 = x4642 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4644 = x4641 + x4643;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4645 = args[2][113 * steps + ((cycle - 0) & mask)];
      assert(x4645 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4646 = x4645 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4647 = x4644 + x4646;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4648 = args[2][114 * steps + ((cycle - 0) & mask)];
      assert(x4648 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4649 = x4648 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4650 = x4647 + x4649;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4651 = args[2][115 * steps + ((cycle - 0) & mask)];
      assert(x4651 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4652 = x4651 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4653 = x4650 + x4652;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4654 = args[2][116 * steps + ((cycle - 0) & mask)];
      assert(x4654 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4655 = x4654 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4656 = x4653 + x4655;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4657 = args[2][117 * steps + ((cycle - 0) & mask)];
      assert(x4657 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4658 = x4657 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4659 = x4656 + x4658;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4660 = args[2][118 * steps + ((cycle - 0) & mask)];
      assert(x4660 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4661 = x4660 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4662 = x4659 + x4661;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4663 = args[2][119 * steps + ((cycle - 0) & mask)];
      assert(x4663 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4664 = x4663 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4665 = x4662 + x4664;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4666 = args[2][120 * steps + ((cycle - 0) & mask)];
      assert(x4666 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4667 = x4666 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4668 = x4665 + x4667;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4669 = args[2][121 * steps + ((cycle - 0) & mask)];
      assert(x4669 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4670 = x4669 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4671 = x4668 + x4670;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4672 = args[2][122 * steps + ((cycle - 0) & mask)];
      assert(x4672 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4673 = x4672 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4674 = x4671 + x4673;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4675 = args[2][123 * steps + ((cycle - 0) & mask)];
      assert(x4675 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4676 = x4675 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4677 = x4674 + x4676;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4678 = args[2][124 * steps + ((cycle - 0) & mask)];
      assert(x4678 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4679 = x4678 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4680 = x4677 + x4679;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4681 = args[2][125 * steps + ((cycle - 0) & mask)];
      assert(x4681 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4682 = x4681 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4683 = x4680 + x4682;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x4684 = x4605 - x4683;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x4685 = x4684 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":128:27)
        auto x4686 = Fp(x4685.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4686);
          reg = x4686;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4687 = args[2][26 * steps + ((cycle - 4) & mask)];
      assert(x4687 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4688 = args[2][27 * steps + ((cycle - 4) & mask)];
      assert(x4688 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4689 = args[2][28 * steps + ((cycle - 4) & mask)];
      assert(x4689 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4690 = args[2][29 * steps + ((cycle - 4) & mask)];
      assert(x4690 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4691 = args[2][30 * steps + ((cycle - 4) & mask)];
      assert(x4691 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4692 = args[2][31 * steps + ((cycle - 4) & mask)];
      assert(x4692 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4693 = args[2][32 * steps + ((cycle - 4) & mask)];
      assert(x4693 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4694 = args[2][33 * steps + ((cycle - 4) & mask)];
      assert(x4694 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4695 = args[2][34 * steps + ((cycle - 4) & mask)];
      assert(x4695 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4696 = args[2][35 * steps + ((cycle - 4) & mask)];
      assert(x4696 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4697 = args[2][36 * steps + ((cycle - 4) & mask)];
      assert(x4697 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4698 = args[2][37 * steps + ((cycle - 4) & mask)];
      assert(x4698 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4699 = args[2][38 * steps + ((cycle - 4) & mask)];
      assert(x4699 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4700 = args[2][39 * steps + ((cycle - 4) & mask)];
      assert(x4700 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4701 = args[2][40 * steps + ((cycle - 4) & mask)];
      assert(x4701 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4702 = args[2][41 * steps + ((cycle - 4) & mask)];
      assert(x4702 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4703 = args[2][42 * steps + ((cycle - 4) & mask)];
      assert(x4703 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4704 = args[2][43 * steps + ((cycle - 4) & mask)];
      assert(x4704 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4705 = args[2][44 * steps + ((cycle - 4) & mask)];
      assert(x4705 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4706 = args[2][45 * steps + ((cycle - 4) & mask)];
      assert(x4706 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4707 = args[2][46 * steps + ((cycle - 4) & mask)];
      assert(x4707 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4708 = args[2][47 * steps + ((cycle - 4) & mask)];
      assert(x4708 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4709 = args[2][48 * steps + ((cycle - 4) & mask)];
      assert(x4709 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4710 = args[2][49 * steps + ((cycle - 4) & mask)];
      assert(x4710 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4711 = args[2][50 * steps + ((cycle - 4) & mask)];
      assert(x4711 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4712 = args[2][51 * steps + ((cycle - 4) & mask)];
      assert(x4712 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4713 = args[2][52 * steps + ((cycle - 4) & mask)];
      assert(x4713 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4714 = args[2][53 * steps + ((cycle - 4) & mask)];
      assert(x4714 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4715 = args[2][54 * steps + ((cycle - 4) & mask)];
      assert(x4715 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4716 = args[2][55 * steps + ((cycle - 4) & mask)];
      assert(x4716 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4717 = args[2][56 * steps + ((cycle - 4) & mask)];
      assert(x4717 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4718 = args[2][57 * steps + ((cycle - 4) & mask)];
      assert(x4718 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4719 = x4688 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4720 = x4687 + x4719;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4721 = x4689 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4722 = x4720 + x4721;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4723 = x4690 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4724 = x4722 + x4723;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4725 = x4691 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4726 = x4724 + x4725;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4727 = x4692 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4728 = x4726 + x4727;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4729 = x4693 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4730 = x4728 + x4729;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4731 = x4694 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4732 = x4730 + x4731;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4733 = x4695 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4734 = x4732 + x4733;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4735 = x4696 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4736 = x4734 + x4735;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4737 = x4697 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4738 = x4736 + x4737;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4739 = x4698 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4740 = x4738 + x4739;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4741 = x4699 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4742 = x4740 + x4741;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4743 = x4700 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4744 = x4742 + x4743;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4745 = x4701 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4746 = x4744 + x4745;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4747 = x4702 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4748 = x4746 + x4747;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4749 = x4704 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4750 = x4703 + x4749;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4751 = x4705 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4752 = x4750 + x4751;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4753 = x4706 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4754 = x4752 + x4753;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4755 = x4707 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4756 = x4754 + x4755;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4757 = x4708 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4758 = x4756 + x4757;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4759 = x4709 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4760 = x4758 + x4759;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4761 = x4710 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4762 = x4760 + x4761;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4763 = x4711 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4764 = x4762 + x4763;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4765 = x4712 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4766 = x4764 + x4765;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4767 = x4713 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4768 = x4766 + x4767;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4769 = x4714 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4770 = x4768 + x4769;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4771 = x4715 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4772 = x4770 + x4771;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4773 = x4716 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4774 = x4772 + x4773;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4775 = x4717 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4776 = x4774 + x4775;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4777 = x4718 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4778 = x4776 + x4777;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4779 = args[2][26 * steps + ((cycle - 68) & mask)];
      assert(x4779 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4780 = args[2][27 * steps + ((cycle - 68) & mask)];
      assert(x4780 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4781 = args[2][28 * steps + ((cycle - 68) & mask)];
      assert(x4781 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4782 = args[2][29 * steps + ((cycle - 68) & mask)];
      assert(x4782 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4783 = args[2][30 * steps + ((cycle - 68) & mask)];
      assert(x4783 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4784 = args[2][31 * steps + ((cycle - 68) & mask)];
      assert(x4784 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4785 = args[2][32 * steps + ((cycle - 68) & mask)];
      assert(x4785 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4786 = args[2][33 * steps + ((cycle - 68) & mask)];
      assert(x4786 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4787 = args[2][34 * steps + ((cycle - 68) & mask)];
      assert(x4787 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4788 = args[2][35 * steps + ((cycle - 68) & mask)];
      assert(x4788 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4789 = args[2][36 * steps + ((cycle - 68) & mask)];
      assert(x4789 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4790 = args[2][37 * steps + ((cycle - 68) & mask)];
      assert(x4790 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4791 = args[2][38 * steps + ((cycle - 68) & mask)];
      assert(x4791 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4792 = args[2][39 * steps + ((cycle - 68) & mask)];
      assert(x4792 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4793 = args[2][40 * steps + ((cycle - 68) & mask)];
      assert(x4793 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4794 = args[2][41 * steps + ((cycle - 68) & mask)];
      assert(x4794 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4795 = args[2][42 * steps + ((cycle - 68) & mask)];
      assert(x4795 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4796 = args[2][43 * steps + ((cycle - 68) & mask)];
      assert(x4796 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4797 = args[2][44 * steps + ((cycle - 68) & mask)];
      assert(x4797 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4798 = args[2][45 * steps + ((cycle - 68) & mask)];
      assert(x4798 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4799 = args[2][46 * steps + ((cycle - 68) & mask)];
      assert(x4799 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4800 = args[2][47 * steps + ((cycle - 68) & mask)];
      assert(x4800 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4801 = args[2][48 * steps + ((cycle - 68) & mask)];
      assert(x4801 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4802 = args[2][49 * steps + ((cycle - 68) & mask)];
      assert(x4802 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4803 = args[2][50 * steps + ((cycle - 68) & mask)];
      assert(x4803 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4804 = args[2][51 * steps + ((cycle - 68) & mask)];
      assert(x4804 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4805 = args[2][52 * steps + ((cycle - 68) & mask)];
      assert(x4805 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4806 = args[2][53 * steps + ((cycle - 68) & mask)];
      assert(x4806 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4807 = args[2][54 * steps + ((cycle - 68) & mask)];
      assert(x4807 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4808 = args[2][55 * steps + ((cycle - 68) & mask)];
      assert(x4808 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4809 = args[2][56 * steps + ((cycle - 68) & mask)];
      assert(x4809 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4810 = args[2][57 * steps + ((cycle - 68) & mask)];
      assert(x4810 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4811 = x4780 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4812 = x4779 + x4811;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4813 = x4781 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4814 = x4812 + x4813;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4815 = x4782 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4816 = x4814 + x4815;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4817 = x4783 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4818 = x4816 + x4817;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4819 = x4784 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4820 = x4818 + x4819;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4821 = x4785 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4822 = x4820 + x4821;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4823 = x4786 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4824 = x4822 + x4823;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4825 = x4787 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4826 = x4824 + x4825;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4827 = x4788 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4828 = x4826 + x4827;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4829 = x4789 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4830 = x4828 + x4829;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4831 = x4790 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4832 = x4830 + x4831;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4833 = x4791 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4834 = x4832 + x4833;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4835 = x4792 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4836 = x4834 + x4835;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4837 = x4793 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4838 = x4836 + x4837;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4839 = x4794 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4840 = x4838 + x4839;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4841 = x4796 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4842 = x4795 + x4841;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4843 = x4797 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4844 = x4842 + x4843;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4845 = x4798 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4846 = x4844 + x4845;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4847 = x4799 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4848 = x4846 + x4847;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4849 = x4800 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4850 = x4848 + x4849;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4851 = x4801 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4852 = x4850 + x4851;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4853 = x4802 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4854 = x4852 + x4853;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4855 = x4803 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4856 = x4854 + x4855;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4857 = x4804 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4858 = x4856 + x4857;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4859 = x4805 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4860 = x4858 + x4859;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4861 = x4806 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4862 = x4860 + x4861;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4863 = x4807 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4864 = x4862 + x4863;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4865 = x4808 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4866 = x4864 + x4865;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4867 = x4809 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4868 = x4866 + x4867;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x4869 = x4810 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x4870 = x4868 + x4869;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x4871 = x4748 + x4840;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x4872 = x4778 + x4870;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4873 = Fp(x4871.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4873);
          reg = x4873;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4874 = Fp(x4871.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4875 = x4874 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4875);
          reg = x4875;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4876 = Fp(x4871.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4877 = x4876 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4877);
          reg = x4877;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4878 = Fp(x4871.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4879 = x4878 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4879);
          reg = x4879;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4880 = Fp(x4871.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4881 = x4880 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4881);
          reg = x4881;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4882 = Fp(x4871.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4883 = x4882 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4883);
          reg = x4883;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4884 = Fp(x4871.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4885 = x4884 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4885);
          reg = x4885;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4886 = Fp(x4871.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4887 = x4886 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4887);
          reg = x4887;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4888 = Fp(x4871.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4889 = x4888 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4889);
          reg = x4889;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4890 = Fp(x4871.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4891 = x4890 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4891);
          reg = x4891;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4892 = Fp(x4871.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4893 = x4892 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4893);
          reg = x4893;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4894 = Fp(x4871.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4895 = x4894 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][37 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4895);
          reg = x4895;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4896 = Fp(x4871.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4897 = x4896 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][38 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4897);
          reg = x4897;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4898 = Fp(x4871.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4899 = x4898 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][39 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4899);
          reg = x4899;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4900 = Fp(x4871.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4901 = x4900 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][40 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4901);
          reg = x4901;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4902 = Fp(x4871.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4903 = x4902 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][41 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4903);
          reg = x4903;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4904 = args[2][26 * steps + ((cycle - 0) & mask)];
      assert(x4904 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4905 = args[2][27 * steps + ((cycle - 0) & mask)];
      assert(x4905 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4906 = x4905 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4907 = x4904 + x4906;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4908 = args[2][28 * steps + ((cycle - 0) & mask)];
      assert(x4908 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4909 = x4908 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4910 = x4907 + x4909;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4911 = args[2][29 * steps + ((cycle - 0) & mask)];
      assert(x4911 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4912 = x4911 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4913 = x4910 + x4912;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4914 = args[2][30 * steps + ((cycle - 0) & mask)];
      assert(x4914 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4915 = x4914 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4916 = x4913 + x4915;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4917 = args[2][31 * steps + ((cycle - 0) & mask)];
      assert(x4917 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4918 = x4917 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4919 = x4916 + x4918;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4920 = args[2][32 * steps + ((cycle - 0) & mask)];
      assert(x4920 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4921 = x4920 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4922 = x4919 + x4921;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4923 = args[2][33 * steps + ((cycle - 0) & mask)];
      assert(x4923 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4924 = x4923 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4925 = x4922 + x4924;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4926 = args[2][34 * steps + ((cycle - 0) & mask)];
      assert(x4926 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4927 = x4926 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4928 = x4925 + x4927;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4929 = args[2][35 * steps + ((cycle - 0) & mask)];
      assert(x4929 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4930 = x4929 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4931 = x4928 + x4930;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4932 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x4932 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4933 = x4932 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4934 = x4931 + x4933;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4935 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x4935 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4936 = x4935 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4937 = x4934 + x4936;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4938 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x4938 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4939 = x4938 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4940 = x4937 + x4939;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4941 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x4941 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4942 = x4941 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4943 = x4940 + x4942;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4944 = args[2][40 * steps + ((cycle - 0) & mask)];
      assert(x4944 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4945 = x4944 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4946 = x4943 + x4945;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4947 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x4947 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4948 = x4947 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4949 = x4946 + x4948;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x4950 = x4871 - x4949;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x4951 = x4950 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":124:26)
        auto x4952 = Fp(x4951.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][5 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4952);
          reg = x4952;
        }
      }
      // loc("zirgen/circuit/recursion/sha.cpp":127:32)
      auto x4953 = x4872 + x4951;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4954 = Fp(x4953.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][42 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4954);
          reg = x4954;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4955 = Fp(x4953.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4956 = x4955 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][43 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4956);
          reg = x4956;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4957 = Fp(x4953.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4958 = x4957 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][44 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4958);
          reg = x4958;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4959 = Fp(x4953.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4960 = x4959 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][45 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4960);
          reg = x4960;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4961 = Fp(x4953.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4962 = x4961 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][46 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4962);
          reg = x4962;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4963 = Fp(x4953.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4964 = x4963 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][47 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4964);
          reg = x4964;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4965 = Fp(x4953.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4966 = x4965 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][48 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4966);
          reg = x4966;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4967 = Fp(x4953.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4968 = x4967 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][49 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4968);
          reg = x4968;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4969 = Fp(x4953.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4970 = x4969 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][50 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4970);
          reg = x4970;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4971 = Fp(x4953.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4972 = x4971 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][51 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4972);
          reg = x4972;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4973 = Fp(x4953.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4974 = x4973 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][52 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4974);
          reg = x4974;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4975 = Fp(x4953.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4976 = x4975 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][53 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4976);
          reg = x4976;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4977 = Fp(x4953.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4978 = x4977 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][54 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4978);
          reg = x4978;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4979 = Fp(x4953.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4980 = x4979 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][55 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4980);
          reg = x4980;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4981 = Fp(x4953.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4982 = x4981 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][56 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4982);
          reg = x4982;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x4983 = Fp(x4953.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x4984 = x4983 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][57 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4984);
          reg = x4984;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4985 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x4985 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4986 = args[2][43 * steps + ((cycle - 0) & mask)];
      assert(x4986 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4987 = x4986 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4988 = x4985 + x4987;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4989 = args[2][44 * steps + ((cycle - 0) & mask)];
      assert(x4989 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4990 = x4989 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4991 = x4988 + x4990;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4992 = args[2][45 * steps + ((cycle - 0) & mask)];
      assert(x4992 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4993 = x4992 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4994 = x4991 + x4993;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4995 = args[2][46 * steps + ((cycle - 0) & mask)];
      assert(x4995 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4996 = x4995 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x4997 = x4994 + x4996;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4998 = args[2][47 * steps + ((cycle - 0) & mask)];
      assert(x4998 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x4999 = x4998 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5000 = x4997 + x4999;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5001 = args[2][48 * steps + ((cycle - 0) & mask)];
      assert(x5001 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5002 = x5001 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5003 = x5000 + x5002;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5004 = args[2][49 * steps + ((cycle - 0) & mask)];
      assert(x5004 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5005 = x5004 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5006 = x5003 + x5005;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5007 = args[2][50 * steps + ((cycle - 0) & mask)];
      assert(x5007 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5008 = x5007 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5009 = x5006 + x5008;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5010 = args[2][51 * steps + ((cycle - 0) & mask)];
      assert(x5010 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5011 = x5010 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5012 = x5009 + x5011;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5013 = args[2][52 * steps + ((cycle - 0) & mask)];
      assert(x5013 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5014 = x5013 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5015 = x5012 + x5014;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5016 = args[2][53 * steps + ((cycle - 0) & mask)];
      assert(x5016 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5017 = x5016 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5018 = x5015 + x5017;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5019 = args[2][54 * steps + ((cycle - 0) & mask)];
      assert(x5019 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5020 = x5019 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5021 = x5018 + x5020;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5022 = args[2][55 * steps + ((cycle - 0) & mask)];
      assert(x5022 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5023 = x5022 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5024 = x5021 + x5023;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5025 = args[2][56 * steps + ((cycle - 0) & mask)];
      assert(x5025 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5026 = x5025 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5027 = x5024 + x5026;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5028 = args[2][57 * steps + ((cycle - 0) & mask)];
      assert(x5028 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5029 = x5028 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5030 = x5027 + x5029;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x5031 = x4953 - x5030;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x5032 = x5031 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":128:27)
        auto x5033 = Fp(x5032.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5033);
          reg = x5033;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5034 = args[2][60 * steps + ((cycle - 4) & mask)];
      assert(x5034 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5035 = args[2][61 * steps + ((cycle - 4) & mask)];
      assert(x5035 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5036 = args[2][62 * steps + ((cycle - 4) & mask)];
      assert(x5036 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5037 = args[2][63 * steps + ((cycle - 4) & mask)];
      assert(x5037 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5038 = args[2][64 * steps + ((cycle - 4) & mask)];
      assert(x5038 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5039 = args[2][65 * steps + ((cycle - 4) & mask)];
      assert(x5039 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5040 = args[2][66 * steps + ((cycle - 4) & mask)];
      assert(x5040 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5041 = args[2][67 * steps + ((cycle - 4) & mask)];
      assert(x5041 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5042 = args[2][68 * steps + ((cycle - 4) & mask)];
      assert(x5042 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5043 = args[2][69 * steps + ((cycle - 4) & mask)];
      assert(x5043 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5044 = args[2][70 * steps + ((cycle - 4) & mask)];
      assert(x5044 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5045 = args[2][71 * steps + ((cycle - 4) & mask)];
      assert(x5045 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5046 = args[2][72 * steps + ((cycle - 4) & mask)];
      assert(x5046 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5047 = args[2][73 * steps + ((cycle - 4) & mask)];
      assert(x5047 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5048 = args[2][74 * steps + ((cycle - 4) & mask)];
      assert(x5048 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5049 = args[2][75 * steps + ((cycle - 4) & mask)];
      assert(x5049 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5050 = args[2][76 * steps + ((cycle - 4) & mask)];
      assert(x5050 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5051 = args[2][77 * steps + ((cycle - 4) & mask)];
      assert(x5051 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5052 = args[2][78 * steps + ((cycle - 4) & mask)];
      assert(x5052 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5053 = args[2][79 * steps + ((cycle - 4) & mask)];
      assert(x5053 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5054 = args[2][80 * steps + ((cycle - 4) & mask)];
      assert(x5054 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5055 = args[2][81 * steps + ((cycle - 4) & mask)];
      assert(x5055 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5056 = args[2][82 * steps + ((cycle - 4) & mask)];
      assert(x5056 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5057 = args[2][83 * steps + ((cycle - 4) & mask)];
      assert(x5057 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5058 = args[2][84 * steps + ((cycle - 4) & mask)];
      assert(x5058 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5059 = args[2][85 * steps + ((cycle - 4) & mask)];
      assert(x5059 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5060 = args[2][86 * steps + ((cycle - 4) & mask)];
      assert(x5060 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5061 = args[2][87 * steps + ((cycle - 4) & mask)];
      assert(x5061 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5062 = args[2][88 * steps + ((cycle - 4) & mask)];
      assert(x5062 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5063 = args[2][89 * steps + ((cycle - 4) & mask)];
      assert(x5063 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5064 = args[2][90 * steps + ((cycle - 4) & mask)];
      assert(x5064 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5065 = args[2][91 * steps + ((cycle - 4) & mask)];
      assert(x5065 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5066 = x5035 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5067 = x5034 + x5066;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5068 = x5036 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5069 = x5067 + x5068;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5070 = x5037 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5071 = x5069 + x5070;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5072 = x5038 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5073 = x5071 + x5072;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5074 = x5039 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5075 = x5073 + x5074;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5076 = x5040 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5077 = x5075 + x5076;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5078 = x5041 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5079 = x5077 + x5078;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5080 = x5042 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5081 = x5079 + x5080;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5082 = x5043 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5083 = x5081 + x5082;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5084 = x5044 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5085 = x5083 + x5084;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5086 = x5045 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5087 = x5085 + x5086;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5088 = x5046 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5089 = x5087 + x5088;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5090 = x5047 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5091 = x5089 + x5090;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5092 = x5048 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5093 = x5091 + x5092;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5094 = x5049 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5095 = x5093 + x5094;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5096 = x5051 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5097 = x5050 + x5096;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5098 = x5052 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5099 = x5097 + x5098;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5100 = x5053 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5101 = x5099 + x5100;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5102 = x5054 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5103 = x5101 + x5102;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5104 = x5055 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5105 = x5103 + x5104;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5106 = x5056 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5107 = x5105 + x5106;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5108 = x5057 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5109 = x5107 + x5108;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5110 = x5058 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5111 = x5109 + x5110;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5112 = x5059 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5113 = x5111 + x5112;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5114 = x5060 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5115 = x5113 + x5114;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5116 = x5061 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5117 = x5115 + x5116;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5118 = x5062 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5119 = x5117 + x5118;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5120 = x5063 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5121 = x5119 + x5120;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5122 = x5064 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5123 = x5121 + x5122;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5124 = x5065 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5125 = x5123 + x5124;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5126 = args[2][60 * steps + ((cycle - 68) & mask)];
      assert(x5126 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5127 = args[2][61 * steps + ((cycle - 68) & mask)];
      assert(x5127 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5128 = args[2][62 * steps + ((cycle - 68) & mask)];
      assert(x5128 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5129 = args[2][63 * steps + ((cycle - 68) & mask)];
      assert(x5129 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5130 = args[2][64 * steps + ((cycle - 68) & mask)];
      assert(x5130 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5131 = args[2][65 * steps + ((cycle - 68) & mask)];
      assert(x5131 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5132 = args[2][66 * steps + ((cycle - 68) & mask)];
      assert(x5132 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5133 = args[2][67 * steps + ((cycle - 68) & mask)];
      assert(x5133 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5134 = args[2][68 * steps + ((cycle - 68) & mask)];
      assert(x5134 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5135 = args[2][69 * steps + ((cycle - 68) & mask)];
      assert(x5135 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5136 = args[2][70 * steps + ((cycle - 68) & mask)];
      assert(x5136 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5137 = args[2][71 * steps + ((cycle - 68) & mask)];
      assert(x5137 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5138 = args[2][72 * steps + ((cycle - 68) & mask)];
      assert(x5138 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5139 = args[2][73 * steps + ((cycle - 68) & mask)];
      assert(x5139 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5140 = args[2][74 * steps + ((cycle - 68) & mask)];
      assert(x5140 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5141 = args[2][75 * steps + ((cycle - 68) & mask)];
      assert(x5141 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5142 = args[2][76 * steps + ((cycle - 68) & mask)];
      assert(x5142 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5143 = args[2][77 * steps + ((cycle - 68) & mask)];
      assert(x5143 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5144 = args[2][78 * steps + ((cycle - 68) & mask)];
      assert(x5144 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5145 = args[2][79 * steps + ((cycle - 68) & mask)];
      assert(x5145 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5146 = args[2][80 * steps + ((cycle - 68) & mask)];
      assert(x5146 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5147 = args[2][81 * steps + ((cycle - 68) & mask)];
      assert(x5147 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5148 = args[2][82 * steps + ((cycle - 68) & mask)];
      assert(x5148 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5149 = args[2][83 * steps + ((cycle - 68) & mask)];
      assert(x5149 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5150 = args[2][84 * steps + ((cycle - 68) & mask)];
      assert(x5150 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5151 = args[2][85 * steps + ((cycle - 68) & mask)];
      assert(x5151 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5152 = args[2][86 * steps + ((cycle - 68) & mask)];
      assert(x5152 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5153 = args[2][87 * steps + ((cycle - 68) & mask)];
      assert(x5153 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5154 = args[2][88 * steps + ((cycle - 68) & mask)];
      assert(x5154 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5155 = args[2][89 * steps + ((cycle - 68) & mask)];
      assert(x5155 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5156 = args[2][90 * steps + ((cycle - 68) & mask)];
      assert(x5156 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5157 = args[2][91 * steps + ((cycle - 68) & mask)];
      assert(x5157 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5158 = x5127 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5159 = x5126 + x5158;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5160 = x5128 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5161 = x5159 + x5160;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5162 = x5129 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5163 = x5161 + x5162;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5164 = x5130 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5165 = x5163 + x5164;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5166 = x5131 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5167 = x5165 + x5166;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5168 = x5132 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5169 = x5167 + x5168;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5170 = x5133 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5171 = x5169 + x5170;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5172 = x5134 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5173 = x5171 + x5172;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5174 = x5135 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5175 = x5173 + x5174;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5176 = x5136 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5177 = x5175 + x5176;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5178 = x5137 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5179 = x5177 + x5178;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5180 = x5138 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5181 = x5179 + x5180;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5182 = x5139 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5183 = x5181 + x5182;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5184 = x5140 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5185 = x5183 + x5184;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5186 = x5141 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5187 = x5185 + x5186;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5188 = x5143 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5189 = x5142 + x5188;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5190 = x5144 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5191 = x5189 + x5190;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5192 = x5145 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5193 = x5191 + x5192;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5194 = x5146 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5195 = x5193 + x5194;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5196 = x5147 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5197 = x5195 + x5196;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5198 = x5148 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5199 = x5197 + x5198;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5200 = x5149 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5201 = x5199 + x5200;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5202 = x5150 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5203 = x5201 + x5202;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5204 = x5151 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5205 = x5203 + x5204;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5206 = x5152 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5207 = x5205 + x5206;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5208 = x5153 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5209 = x5207 + x5208;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5210 = x5154 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5211 = x5209 + x5210;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5212 = x5155 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5213 = x5211 + x5212;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5214 = x5156 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5215 = x5213 + x5214;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x5216 = x5157 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x5217 = x5215 + x5216;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x5218 = x5095 + x5187;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x5219 = x5125 + x5217;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5220 = Fp(x5218.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][60 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5220);
          reg = x5220;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5221 = Fp(x5218.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5222 = x5221 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][61 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5222);
          reg = x5222;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5223 = Fp(x5218.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5224 = x5223 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][62 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5224);
          reg = x5224;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5225 = Fp(x5218.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5226 = x5225 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][63 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5226);
          reg = x5226;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5227 = Fp(x5218.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5228 = x5227 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][64 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5228);
          reg = x5228;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5229 = Fp(x5218.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5230 = x5229 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][65 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5230);
          reg = x5230;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5231 = Fp(x5218.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5232 = x5231 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][66 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5232);
          reg = x5232;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5233 = Fp(x5218.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5234 = x5233 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][67 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5234);
          reg = x5234;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5235 = Fp(x5218.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5236 = x5235 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][68 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5236);
          reg = x5236;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5237 = Fp(x5218.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5238 = x5237 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][69 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5238);
          reg = x5238;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5239 = Fp(x5218.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5240 = x5239 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5240);
          reg = x5240;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5241 = Fp(x5218.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5242 = x5241 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5242);
          reg = x5242;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5243 = Fp(x5218.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5244 = x5243 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][72 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5244);
          reg = x5244;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5245 = Fp(x5218.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5246 = x5245 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5246);
          reg = x5246;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5247 = Fp(x5218.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5248 = x5247 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5248);
          reg = x5248;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5249 = Fp(x5218.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5250 = x5249 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5250);
          reg = x5250;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5251 = args[2][60 * steps + ((cycle - 0) & mask)];
      assert(x5251 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5252 = args[2][61 * steps + ((cycle - 0) & mask)];
      assert(x5252 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5253 = x5252 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5254 = x5251 + x5253;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5255 = args[2][62 * steps + ((cycle - 0) & mask)];
      assert(x5255 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5256 = x5255 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5257 = x5254 + x5256;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5258 = args[2][63 * steps + ((cycle - 0) & mask)];
      assert(x5258 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5259 = x5258 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5260 = x5257 + x5259;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5261 = args[2][64 * steps + ((cycle - 0) & mask)];
      assert(x5261 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5262 = x5261 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5263 = x5260 + x5262;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5264 = args[2][65 * steps + ((cycle - 0) & mask)];
      assert(x5264 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5265 = x5264 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5266 = x5263 + x5265;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5267 = args[2][66 * steps + ((cycle - 0) & mask)];
      assert(x5267 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5268 = x5267 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5269 = x5266 + x5268;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5270 = args[2][67 * steps + ((cycle - 0) & mask)];
      assert(x5270 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5271 = x5270 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5272 = x5269 + x5271;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5273 = args[2][68 * steps + ((cycle - 0) & mask)];
      assert(x5273 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5274 = x5273 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5275 = x5272 + x5274;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5276 = args[2][69 * steps + ((cycle - 0) & mask)];
      assert(x5276 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5277 = x5276 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5278 = x5275 + x5277;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5279 = args[2][70 * steps + ((cycle - 0) & mask)];
      assert(x5279 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5280 = x5279 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5281 = x5278 + x5280;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5282 = args[2][71 * steps + ((cycle - 0) & mask)];
      assert(x5282 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5283 = x5282 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5284 = x5281 + x5283;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5285 = args[2][72 * steps + ((cycle - 0) & mask)];
      assert(x5285 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5286 = x5285 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5287 = x5284 + x5286;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5288 = args[2][73 * steps + ((cycle - 0) & mask)];
      assert(x5288 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5289 = x5288 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5290 = x5287 + x5289;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5291 = args[2][74 * steps + ((cycle - 0) & mask)];
      assert(x5291 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5292 = x5291 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5293 = x5290 + x5292;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5294 = args[2][75 * steps + ((cycle - 0) & mask)];
      assert(x5294 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5295 = x5294 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5296 = x5293 + x5295;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x5297 = x5218 - x5296;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x5298 = x5297 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":124:26)
        auto x5299 = Fp(x5298.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5299);
          reg = x5299;
        }
      }
      // loc("zirgen/circuit/recursion/sha.cpp":127:32)
      auto x5300 = x5219 + x5298;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5301 = Fp(x5300.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5301);
          reg = x5301;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5302 = Fp(x5300.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5303 = x5302 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5303);
          reg = x5303;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5304 = Fp(x5300.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5305 = x5304 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5305);
          reg = x5305;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5306 = Fp(x5300.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5307 = x5306 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5307);
          reg = x5307;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5308 = Fp(x5300.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5309 = x5308 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5309);
          reg = x5309;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5310 = Fp(x5300.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5311 = x5310 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5311);
          reg = x5311;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5312 = Fp(x5300.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5313 = x5312 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5313);
          reg = x5313;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5314 = Fp(x5300.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5315 = x5314 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5315);
          reg = x5315;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5316 = Fp(x5300.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5317 = x5316 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5317);
          reg = x5317;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5318 = Fp(x5300.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5319 = x5318 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5319);
          reg = x5319;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5320 = Fp(x5300.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5321 = x5320 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5321);
          reg = x5321;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5322 = Fp(x5300.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5323 = x5322 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5323);
          reg = x5323;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5324 = Fp(x5300.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5325 = x5324 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5325);
          reg = x5325;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5326 = Fp(x5300.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5327 = x5326 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][89 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5327);
          reg = x5327;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5328 = Fp(x5300.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5329 = x5328 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][90 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5329);
          reg = x5329;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x5330 = Fp(x5300.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x5331 = x5330 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][91 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5331);
          reg = x5331;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5332 = args[2][76 * steps + ((cycle - 0) & mask)];
      assert(x5332 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5333 = args[2][77 * steps + ((cycle - 0) & mask)];
      assert(x5333 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5334 = x5333 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5335 = x5332 + x5334;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5336 = args[2][78 * steps + ((cycle - 0) & mask)];
      assert(x5336 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5337 = x5336 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5338 = x5335 + x5337;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5339 = args[2][79 * steps + ((cycle - 0) & mask)];
      assert(x5339 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5340 = x5339 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5341 = x5338 + x5340;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5342 = args[2][80 * steps + ((cycle - 0) & mask)];
      assert(x5342 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5343 = x5342 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5344 = x5341 + x5343;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5345 = args[2][81 * steps + ((cycle - 0) & mask)];
      assert(x5345 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5346 = x5345 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5347 = x5344 + x5346;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5348 = args[2][82 * steps + ((cycle - 0) & mask)];
      assert(x5348 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5349 = x5348 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5350 = x5347 + x5349;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5351 = args[2][83 * steps + ((cycle - 0) & mask)];
      assert(x5351 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5352 = x5351 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5353 = x5350 + x5352;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5354 = args[2][84 * steps + ((cycle - 0) & mask)];
      assert(x5354 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5355 = x5354 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5356 = x5353 + x5355;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5357 = args[2][85 * steps + ((cycle - 0) & mask)];
      assert(x5357 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5358 = x5357 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5359 = x5356 + x5358;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5360 = args[2][86 * steps + ((cycle - 0) & mask)];
      assert(x5360 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5361 = x5360 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5362 = x5359 + x5361;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5363 = args[2][87 * steps + ((cycle - 0) & mask)];
      assert(x5363 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5364 = x5363 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5365 = x5362 + x5364;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5366 = args[2][88 * steps + ((cycle - 0) & mask)];
      assert(x5366 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5367 = x5366 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5368 = x5365 + x5367;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5369 = args[2][89 * steps + ((cycle - 0) & mask)];
      assert(x5369 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5370 = x5369 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5371 = x5368 + x5370;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5372 = args[2][90 * steps + ((cycle - 0) & mask)];
      assert(x5372 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5373 = x5372 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5374 = x5371 + x5373;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5375 = args[2][91 * steps + ((cycle - 0) & mask)];
      assert(x5375 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x5376 = x5375 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x5377 = x5374 + x5376;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x5378 = x5300 - x5377;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x5379 = x5378 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":128:27)
        auto x5380 = Fp(x5379.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5380);
          reg = x5380;
        }
      }
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5381 = x4929 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5382 = x4926 + x5381;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5383 = x4932 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5384 = x5382 + x5383;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5385 = x4935 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5386 = x5384 + x5385;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5387 = x4938 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5388 = x5386 + x5387;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5389 = x4941 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5390 = x5388 + x5389;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5391 = x4944 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5392 = x5390 + x5391;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5393 = x4947 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5394 = x5392 + x5393;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5395 = x5010 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5396 = x5007 + x5395;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5397 = x5013 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5398 = x5396 + x5397;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5399 = x5016 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5400 = x5398 + x5399;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5401 = x5019 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5402 = x5400 + x5401;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5403 = x5022 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5404 = x5402 + x5403;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5405 = x5025 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5406 = x5404 + x5405;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5407 = x5028 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5408 = x5406 + x5407;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5409 = x5276 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5410 = x5273 + x5409;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5411 = x5279 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5412 = x5410 + x5411;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5413 = x5282 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5414 = x5412 + x5413;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5415 = x5285 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5416 = x5414 + x5415;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5417 = x5288 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5418 = x5416 + x5417;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5419 = x5291 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5420 = x5418 + x5419;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5421 = x5294 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5422 = x5420 + x5421;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5423 = x5357 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5424 = x5354 + x5423;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5425 = x5360 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5426 = x5424 + x5425;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5427 = x5363 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5428 = x5426 + x5427;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5429 = x5366 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5430 = x5428 + x5429;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5431 = x5369 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5432 = x5430 + x5431;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5433 = x5372 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5434 = x5432 + x5433;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5435 = x5375 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5436 = x5434 + x5435;
      host_args.at(0) = x4925;
      host_args.at(1) = x5394;
      host_args.at(2) = x5006;
      host_args.at(3) = x5408;
      host_args.at(4) = x5272;
      host_args.at(5) = x5422;
      host_args.at(6) = x5353;
      host_args.at(7) = x5436;
      host(ctx, "log", "SHA_FINI: a = %w, e = %w", host_args.data(), 8, host_outs.data(), 0);
      // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5437 = args[0][17 * steps + ((cycle - 0) & mask)];
      assert(x5437 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":248:46)
      auto x5438 = x5006 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":248:36)
      auto x5439 = x5408 + x5438;
      // loc("zirgen/circuit/recursion/sha.cpp":248:71)
      auto x5440 = x4925 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":248:61)
      auto x5441 = x5394 + x5440;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5437);
        reg = x5437;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][12 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5439);
        reg = x5439;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][13 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5441);
        reg = x5441;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][14 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x5442 = args[2][11 * steps + ((cycle - 0) & mask)];
        assert(x5442 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x5443 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x5443 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x5444 = args[2][13 * steps + ((cycle - 0) & mask)];
        assert(x5444 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x5445 = args[2][14 * steps + ((cycle - 0) & mask)];
        assert(x5445 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x5446 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x5446 != Fp::invalid());
        host_args.at(0) = x5442;
        host_args.at(1) = x5443;
        host_args.at(2) = x5444;
        host_args.at(3) = x5445;
        host_args.at(4) = x5446;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
      // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5447 = args[0][18 * steps + ((cycle - 0) & mask)];
      assert(x5447 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":249:46)
      auto x5448 = x5353 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":249:36)
      auto x5449 = x5436 + x5448;
      // loc("zirgen/circuit/recursion/sha.cpp":249:71)
      auto x5450 = x5272 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":249:61)
      auto x5451 = x5422 + x5450;
      // loc("zirgen/circuit/recursion/wom.cpp":85:3)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5447);
        reg = x5447;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5449);
        reg = x5449;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5451);
        reg = x5451;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x5452 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x5452 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x5453 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x5453 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x5454 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x5454 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x5455 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x5455 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x5456 = args[2][20 * steps + ((cycle - 0) & mask)];
        assert(x5456 != Fp::invalid());
        host_args.at(0) = x5452;
        host_args.at(1) = x5453;
        host_args.at(2) = x5454;
        host_args.at(3) = x5455;
        host_args.at(4) = x5456;
        host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
      }
    }
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/opcode(OneHot)/sha_load(Reg)"("./zirgen/components/mux.h":49:25))
    auto x5457 = args[0][14 * steps + ((cycle - 0) & mask)];
    assert(x5457 != Fp::invalid());
    if (x5457 != 0) {
      // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5458 = args[0][17 * steps + ((cycle - 0) & mask)];
      assert(x5458 != Fp::invalid());
      {
        host_args.at(0) = x5458;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x5459 = host_outs.at(0);
        auto x5460 = host_outs.at(1);
        auto x5461 = host_outs.at(2);
        auto x5462 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5459);
          reg = x5459;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5460);
          reg = x5460;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5461);
          reg = x5461;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5462);
          reg = x5462;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5458);
        reg = x5458;
      }
      // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5463 = args[0][18 * steps + ((cycle - 0) & mask)];
      assert(x5463 != Fp::invalid());
      {
        host_args.at(0) = x5463;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x5464 = host_outs.at(0);
        auto x5465 = host_outs.at(1);
        auto x5466 = host_outs.at(2);
        auto x5467 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5464);
          reg = x5464;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5465);
          reg = x5465;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5466);
          reg = x5466;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5467);
          reg = x5467;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5463);
        reg = x5463;
      }
      // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[2](Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
      auto x5468 = args[0][19 * steps + ((cycle - 0) & mask)];
      assert(x5468 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":177:27)
      auto x5469 = x2352 - x5468;
      if (x5469 != 0) {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x5470 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x5470 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":179:15)
        auto x5471 = x5470 * x2283;
        {
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5472 = Fp(x5471.asUInt32() & x2352.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][118 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5472);
            reg = x5472;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5473 = Fp(x5471.asUInt32() & x2351.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5474 = x5473 * x2339;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5474);
            reg = x5474;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5475 = Fp(x5471.asUInt32() & x2349.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5476 = x5475 * x2338;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5476);
            reg = x5476;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5477 = Fp(x5471.asUInt32() & x2345.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5478 = x5477 * x2337;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5478);
            reg = x5478;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5479 = Fp(x5471.asUInt32() & x2336.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5480 = x5479 * x2335;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5480);
            reg = x5480;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5481 = Fp(x5471.asUInt32() & x2334.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5482 = x5481 * x2333;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5482);
            reg = x5482;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5483 = Fp(x5471.asUInt32() & x2332.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5484 = x5483 * x2331;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5484);
            reg = x5484;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5485 = Fp(x5471.asUInt32() & x2330.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5486 = x5485 * x2329;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][125 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5486);
            reg = x5486;
          }
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5487 = args[2][118 * steps + ((cycle - 0) & mask)];
        assert(x5487 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5488 = args[2][119 * steps + ((cycle - 0) & mask)];
        assert(x5488 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5489 = x5488 * x2351;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5490 = x5487 + x5489;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5491 = args[2][120 * steps + ((cycle - 0) & mask)];
        assert(x5491 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5492 = x5491 * x2349;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5493 = x5490 + x5492;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5494 = args[2][121 * steps + ((cycle - 0) & mask)];
        assert(x5494 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5495 = x5494 * x2345;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5496 = x5493 + x5495;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5497 = args[2][122 * steps + ((cycle - 0) & mask)];
        assert(x5497 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5498 = x5497 * x2336;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5499 = x5496 + x5498;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5500 = args[2][123 * steps + ((cycle - 0) & mask)];
        assert(x5500 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5501 = x5500 * x2334;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5502 = x5499 + x5501;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5503 = args[2][124 * steps + ((cycle - 0) & mask)];
        assert(x5503 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5504 = x5503 * x2332;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5505 = x5502 + x5504;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5506 = args[2][125 * steps + ((cycle - 0) & mask)];
        assert(x5506 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5507 = x5506 * x2330;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5508 = x5505 + x5507;
        // loc("zirgen/circuit/recursion/sha.cpp":106:16)
        auto x5509 = x5471 - x5508;
        // loc("zirgen/circuit/recursion/sha.cpp":106:15)
        auto x5510 = x5509 * x2327;
        {
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5511 = Fp(x5510.asUInt32() & x2352.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][110 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5511);
            reg = x5511;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5512 = Fp(x5510.asUInt32() & x2351.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5513 = x5512 * x2339;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][111 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5513);
            reg = x5513;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5514 = Fp(x5510.asUInt32() & x2349.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5515 = x5514 * x2338;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][112 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5515);
            reg = x5515;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5516 = Fp(x5510.asUInt32() & x2345.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5517 = x5516 * x2337;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][113 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5517);
            reg = x5517;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5518 = Fp(x5510.asUInt32() & x2336.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5519 = x5518 * x2335;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][114 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5519);
            reg = x5519;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5520 = Fp(x5510.asUInt32() & x2334.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5521 = x5520 * x2333;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][115 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5521);
            reg = x5521;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5522 = Fp(x5510.asUInt32() & x2332.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5523 = x5522 * x2331;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][116 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5523);
            reg = x5523;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5524 = Fp(x5510.asUInt32() & x2330.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5525 = x5524 * x2329;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][117 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5525);
            reg = x5525;
          }
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5526 = args[2][110 * steps + ((cycle - 0) & mask)];
        assert(x5526 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5527 = args[2][111 * steps + ((cycle - 0) & mask)];
        assert(x5527 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5528 = x5527 * x2351;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5529 = x5526 + x5528;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5530 = args[2][112 * steps + ((cycle - 0) & mask)];
        assert(x5530 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5531 = x5530 * x2349;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5532 = x5529 + x5531;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5533 = args[2][113 * steps + ((cycle - 0) & mask)];
        assert(x5533 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5534 = x5533 * x2345;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5535 = x5532 + x5534;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5536 = args[2][114 * steps + ((cycle - 0) & mask)];
        assert(x5536 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5537 = x5536 * x2336;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5538 = x5535 + x5537;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5539 = args[2][115 * steps + ((cycle - 0) & mask)];
        assert(x5539 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5540 = x5539 * x2334;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5541 = x5538 + x5540;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5542 = args[2][116 * steps + ((cycle - 0) & mask)];
        assert(x5542 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5543 = x5542 * x2332;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5544 = x5541 + x5543;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5545 = args[2][117 * steps + ((cycle - 0) & mask)];
        assert(x5545 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5546 = x5545 * x2330;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5547 = x5544 + x5546;
        // loc("zirgen/circuit/recursion/sha.cpp":106:16)
        auto x5548 = x5510 - x5547;
        // loc("zirgen/circuit/recursion/sha.cpp":106:15)
        auto x5549 = x5548 * x2327;
        {
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5550 = Fp(x5549.asUInt32() & x2352.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][102 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5550);
            reg = x5550;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5551 = Fp(x5549.asUInt32() & x2351.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5552 = x5551 * x2339;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][103 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5552);
            reg = x5552;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5553 = Fp(x5549.asUInt32() & x2349.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5554 = x5553 * x2338;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][104 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5554);
            reg = x5554;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5555 = Fp(x5549.asUInt32() & x2345.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5556 = x5555 * x2337;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][105 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5556);
            reg = x5556;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5557 = Fp(x5549.asUInt32() & x2336.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5558 = x5557 * x2335;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][106 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5558);
            reg = x5558;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5559 = Fp(x5549.asUInt32() & x2334.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5560 = x5559 * x2333;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][107 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5560);
            reg = x5560;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5561 = Fp(x5549.asUInt32() & x2332.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5562 = x5561 * x2331;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][108 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5562);
            reg = x5562;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5563 = Fp(x5549.asUInt32() & x2330.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5564 = x5563 * x2329;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][109 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5564);
            reg = x5564;
          }
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5565 = args[2][102 * steps + ((cycle - 0) & mask)];
        assert(x5565 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5566 = args[2][103 * steps + ((cycle - 0) & mask)];
        assert(x5566 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5567 = x5566 * x2351;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5568 = x5565 + x5567;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5569 = args[2][104 * steps + ((cycle - 0) & mask)];
        assert(x5569 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5570 = x5569 * x2349;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5571 = x5568 + x5570;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5572 = args[2][105 * steps + ((cycle - 0) & mask)];
        assert(x5572 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5573 = x5572 * x2345;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5574 = x5571 + x5573;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5575 = args[2][106 * steps + ((cycle - 0) & mask)];
        assert(x5575 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5576 = x5575 * x2336;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5577 = x5574 + x5576;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5578 = args[2][107 * steps + ((cycle - 0) & mask)];
        assert(x5578 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5579 = x5578 * x2334;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5580 = x5577 + x5579;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5581 = args[2][108 * steps + ((cycle - 0) & mask)];
        assert(x5581 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5582 = x5581 * x2332;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5583 = x5580 + x5582;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5584 = args[2][109 * steps + ((cycle - 0) & mask)];
        assert(x5584 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5585 = x5584 * x2330;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5586 = x5583 + x5585;
        // loc("zirgen/circuit/recursion/sha.cpp":106:16)
        auto x5587 = x5549 - x5586;
        // loc("zirgen/circuit/recursion/sha.cpp":106:15)
        auto x5588 = x5587 * x2327;
        {
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5589 = Fp(x5588.asUInt32() & x2352.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][94 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5589);
            reg = x5589;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5590 = Fp(x5588.asUInt32() & x2351.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5591 = x5590 * x2339;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][95 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5591);
            reg = x5591;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5592 = Fp(x5588.asUInt32() & x2349.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5593 = x5592 * x2338;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][96 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5593);
            reg = x5593;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5594 = Fp(x5588.asUInt32() & x2345.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5595 = x5594 * x2337;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][97 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5595);
            reg = x5595;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5596 = Fp(x5588.asUInt32() & x2336.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5597 = x5596 * x2335;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][98 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5597);
            reg = x5597;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5598 = Fp(x5588.asUInt32() & x2334.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5599 = x5598 * x2333;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][99 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5599);
            reg = x5599;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5600 = Fp(x5588.asUInt32() & x2332.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5601 = x5600 * x2331;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][100 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5601);
            reg = x5601;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5602 = Fp(x5588.asUInt32() & x2330.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5603 = x5602 * x2329;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][101 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5603);
            reg = x5603;
          }
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5604 = args[2][97 * steps + ((cycle - 0) & mask)];
        assert(x5604 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5605 = args[2][98 * steps + ((cycle - 0) & mask)];
        assert(x5605 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5606 = args[2][99 * steps + ((cycle - 0) & mask)];
        assert(x5606 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5607 = args[2][100 * steps + ((cycle - 0) & mask)];
        assert(x5607 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":193:14)
        auto x5608 = x5604 + x5605;
        // loc("zirgen/circuit/recursion/sha.cpp":193:14)
        auto x5609 = x5608 + x5606;
        // loc("zirgen/circuit/recursion/sha.cpp":193:14)
        auto x5610 = x5609 + x5607;
        {
          // loc("zirgen/circuit/recursion/sha.cpp":202:25)
          auto x5611 = x5610 - x2349;
          // loc("zirgen/circuit/recursion/sha.cpp":202:25)
          auto x5612 = (x5611 == 0) ? Fp(1) : Fp(0);
          if (x5612 != 0) {
            // loc("./zirgen/components/bits.h":68:23)
            {
              auto& reg = args[2][9 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x2353);
              reg = x2353;
            }
          }
          // loc("zirgen/circuit/recursion/sha.cpp":204:21)
          auto x5613 = x2352 - x5612;
          if (x5613 != 0) {
            // loc("./zirgen/components/bits.h":68:23)
            {
              auto& reg = args[2][9 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x5610);
              reg = x5610;
            }
          }
        }
      }
      if (x5468 != 0) {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x5614 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x5614 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x5615 = args[2][13 * steps + ((cycle - 0) & mask)];
        assert(x5615 != Fp::invalid());
        {
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5616 = Fp(x5614.asUInt32() & x2352.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][118 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5616);
            reg = x5616;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5617 = Fp(x5614.asUInt32() & x2351.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5618 = x5617 * x2339;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5618);
            reg = x5618;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5619 = Fp(x5614.asUInt32() & x2349.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5620 = x5619 * x2338;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5620);
            reg = x5620;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5621 = Fp(x5614.asUInt32() & x2345.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5622 = x5621 * x2337;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5622);
            reg = x5622;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5623 = Fp(x5614.asUInt32() & x2336.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5624 = x5623 * x2335;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5624);
            reg = x5624;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5625 = Fp(x5614.asUInt32() & x2334.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5626 = x5625 * x2333;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5626);
            reg = x5626;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5627 = Fp(x5614.asUInt32() & x2332.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5628 = x5627 * x2331;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5628);
            reg = x5628;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5629 = Fp(x5614.asUInt32() & x2330.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5630 = x5629 * x2329;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][125 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5630);
            reg = x5630;
          }
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5631 = args[2][118 * steps + ((cycle - 0) & mask)];
        assert(x5631 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5632 = args[2][119 * steps + ((cycle - 0) & mask)];
        assert(x5632 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5633 = x5632 * x2351;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5634 = x5631 + x5633;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5635 = args[2][120 * steps + ((cycle - 0) & mask)];
        assert(x5635 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5636 = x5635 * x2349;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5637 = x5634 + x5636;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5638 = args[2][121 * steps + ((cycle - 0) & mask)];
        assert(x5638 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5639 = x5638 * x2345;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5640 = x5637 + x5639;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5641 = args[2][122 * steps + ((cycle - 0) & mask)];
        assert(x5641 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5642 = x5641 * x2336;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5643 = x5640 + x5642;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5644 = args[2][123 * steps + ((cycle - 0) & mask)];
        assert(x5644 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5645 = x5644 * x2334;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5646 = x5643 + x5645;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5647 = args[2][124 * steps + ((cycle - 0) & mask)];
        assert(x5647 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5648 = x5647 * x2332;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5649 = x5646 + x5648;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5650 = args[2][125 * steps + ((cycle - 0) & mask)];
        assert(x5650 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5651 = x5650 * x2330;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5652 = x5649 + x5651;
        // loc("zirgen/circuit/recursion/sha.cpp":106:16)
        auto x5653 = x5614 - x5652;
        // loc("zirgen/circuit/recursion/sha.cpp":106:15)
        auto x5654 = x5653 * x2327;
        {
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5655 = Fp(x5654.asUInt32() & x2352.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][110 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5655);
            reg = x5655;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5656 = Fp(x5654.asUInt32() & x2351.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5657 = x5656 * x2339;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][111 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5657);
            reg = x5657;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5658 = Fp(x5654.asUInt32() & x2349.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5659 = x5658 * x2338;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][112 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5659);
            reg = x5659;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5660 = Fp(x5654.asUInt32() & x2345.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5661 = x5660 * x2337;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][113 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5661);
            reg = x5661;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5662 = Fp(x5654.asUInt32() & x2336.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5663 = x5662 * x2335;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][114 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5663);
            reg = x5663;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5664 = Fp(x5654.asUInt32() & x2334.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5665 = x5664 * x2333;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][115 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5665);
            reg = x5665;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5666 = Fp(x5654.asUInt32() & x2332.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5667 = x5666 * x2331;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][116 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5667);
            reg = x5667;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5668 = Fp(x5654.asUInt32() & x2330.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5669 = x5668 * x2329;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][117 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5669);
            reg = x5669;
          }
        }
        {
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5670 = Fp(x5615.asUInt32() & x2352.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][102 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5670);
            reg = x5670;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5671 = Fp(x5615.asUInt32() & x2351.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5672 = x5671 * x2339;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][103 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5672);
            reg = x5672;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5673 = Fp(x5615.asUInt32() & x2349.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5674 = x5673 * x2338;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][104 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5674);
            reg = x5674;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5675 = Fp(x5615.asUInt32() & x2345.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5676 = x5675 * x2337;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][105 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5676);
            reg = x5676;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5677 = Fp(x5615.asUInt32() & x2336.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5678 = x5677 * x2335;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][106 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5678);
            reg = x5678;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5679 = Fp(x5615.asUInt32() & x2334.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5680 = x5679 * x2333;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][107 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5680);
            reg = x5680;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5681 = Fp(x5615.asUInt32() & x2332.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5682 = x5681 * x2331;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][108 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5682);
            reg = x5682;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5683 = Fp(x5615.asUInt32() & x2330.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5684 = x5683 * x2329;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][109 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5684);
            reg = x5684;
          }
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5685 = args[2][102 * steps + ((cycle - 0) & mask)];
        assert(x5685 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5686 = args[2][103 * steps + ((cycle - 0) & mask)];
        assert(x5686 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5687 = x5686 * x2351;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5688 = x5685 + x5687;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5689 = args[2][104 * steps + ((cycle - 0) & mask)];
        assert(x5689 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5690 = x5689 * x2349;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5691 = x5688 + x5690;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5692 = args[2][105 * steps + ((cycle - 0) & mask)];
        assert(x5692 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5693 = x5692 * x2345;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5694 = x5691 + x5693;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5695 = args[2][106 * steps + ((cycle - 0) & mask)];
        assert(x5695 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5696 = x5695 * x2336;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5697 = x5694 + x5696;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5698 = args[2][107 * steps + ((cycle - 0) & mask)];
        assert(x5698 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5699 = x5698 * x2334;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5700 = x5697 + x5699;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5701 = args[2][108 * steps + ((cycle - 0) & mask)];
        assert(x5701 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5702 = x5701 * x2332;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5703 = x5700 + x5702;
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5704 = args[2][109 * steps + ((cycle - 0) & mask)];
        assert(x5704 != Fp::invalid());
        // loc("zirgen/circuit/recursion/sha.cpp":104:17)
        auto x5705 = x5704 * x2330;
        // loc("zirgen/circuit/recursion/sha.cpp":104:11)
        auto x5706 = x5703 + x5705;
        // loc("zirgen/circuit/recursion/sha.cpp":106:16)
        auto x5707 = x5615 - x5706;
        // loc("zirgen/circuit/recursion/sha.cpp":106:15)
        auto x5708 = x5707 * x2327;
        {
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5709 = Fp(x5708.asUInt32() & x2352.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][94 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5709);
            reg = x5709;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5710 = Fp(x5708.asUInt32() & x2351.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5711 = x5710 * x2339;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][95 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5711);
            reg = x5711;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5712 = Fp(x5708.asUInt32() & x2349.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5713 = x5712 * x2338;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][96 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5713);
            reg = x5713;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5714 = Fp(x5708.asUInt32() & x2345.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5715 = x5714 * x2337;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][97 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5715);
            reg = x5715;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5716 = Fp(x5708.asUInt32() & x2336.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5717 = x5716 * x2335;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][98 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5717);
            reg = x5717;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5718 = Fp(x5708.asUInt32() & x2334.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5719 = x5718 * x2333;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][99 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5719);
            reg = x5719;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5720 = Fp(x5708.asUInt32() & x2332.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5721 = x5720 * x2331;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][100 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5721);
            reg = x5721;
          }
          // loc("zirgen/circuit/recursion/sha.cpp":99:29)
          auto x5722 = Fp(x5708.asUInt32() & x2330.asUInt32());
          // loc("zirgen/circuit/recursion/sha.cpp":99:28)
          auto x5723 = x5722 * x2329;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = args[2][101 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5723);
            reg = x5723;
          }
        }
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5724 = args[2][94 * steps + ((cycle - 0) & mask)];
      assert(x5724 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5725 = args[2][95 * steps + ((cycle - 0) & mask)];
      assert(x5725 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5726 = args[2][96 * steps + ((cycle - 0) & mask)];
      assert(x5726 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5727 = args[2][97 * steps + ((cycle - 0) & mask)];
      assert(x5727 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5728 = args[2][98 * steps + ((cycle - 0) & mask)];
      assert(x5728 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5729 = args[2][99 * steps + ((cycle - 0) & mask)];
      assert(x5729 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5730 = args[2][100 * steps + ((cycle - 0) & mask)];
      assert(x5730 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5731 = args[2][101 * steps + ((cycle - 0) & mask)];
      assert(x5731 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5732 = args[2][102 * steps + ((cycle - 0) & mask)];
      assert(x5732 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5733 = args[2][103 * steps + ((cycle - 0) & mask)];
      assert(x5733 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5734 = args[2][104 * steps + ((cycle - 0) & mask)];
      assert(x5734 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5735 = args[2][105 * steps + ((cycle - 0) & mask)];
      assert(x5735 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5736 = args[2][106 * steps + ((cycle - 0) & mask)];
      assert(x5736 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5737 = args[2][107 * steps + ((cycle - 0) & mask)];
      assert(x5737 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5738 = args[2][108 * steps + ((cycle - 0) & mask)];
      assert(x5738 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5739 = args[2][109 * steps + ((cycle - 0) & mask)];
      assert(x5739 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5740 = args[2][110 * steps + ((cycle - 0) & mask)];
      assert(x5740 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5741 = args[2][111 * steps + ((cycle - 0) & mask)];
      assert(x5741 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5742 = args[2][112 * steps + ((cycle - 0) & mask)];
      assert(x5742 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5743 = args[2][113 * steps + ((cycle - 0) & mask)];
      assert(x5743 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5744 = args[2][114 * steps + ((cycle - 0) & mask)];
      assert(x5744 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5745 = args[2][115 * steps + ((cycle - 0) & mask)];
      assert(x5745 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5746 = args[2][116 * steps + ((cycle - 0) & mask)];
      assert(x5746 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5747 = args[2][117 * steps + ((cycle - 0) & mask)];
      assert(x5747 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5748 = args[2][118 * steps + ((cycle - 0) & mask)];
      assert(x5748 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5749 = args[2][119 * steps + ((cycle - 0) & mask)];
      assert(x5749 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5750 = args[2][120 * steps + ((cycle - 0) & mask)];
      assert(x5750 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5751 = args[2][121 * steps + ((cycle - 0) & mask)];
      assert(x5751 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5752 = args[2][122 * steps + ((cycle - 0) & mask)];
      assert(x5752 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5753 = args[2][123 * steps + ((cycle - 0) & mask)];
      assert(x5753 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5754 = args[2][124 * steps + ((cycle - 0) & mask)];
      assert(x5754 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5755 = args[2][125 * steps + ((cycle - 0) & mask)];
      assert(x5755 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5756 = x5725 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5757 = x5724 + x5756;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5758 = x5726 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5759 = x5757 + x5758;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5760 = x5727 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5761 = x5759 + x5760;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5762 = x5728 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5763 = x5761 + x5762;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5764 = x5729 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5765 = x5763 + x5764;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5766 = x5730 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5767 = x5765 + x5766;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5768 = x5731 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5769 = x5767 + x5768;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5770 = x5733 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5771 = x5732 + x5770;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5772 = x5734 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5773 = x5771 + x5772;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5774 = x5735 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5775 = x5773 + x5774;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5776 = x5736 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5777 = x5775 + x5776;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5778 = x5737 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5779 = x5777 + x5778;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5780 = x5738 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5781 = x5779 + x5780;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5782 = x5739 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5783 = x5781 + x5782;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5784 = x5741 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5785 = x5740 + x5784;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5786 = x5742 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5787 = x5785 + x5786;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5788 = x5743 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5789 = x5787 + x5788;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5790 = x5744 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5791 = x5789 + x5790;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5792 = x5745 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5793 = x5791 + x5792;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5794 = x5746 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5795 = x5793 + x5794;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5796 = x5747 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5797 = x5795 + x5796;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5798 = x5749 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5799 = x5748 + x5798;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5800 = x5750 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5801 = x5799 + x5800;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5802 = x5751 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5803 = x5801 + x5802;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5804 = x5752 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5805 = x5803 + x5804;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5806 = x5753 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5807 = x5805 + x5806;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5808 = x5754 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5809 = x5807 + x5808;
      // loc("zirgen/circuit/recursion/sha.cpp":115:21)
      auto x5810 = x5755 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":115:14)
      auto x5811 = x5809 + x5810;
      host_args.at(0) = x5769;
      host_args.at(1) = x5783;
      host_args.at(2) = x5797;
      host_args.at(3) = x5811;
      host(ctx, "log", "SHA_LOAD: w = %w", host_args.data(), 4, host_outs.data(), 0);
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = args[2][10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5812 = args[2][26 * steps + ((cycle - 1) & mask)];
      assert(x5812 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5813 = args[2][27 * steps + ((cycle - 1) & mask)];
      assert(x5813 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5814 = args[2][28 * steps + ((cycle - 1) & mask)];
      assert(x5814 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5815 = args[2][29 * steps + ((cycle - 1) & mask)];
      assert(x5815 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5816 = args[2][30 * steps + ((cycle - 1) & mask)];
      assert(x5816 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5817 = args[2][31 * steps + ((cycle - 1) & mask)];
      assert(x5817 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5818 = args[2][32 * steps + ((cycle - 1) & mask)];
      assert(x5818 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5819 = args[2][33 * steps + ((cycle - 1) & mask)];
      assert(x5819 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5820 = args[2][34 * steps + ((cycle - 1) & mask)];
      assert(x5820 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5821 = args[2][35 * steps + ((cycle - 1) & mask)];
      assert(x5821 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5822 = args[2][36 * steps + ((cycle - 1) & mask)];
      assert(x5822 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5823 = args[2][37 * steps + ((cycle - 1) & mask)];
      assert(x5823 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5824 = args[2][38 * steps + ((cycle - 1) & mask)];
      assert(x5824 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5825 = args[2][39 * steps + ((cycle - 1) & mask)];
      assert(x5825 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5826 = args[2][40 * steps + ((cycle - 1) & mask)];
      assert(x5826 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5827 = args[2][41 * steps + ((cycle - 1) & mask)];
      assert(x5827 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5828 = args[2][42 * steps + ((cycle - 1) & mask)];
      assert(x5828 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5829 = args[2][43 * steps + ((cycle - 1) & mask)];
      assert(x5829 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5830 = args[2][44 * steps + ((cycle - 1) & mask)];
      assert(x5830 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5831 = args[2][45 * steps + ((cycle - 1) & mask)];
      assert(x5831 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5832 = args[2][46 * steps + ((cycle - 1) & mask)];
      assert(x5832 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5833 = args[2][47 * steps + ((cycle - 1) & mask)];
      assert(x5833 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5834 = args[2][48 * steps + ((cycle - 1) & mask)];
      assert(x5834 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5835 = args[2][49 * steps + ((cycle - 1) & mask)];
      assert(x5835 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5836 = args[2][50 * steps + ((cycle - 1) & mask)];
      assert(x5836 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5837 = args[2][51 * steps + ((cycle - 1) & mask)];
      assert(x5837 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5838 = args[2][52 * steps + ((cycle - 1) & mask)];
      assert(x5838 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5839 = args[2][53 * steps + ((cycle - 1) & mask)];
      assert(x5839 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5840 = args[2][54 * steps + ((cycle - 1) & mask)];
      assert(x5840 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5841 = args[2][55 * steps + ((cycle - 1) & mask)];
      assert(x5841 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5842 = args[2][56 * steps + ((cycle - 1) & mask)];
      assert(x5842 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5843 = args[2][57 * steps + ((cycle - 1) & mask)];
      assert(x5843 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5844 = args[2][26 * steps + ((cycle - 2) & mask)];
      assert(x5844 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5845 = args[2][27 * steps + ((cycle - 2) & mask)];
      assert(x5845 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5846 = args[2][28 * steps + ((cycle - 2) & mask)];
      assert(x5846 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5847 = args[2][29 * steps + ((cycle - 2) & mask)];
      assert(x5847 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5848 = args[2][30 * steps + ((cycle - 2) & mask)];
      assert(x5848 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5849 = args[2][31 * steps + ((cycle - 2) & mask)];
      assert(x5849 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5850 = args[2][32 * steps + ((cycle - 2) & mask)];
      assert(x5850 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5851 = args[2][33 * steps + ((cycle - 2) & mask)];
      assert(x5851 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5852 = args[2][34 * steps + ((cycle - 2) & mask)];
      assert(x5852 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5853 = args[2][35 * steps + ((cycle - 2) & mask)];
      assert(x5853 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5854 = args[2][36 * steps + ((cycle - 2) & mask)];
      assert(x5854 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5855 = args[2][37 * steps + ((cycle - 2) & mask)];
      assert(x5855 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5856 = args[2][38 * steps + ((cycle - 2) & mask)];
      assert(x5856 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5857 = args[2][39 * steps + ((cycle - 2) & mask)];
      assert(x5857 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5858 = args[2][40 * steps + ((cycle - 2) & mask)];
      assert(x5858 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5859 = args[2][41 * steps + ((cycle - 2) & mask)];
      assert(x5859 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5860 = args[2][42 * steps + ((cycle - 2) & mask)];
      assert(x5860 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5861 = args[2][43 * steps + ((cycle - 2) & mask)];
      assert(x5861 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5862 = args[2][44 * steps + ((cycle - 2) & mask)];
      assert(x5862 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5863 = args[2][45 * steps + ((cycle - 2) & mask)];
      assert(x5863 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5864 = args[2][46 * steps + ((cycle - 2) & mask)];
      assert(x5864 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5865 = args[2][47 * steps + ((cycle - 2) & mask)];
      assert(x5865 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5866 = args[2][48 * steps + ((cycle - 2) & mask)];
      assert(x5866 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5867 = args[2][49 * steps + ((cycle - 2) & mask)];
      assert(x5867 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5868 = args[2][50 * steps + ((cycle - 2) & mask)];
      assert(x5868 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5869 = args[2][51 * steps + ((cycle - 2) & mask)];
      assert(x5869 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5870 = args[2][52 * steps + ((cycle - 2) & mask)];
      assert(x5870 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5871 = args[2][53 * steps + ((cycle - 2) & mask)];
      assert(x5871 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5872 = args[2][54 * steps + ((cycle - 2) & mask)];
      assert(x5872 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5873 = args[2][55 * steps + ((cycle - 2) & mask)];
      assert(x5873 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5874 = args[2][56 * steps + ((cycle - 2) & mask)];
      assert(x5874 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5875 = args[2][57 * steps + ((cycle - 2) & mask)];
      assert(x5875 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5876 = args[2][26 * steps + ((cycle - 3) & mask)];
      assert(x5876 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5877 = args[2][27 * steps + ((cycle - 3) & mask)];
      assert(x5877 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5878 = args[2][28 * steps + ((cycle - 3) & mask)];
      assert(x5878 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5879 = args[2][29 * steps + ((cycle - 3) & mask)];
      assert(x5879 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5880 = args[2][30 * steps + ((cycle - 3) & mask)];
      assert(x5880 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5881 = args[2][31 * steps + ((cycle - 3) & mask)];
      assert(x5881 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5882 = args[2][32 * steps + ((cycle - 3) & mask)];
      assert(x5882 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5883 = args[2][33 * steps + ((cycle - 3) & mask)];
      assert(x5883 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5884 = args[2][34 * steps + ((cycle - 3) & mask)];
      assert(x5884 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5885 = args[2][35 * steps + ((cycle - 3) & mask)];
      assert(x5885 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5886 = args[2][36 * steps + ((cycle - 3) & mask)];
      assert(x5886 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5887 = args[2][37 * steps + ((cycle - 3) & mask)];
      assert(x5887 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5888 = args[2][38 * steps + ((cycle - 3) & mask)];
      assert(x5888 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5889 = args[2][39 * steps + ((cycle - 3) & mask)];
      assert(x5889 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5890 = args[2][40 * steps + ((cycle - 3) & mask)];
      assert(x5890 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5891 = args[2][41 * steps + ((cycle - 3) & mask)];
      assert(x5891 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5892 = args[2][42 * steps + ((cycle - 3) & mask)];
      assert(x5892 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5893 = args[2][43 * steps + ((cycle - 3) & mask)];
      assert(x5893 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5894 = args[2][44 * steps + ((cycle - 3) & mask)];
      assert(x5894 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5895 = args[2][45 * steps + ((cycle - 3) & mask)];
      assert(x5895 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5896 = args[2][46 * steps + ((cycle - 3) & mask)];
      assert(x5896 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5897 = args[2][47 * steps + ((cycle - 3) & mask)];
      assert(x5897 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5898 = args[2][48 * steps + ((cycle - 3) & mask)];
      assert(x5898 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5899 = args[2][49 * steps + ((cycle - 3) & mask)];
      assert(x5899 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5900 = args[2][50 * steps + ((cycle - 3) & mask)];
      assert(x5900 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5901 = args[2][51 * steps + ((cycle - 3) & mask)];
      assert(x5901 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5902 = args[2][52 * steps + ((cycle - 3) & mask)];
      assert(x5902 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5903 = args[2][53 * steps + ((cycle - 3) & mask)];
      assert(x5903 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5904 = args[2][54 * steps + ((cycle - 3) & mask)];
      assert(x5904 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5905 = args[2][55 * steps + ((cycle - 3) & mask)];
      assert(x5905 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5906 = args[2][56 * steps + ((cycle - 3) & mask)];
      assert(x5906 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5907 = args[2][57 * steps + ((cycle - 3) & mask)];
      assert(x5907 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5908 = args[2][26 * steps + ((cycle - 4) & mask)];
      assert(x5908 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5909 = args[2][27 * steps + ((cycle - 4) & mask)];
      assert(x5909 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5910 = args[2][28 * steps + ((cycle - 4) & mask)];
      assert(x5910 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5911 = args[2][29 * steps + ((cycle - 4) & mask)];
      assert(x5911 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5912 = args[2][30 * steps + ((cycle - 4) & mask)];
      assert(x5912 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5913 = args[2][31 * steps + ((cycle - 4) & mask)];
      assert(x5913 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5914 = args[2][32 * steps + ((cycle - 4) & mask)];
      assert(x5914 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5915 = args[2][33 * steps + ((cycle - 4) & mask)];
      assert(x5915 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5916 = args[2][34 * steps + ((cycle - 4) & mask)];
      assert(x5916 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5917 = args[2][35 * steps + ((cycle - 4) & mask)];
      assert(x5917 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5918 = args[2][36 * steps + ((cycle - 4) & mask)];
      assert(x5918 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5919 = args[2][37 * steps + ((cycle - 4) & mask)];
      assert(x5919 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5920 = args[2][38 * steps + ((cycle - 4) & mask)];
      assert(x5920 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5921 = args[2][39 * steps + ((cycle - 4) & mask)];
      assert(x5921 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5922 = args[2][40 * steps + ((cycle - 4) & mask)];
      assert(x5922 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5923 = args[2][41 * steps + ((cycle - 4) & mask)];
      assert(x5923 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5924 = args[2][42 * steps + ((cycle - 4) & mask)];
      assert(x5924 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5925 = args[2][43 * steps + ((cycle - 4) & mask)];
      assert(x5925 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5926 = args[2][44 * steps + ((cycle - 4) & mask)];
      assert(x5926 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5927 = args[2][45 * steps + ((cycle - 4) & mask)];
      assert(x5927 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5928 = args[2][46 * steps + ((cycle - 4) & mask)];
      assert(x5928 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5929 = args[2][47 * steps + ((cycle - 4) & mask)];
      assert(x5929 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5930 = args[2][48 * steps + ((cycle - 4) & mask)];
      assert(x5930 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5931 = args[2][49 * steps + ((cycle - 4) & mask)];
      assert(x5931 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5932 = args[2][50 * steps + ((cycle - 4) & mask)];
      assert(x5932 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5933 = args[2][51 * steps + ((cycle - 4) & mask)];
      assert(x5933 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5934 = args[2][52 * steps + ((cycle - 4) & mask)];
      assert(x5934 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5935 = args[2][53 * steps + ((cycle - 4) & mask)];
      assert(x5935 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5936 = args[2][54 * steps + ((cycle - 4) & mask)];
      assert(x5936 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5937 = args[2][55 * steps + ((cycle - 4) & mask)];
      assert(x5937 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5938 = args[2][56 * steps + ((cycle - 4) & mask)];
      assert(x5938 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5939 = args[2][57 * steps + ((cycle - 4) & mask)];
      assert(x5939 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5940 = args[2][60 * steps + ((cycle - 1) & mask)];
      assert(x5940 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5941 = args[2][61 * steps + ((cycle - 1) & mask)];
      assert(x5941 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5942 = args[2][62 * steps + ((cycle - 1) & mask)];
      assert(x5942 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5943 = args[2][63 * steps + ((cycle - 1) & mask)];
      assert(x5943 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5944 = args[2][64 * steps + ((cycle - 1) & mask)];
      assert(x5944 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5945 = args[2][65 * steps + ((cycle - 1) & mask)];
      assert(x5945 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5946 = args[2][66 * steps + ((cycle - 1) & mask)];
      assert(x5946 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5947 = args[2][67 * steps + ((cycle - 1) & mask)];
      assert(x5947 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5948 = args[2][68 * steps + ((cycle - 1) & mask)];
      assert(x5948 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5949 = args[2][69 * steps + ((cycle - 1) & mask)];
      assert(x5949 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5950 = args[2][70 * steps + ((cycle - 1) & mask)];
      assert(x5950 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5951 = args[2][71 * steps + ((cycle - 1) & mask)];
      assert(x5951 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5952 = args[2][72 * steps + ((cycle - 1) & mask)];
      assert(x5952 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5953 = args[2][73 * steps + ((cycle - 1) & mask)];
      assert(x5953 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5954 = args[2][74 * steps + ((cycle - 1) & mask)];
      assert(x5954 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5955 = args[2][75 * steps + ((cycle - 1) & mask)];
      assert(x5955 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5956 = args[2][76 * steps + ((cycle - 1) & mask)];
      assert(x5956 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5957 = args[2][77 * steps + ((cycle - 1) & mask)];
      assert(x5957 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5958 = args[2][78 * steps + ((cycle - 1) & mask)];
      assert(x5958 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5959 = args[2][79 * steps + ((cycle - 1) & mask)];
      assert(x5959 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5960 = args[2][80 * steps + ((cycle - 1) & mask)];
      assert(x5960 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5961 = args[2][81 * steps + ((cycle - 1) & mask)];
      assert(x5961 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5962 = args[2][82 * steps + ((cycle - 1) & mask)];
      assert(x5962 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5963 = args[2][83 * steps + ((cycle - 1) & mask)];
      assert(x5963 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5964 = args[2][84 * steps + ((cycle - 1) & mask)];
      assert(x5964 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5965 = args[2][85 * steps + ((cycle - 1) & mask)];
      assert(x5965 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5966 = args[2][86 * steps + ((cycle - 1) & mask)];
      assert(x5966 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5967 = args[2][87 * steps + ((cycle - 1) & mask)];
      assert(x5967 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5968 = args[2][88 * steps + ((cycle - 1) & mask)];
      assert(x5968 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5969 = args[2][89 * steps + ((cycle - 1) & mask)];
      assert(x5969 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5970 = args[2][90 * steps + ((cycle - 1) & mask)];
      assert(x5970 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5971 = args[2][91 * steps + ((cycle - 1) & mask)];
      assert(x5971 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5972 = args[2][60 * steps + ((cycle - 2) & mask)];
      assert(x5972 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5973 = args[2][61 * steps + ((cycle - 2) & mask)];
      assert(x5973 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5974 = args[2][62 * steps + ((cycle - 2) & mask)];
      assert(x5974 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5975 = args[2][63 * steps + ((cycle - 2) & mask)];
      assert(x5975 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5976 = args[2][64 * steps + ((cycle - 2) & mask)];
      assert(x5976 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5977 = args[2][65 * steps + ((cycle - 2) & mask)];
      assert(x5977 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5978 = args[2][66 * steps + ((cycle - 2) & mask)];
      assert(x5978 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5979 = args[2][67 * steps + ((cycle - 2) & mask)];
      assert(x5979 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5980 = args[2][68 * steps + ((cycle - 2) & mask)];
      assert(x5980 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5981 = args[2][69 * steps + ((cycle - 2) & mask)];
      assert(x5981 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5982 = args[2][70 * steps + ((cycle - 2) & mask)];
      assert(x5982 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5983 = args[2][71 * steps + ((cycle - 2) & mask)];
      assert(x5983 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5984 = args[2][72 * steps + ((cycle - 2) & mask)];
      assert(x5984 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5985 = args[2][73 * steps + ((cycle - 2) & mask)];
      assert(x5985 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5986 = args[2][74 * steps + ((cycle - 2) & mask)];
      assert(x5986 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5987 = args[2][75 * steps + ((cycle - 2) & mask)];
      assert(x5987 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5988 = args[2][76 * steps + ((cycle - 2) & mask)];
      assert(x5988 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5989 = args[2][77 * steps + ((cycle - 2) & mask)];
      assert(x5989 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5990 = args[2][78 * steps + ((cycle - 2) & mask)];
      assert(x5990 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5991 = args[2][79 * steps + ((cycle - 2) & mask)];
      assert(x5991 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5992 = args[2][80 * steps + ((cycle - 2) & mask)];
      assert(x5992 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5993 = args[2][81 * steps + ((cycle - 2) & mask)];
      assert(x5993 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5994 = args[2][82 * steps + ((cycle - 2) & mask)];
      assert(x5994 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5995 = args[2][83 * steps + ((cycle - 2) & mask)];
      assert(x5995 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5996 = args[2][84 * steps + ((cycle - 2) & mask)];
      assert(x5996 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5997 = args[2][85 * steps + ((cycle - 2) & mask)];
      assert(x5997 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5998 = args[2][86 * steps + ((cycle - 2) & mask)];
      assert(x5998 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5999 = args[2][87 * steps + ((cycle - 2) & mask)];
      assert(x5999 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6000 = args[2][88 * steps + ((cycle - 2) & mask)];
      assert(x6000 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6001 = args[2][89 * steps + ((cycle - 2) & mask)];
      assert(x6001 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6002 = args[2][90 * steps + ((cycle - 2) & mask)];
      assert(x6002 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6003 = args[2][91 * steps + ((cycle - 2) & mask)];
      assert(x6003 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6004 = args[2][60 * steps + ((cycle - 3) & mask)];
      assert(x6004 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6005 = args[2][61 * steps + ((cycle - 3) & mask)];
      assert(x6005 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6006 = args[2][62 * steps + ((cycle - 3) & mask)];
      assert(x6006 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6007 = args[2][63 * steps + ((cycle - 3) & mask)];
      assert(x6007 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6008 = args[2][64 * steps + ((cycle - 3) & mask)];
      assert(x6008 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6009 = args[2][65 * steps + ((cycle - 3) & mask)];
      assert(x6009 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6010 = args[2][66 * steps + ((cycle - 3) & mask)];
      assert(x6010 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6011 = args[2][67 * steps + ((cycle - 3) & mask)];
      assert(x6011 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6012 = args[2][68 * steps + ((cycle - 3) & mask)];
      assert(x6012 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6013 = args[2][69 * steps + ((cycle - 3) & mask)];
      assert(x6013 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6014 = args[2][70 * steps + ((cycle - 3) & mask)];
      assert(x6014 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6015 = args[2][71 * steps + ((cycle - 3) & mask)];
      assert(x6015 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6016 = args[2][72 * steps + ((cycle - 3) & mask)];
      assert(x6016 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6017 = args[2][73 * steps + ((cycle - 3) & mask)];
      assert(x6017 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6018 = args[2][74 * steps + ((cycle - 3) & mask)];
      assert(x6018 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6019 = args[2][75 * steps + ((cycle - 3) & mask)];
      assert(x6019 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6020 = args[2][76 * steps + ((cycle - 3) & mask)];
      assert(x6020 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6021 = args[2][77 * steps + ((cycle - 3) & mask)];
      assert(x6021 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6022 = args[2][78 * steps + ((cycle - 3) & mask)];
      assert(x6022 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6023 = args[2][79 * steps + ((cycle - 3) & mask)];
      assert(x6023 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6024 = args[2][80 * steps + ((cycle - 3) & mask)];
      assert(x6024 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6025 = args[2][81 * steps + ((cycle - 3) & mask)];
      assert(x6025 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6026 = args[2][82 * steps + ((cycle - 3) & mask)];
      assert(x6026 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6027 = args[2][83 * steps + ((cycle - 3) & mask)];
      assert(x6027 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6028 = args[2][84 * steps + ((cycle - 3) & mask)];
      assert(x6028 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6029 = args[2][85 * steps + ((cycle - 3) & mask)];
      assert(x6029 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6030 = args[2][86 * steps + ((cycle - 3) & mask)];
      assert(x6030 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6031 = args[2][87 * steps + ((cycle - 3) & mask)];
      assert(x6031 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6032 = args[2][88 * steps + ((cycle - 3) & mask)];
      assert(x6032 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6033 = args[2][89 * steps + ((cycle - 3) & mask)];
      assert(x6033 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6034 = args[2][90 * steps + ((cycle - 3) & mask)];
      assert(x6034 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6035 = args[2][91 * steps + ((cycle - 3) & mask)];
      assert(x6035 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6036 = args[2][60 * steps + ((cycle - 4) & mask)];
      assert(x6036 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6037 = args[2][61 * steps + ((cycle - 4) & mask)];
      assert(x6037 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6038 = args[2][62 * steps + ((cycle - 4) & mask)];
      assert(x6038 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6039 = args[2][63 * steps + ((cycle - 4) & mask)];
      assert(x6039 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6040 = args[2][64 * steps + ((cycle - 4) & mask)];
      assert(x6040 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6041 = args[2][65 * steps + ((cycle - 4) & mask)];
      assert(x6041 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6042 = args[2][66 * steps + ((cycle - 4) & mask)];
      assert(x6042 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6043 = args[2][67 * steps + ((cycle - 4) & mask)];
      assert(x6043 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6044 = args[2][68 * steps + ((cycle - 4) & mask)];
      assert(x6044 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6045 = args[2][69 * steps + ((cycle - 4) & mask)];
      assert(x6045 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6046 = args[2][70 * steps + ((cycle - 4) & mask)];
      assert(x6046 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6047 = args[2][71 * steps + ((cycle - 4) & mask)];
      assert(x6047 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6048 = args[2][72 * steps + ((cycle - 4) & mask)];
      assert(x6048 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6049 = args[2][73 * steps + ((cycle - 4) & mask)];
      assert(x6049 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6050 = args[2][74 * steps + ((cycle - 4) & mask)];
      assert(x6050 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6051 = args[2][75 * steps + ((cycle - 4) & mask)];
      assert(x6051 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6052 = args[2][76 * steps + ((cycle - 4) & mask)];
      assert(x6052 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6053 = args[2][77 * steps + ((cycle - 4) & mask)];
      assert(x6053 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6054 = args[2][78 * steps + ((cycle - 4) & mask)];
      assert(x6054 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6055 = args[2][79 * steps + ((cycle - 4) & mask)];
      assert(x6055 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6056 = args[2][80 * steps + ((cycle - 4) & mask)];
      assert(x6056 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6057 = args[2][81 * steps + ((cycle - 4) & mask)];
      assert(x6057 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6058 = args[2][82 * steps + ((cycle - 4) & mask)];
      assert(x6058 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6059 = args[2][83 * steps + ((cycle - 4) & mask)];
      assert(x6059 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6060 = args[2][84 * steps + ((cycle - 4) & mask)];
      assert(x6060 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6061 = args[2][85 * steps + ((cycle - 4) & mask)];
      assert(x6061 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6062 = args[2][86 * steps + ((cycle - 4) & mask)];
      assert(x6062 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6063 = args[2][87 * steps + ((cycle - 4) & mask)];
      assert(x6063 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6064 = args[2][88 * steps + ((cycle - 4) & mask)];
      assert(x6064 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6065 = args[2][89 * steps + ((cycle - 4) & mask)];
      assert(x6065 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6066 = args[2][90 * steps + ((cycle - 4) & mask)];
      assert(x6066 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6067 = args[2][91 * steps + ((cycle - 4) & mask)];
      assert(x6067 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x6068 = args[2][17 * steps + ((cycle - 0) & mask)];
      assert(x6068 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x6069 = args[2][18 * steps + ((cycle - 0) & mask)];
      assert(x6069 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6070 = x5825 + x5834;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6071 = x5825 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6072 = x6071 * x5834;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6073 = x6070 - x6072;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6074 = x5826 + x5835;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6075 = x5826 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6076 = x6075 * x5835;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6077 = x6074 - x6076;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6078 = x5827 + x5836;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6079 = x5827 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6080 = x6079 * x5836;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6081 = x6078 - x6080;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6082 = x5828 + x5837;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6083 = x5828 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6084 = x6083 * x5837;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6085 = x6082 - x6084;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6086 = x5829 + x5838;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6087 = x5829 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6088 = x6087 * x5838;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6089 = x6086 - x6088;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6090 = x5830 + x5839;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6091 = x5830 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6092 = x6091 * x5839;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6093 = x6090 - x6092;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6094 = x5831 + x5840;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6095 = x5831 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6096 = x6095 * x5840;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6097 = x6094 - x6096;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6098 = x5832 + x5841;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6099 = x5832 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6100 = x6099 * x5841;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6101 = x6098 - x6100;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6102 = x5833 + x5842;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6103 = x5833 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6104 = x6103 * x5842;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6105 = x6102 - x6104;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6106 = x5834 + x5843;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6107 = x5834 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6108 = x6107 * x5843;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6109 = x6106 - x6108;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6110 = x5835 + x5812;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6111 = x5835 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6112 = x6111 * x5812;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6113 = x6110 - x6112;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6114 = x5836 + x5813;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6115 = x5836 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6116 = x6115 * x5813;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6117 = x6114 - x6116;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6118 = x5837 + x5814;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6119 = x5837 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6120 = x6119 * x5814;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6121 = x6118 - x6120;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6122 = x5838 + x5815;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6123 = x5838 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6124 = x6123 * x5815;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6125 = x6122 - x6124;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6126 = x5839 + x5816;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6127 = x5839 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6128 = x6127 * x5816;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6129 = x6126 - x6128;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6130 = x5840 + x5817;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6131 = x5840 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6132 = x6131 * x5817;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6133 = x6130 - x6132;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6134 = x5841 + x5818;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6135 = x5841 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6136 = x6135 * x5818;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6137 = x6134 - x6136;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6138 = x5842 + x5819;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6139 = x5842 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6140 = x6139 * x5819;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6141 = x6138 - x6140;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6142 = x5843 + x5820;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6143 = x5843 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6144 = x6143 * x5820;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6145 = x6142 - x6144;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6146 = x5812 + x5821;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6147 = x5812 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6148 = x6147 * x5821;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6149 = x6146 - x6148;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6150 = x5813 + x5822;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6151 = x5813 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6152 = x6151 * x5822;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6153 = x6150 - x6152;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6154 = x5814 + x5823;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6155 = x5814 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6156 = x6155 * x5823;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6157 = x6154 - x6156;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6158 = x5815 + x5824;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6159 = x5815 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6160 = x6159 * x5824;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6161 = x6158 - x6160;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6162 = x5816 + x5825;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6163 = x5816 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6164 = x6163 * x5825;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6165 = x6162 - x6164;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6166 = x5817 + x5826;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6167 = x5817 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6168 = x6167 * x5826;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6169 = x6166 - x6168;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6170 = x5818 + x5827;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6171 = x5818 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6172 = x6171 * x5827;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6173 = x6170 - x6172;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6174 = x5819 + x5828;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6175 = x5819 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6176 = x6175 * x5828;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6177 = x6174 - x6176;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6178 = x5820 + x5829;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6179 = x5820 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6180 = x6179 * x5829;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6181 = x6178 - x6180;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6182 = x5821 + x5830;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6183 = x5821 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6184 = x6183 * x5830;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6185 = x6182 - x6184;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6186 = x5822 + x5831;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6187 = x5822 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6188 = x6187 * x5831;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6189 = x6186 - x6188;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6190 = x5823 + x5832;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6191 = x5823 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6192 = x6191 * x5832;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6193 = x6190 - x6192;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6194 = x5824 + x5833;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6195 = x5824 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6196 = x6195 * x5833;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6197 = x6194 - x6196;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6198 = x5814 + x6073;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6199 = x6155 * x6073;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6200 = x6198 - x6199;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6201 = x5815 + x6077;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6202 = x6159 * x6077;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6203 = x6201 - x6202;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6204 = x5816 + x6081;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6205 = x6163 * x6081;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6206 = x6204 - x6205;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6207 = x5817 + x6085;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6208 = x6167 * x6085;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6209 = x6207 - x6208;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6210 = x5818 + x6089;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6211 = x6171 * x6089;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6212 = x6210 - x6211;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6213 = x5819 + x6093;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6214 = x6175 * x6093;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6215 = x6213 - x6214;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6216 = x5820 + x6097;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6217 = x6179 * x6097;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6218 = x6216 - x6217;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6219 = x5821 + x6101;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6220 = x6183 * x6101;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6221 = x6219 - x6220;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6222 = x5822 + x6105;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6223 = x6187 * x6105;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6224 = x6222 - x6223;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6225 = x5823 + x6109;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6226 = x6191 * x6109;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6227 = x6225 - x6226;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6228 = x5824 + x6113;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6229 = x6195 * x6113;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6230 = x6228 - x6229;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6231 = x5825 + x6117;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6232 = x6071 * x6117;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6233 = x6231 - x6232;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6234 = x5826 + x6121;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6235 = x6075 * x6121;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6236 = x6234 - x6235;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6237 = x5827 + x6125;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6238 = x6079 * x6125;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6239 = x6237 - x6238;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6240 = x5828 + x6129;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6241 = x6083 * x6129;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6242 = x6240 - x6241;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6243 = x5829 + x6133;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6244 = x6087 * x6133;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6245 = x6243 - x6244;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6246 = x5830 + x6137;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6247 = x6091 * x6137;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6248 = x6246 - x6247;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6249 = x5831 + x6141;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6250 = x6095 * x6141;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6251 = x6249 - x6250;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6252 = x5832 + x6145;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6253 = x6099 * x6145;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6254 = x6252 - x6253;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6255 = x5833 + x6149;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6256 = x6103 * x6149;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6257 = x6255 - x6256;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6258 = x5834 + x6153;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6259 = x6107 * x6153;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6260 = x6258 - x6259;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6261 = x5835 + x6157;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6262 = x6111 * x6157;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6263 = x6261 - x6262;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6264 = x5836 + x6161;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6265 = x6115 * x6161;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6266 = x6264 - x6265;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6267 = x5837 + x6165;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6268 = x6119 * x6165;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6269 = x6267 - x6268;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6270 = x5838 + x6169;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6271 = x6123 * x6169;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6272 = x6270 - x6271;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6273 = x5839 + x6173;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6274 = x6127 * x6173;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6275 = x6273 - x6274;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6276 = x5840 + x6177;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6277 = x6131 * x6177;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6278 = x6276 - x6277;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6279 = x5841 + x6181;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6280 = x6135 * x6181;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6281 = x6279 - x6280;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6282 = x5842 + x6185;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6283 = x6139 * x6185;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6284 = x6282 - x6283;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6285 = x5843 + x6189;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6286 = x6143 * x6189;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6287 = x6285 - x6286;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6288 = x5812 + x6193;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6289 = x6147 * x6193;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6290 = x6288 - x6289;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6291 = x5813 + x6197;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6292 = x6151 * x6197;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6293 = x6291 - x6292;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6294 = x5951 + x5965;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6295 = x5951 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6296 = x6295 * x5965;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6297 = x6294 - x6296;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6298 = x5952 + x5966;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6299 = x5952 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6300 = x6299 * x5966;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6301 = x6298 - x6300;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6302 = x5953 + x5967;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6303 = x5953 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6304 = x6303 * x5967;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6305 = x6302 - x6304;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6306 = x5954 + x5968;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6307 = x5954 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6308 = x6307 * x5968;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6309 = x6306 - x6308;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6310 = x5955 + x5969;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6311 = x5955 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6312 = x6311 * x5969;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6313 = x6310 - x6312;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6314 = x5956 + x5970;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6315 = x5956 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6316 = x6315 * x5970;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6317 = x6314 - x6316;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6318 = x5957 + x5971;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6319 = x5957 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6320 = x6319 * x5971;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6321 = x6318 - x6320;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6322 = x5958 + x5940;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6323 = x5958 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6324 = x6323 * x5940;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6325 = x6322 - x6324;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6326 = x5959 + x5941;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6327 = x5959 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6328 = x6327 * x5941;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6329 = x6326 - x6328;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6330 = x5960 + x5942;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6331 = x5960 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6332 = x6331 * x5942;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6333 = x6330 - x6332;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6334 = x5961 + x5943;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6335 = x5961 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6336 = x6335 * x5943;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6337 = x6334 - x6336;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6338 = x5962 + x5944;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6339 = x5962 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6340 = x6339 * x5944;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6341 = x6338 - x6340;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6342 = x5963 + x5945;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6343 = x5963 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6344 = x6343 * x5945;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6345 = x6342 - x6344;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6346 = x5964 + x5946;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6347 = x5964 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6348 = x6347 * x5946;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6349 = x6346 - x6348;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6350 = x5965 + x5947;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6351 = x5965 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6352 = x6351 * x5947;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6353 = x6350 - x6352;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6354 = x5966 + x5948;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6355 = x5966 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6356 = x6355 * x5948;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6357 = x6354 - x6356;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6358 = x5967 + x5949;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6359 = x5967 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6360 = x6359 * x5949;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6361 = x6358 - x6360;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6362 = x5968 + x5950;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6363 = x5968 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6364 = x6363 * x5950;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6365 = x6362 - x6364;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6366 = x5969 + x5951;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6367 = x5969 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6368 = x6367 * x5951;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6369 = x6366 - x6368;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6370 = x5970 + x5952;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6371 = x5970 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6372 = x6371 * x5952;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6373 = x6370 - x6372;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6374 = x5971 + x5953;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6375 = x5971 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6376 = x6375 * x5953;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6377 = x6374 - x6376;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6378 = x5940 + x5954;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6379 = x5940 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6380 = x6379 * x5954;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6381 = x6378 - x6380;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6382 = x5941 + x5955;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6383 = x5941 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6384 = x6383 * x5955;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6385 = x6382 - x6384;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6386 = x5942 + x5956;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6387 = x5942 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6388 = x6387 * x5956;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6389 = x6386 - x6388;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6390 = x5943 + x5957;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6391 = x5943 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6392 = x6391 * x5957;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6393 = x6390 - x6392;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6394 = x5944 + x5958;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6395 = x5944 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6396 = x6395 * x5958;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6397 = x6394 - x6396;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6398 = x5945 + x5959;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6399 = x5945 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6400 = x6399 * x5959;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6401 = x6398 - x6400;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6402 = x5946 + x5960;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6403 = x5946 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6404 = x6403 * x5960;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6405 = x6402 - x6404;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6406 = x5947 + x5961;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6407 = x5947 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6408 = x6407 * x5961;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6409 = x6406 - x6408;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6410 = x5948 + x5962;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6411 = x5948 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6412 = x6411 * x5962;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6413 = x6410 - x6412;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6414 = x5949 + x5963;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6415 = x5949 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6416 = x6415 * x5963;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6417 = x6414 - x6416;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6418 = x5950 + x5964;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6419 = x5950 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6420 = x6419 * x5964;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6421 = x6418 - x6420;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6422 = x5946 + x6297;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6423 = x6403 * x6297;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6424 = x6422 - x6423;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6425 = x5947 + x6301;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6426 = x6407 * x6301;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6427 = x6425 - x6426;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6428 = x5948 + x6305;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6429 = x6411 * x6305;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6430 = x6428 - x6429;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6431 = x5949 + x6309;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6432 = x6415 * x6309;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6433 = x6431 - x6432;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6434 = x5950 + x6313;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6435 = x6419 * x6313;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6436 = x6434 - x6435;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6437 = x5951 + x6317;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6438 = x6295 * x6317;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6439 = x6437 - x6438;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6440 = x5952 + x6321;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6441 = x6299 * x6321;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6442 = x6440 - x6441;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6443 = x5953 + x6325;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6444 = x6303 * x6325;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6445 = x6443 - x6444;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6446 = x5954 + x6329;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6447 = x6307 * x6329;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6448 = x6446 - x6447;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6449 = x5955 + x6333;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6450 = x6311 * x6333;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6451 = x6449 - x6450;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6452 = x5956 + x6337;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6453 = x6315 * x6337;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6454 = x6452 - x6453;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6455 = x5957 + x6341;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6456 = x6319 * x6341;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6457 = x6455 - x6456;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6458 = x5958 + x6345;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6459 = x6323 * x6345;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6460 = x6458 - x6459;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6461 = x5959 + x6349;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6462 = x6327 * x6349;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6463 = x6461 - x6462;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6464 = x5960 + x6353;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6465 = x6331 * x6353;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6466 = x6464 - x6465;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6467 = x5961 + x6357;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6468 = x6335 * x6357;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6469 = x6467 - x6468;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6470 = x5962 + x6361;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6471 = x6339 * x6361;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6472 = x6470 - x6471;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6473 = x5963 + x6365;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6474 = x6343 * x6365;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6475 = x6473 - x6474;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6476 = x5964 + x6369;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6477 = x6347 * x6369;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6478 = x6476 - x6477;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6479 = x5965 + x6373;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6480 = x6351 * x6373;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6481 = x6479 - x6480;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6482 = x5966 + x6377;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6483 = x6355 * x6377;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6484 = x6482 - x6483;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6485 = x5967 + x6381;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6486 = x6359 * x6381;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6487 = x6485 - x6486;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6488 = x5968 + x6385;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6489 = x6363 * x6385;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6490 = x6488 - x6489;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6491 = x5969 + x6389;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6492 = x6367 * x6389;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6493 = x6491 - x6492;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6494 = x5970 + x6393;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6495 = x6371 * x6393;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6496 = x6494 - x6495;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6497 = x5971 + x6397;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6498 = x6375 * x6397;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6499 = x6497 - x6498;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6500 = x5940 + x6401;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6501 = x6379 * x6401;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6502 = x6500 - x6501;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6503 = x5941 + x6405;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6504 = x6383 * x6405;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6505 = x6503 - x6504;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6506 = x5942 + x6409;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6507 = x6387 * x6409;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6508 = x6506 - x6507;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6509 = x5943 + x6413;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6510 = x6391 * x6413;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6511 = x6509 - x6510;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6512 = x5944 + x6417;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6513 = x6395 * x6417;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6514 = x6512 - x6513;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6515 = x5945 + x6421;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x6516 = x6399 * x6421;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x6517 = x6515 - x6516;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6518 = x5732 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6519 = x5769 + x6518;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6520 = x5733 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6521 = x6519 + x6520;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6522 = x5734 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6523 = x6521 + x6522;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6524 = x5735 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6525 = x6523 + x6524;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6526 = x5736 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6527 = x6525 + x6526;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6528 = x5737 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6529 = x6527 + x6528;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6530 = x5738 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6531 = x6529 + x6530;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6532 = x5739 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6533 = x6531 + x6532;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6534 = x5748 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6535 = x5797 + x6534;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6536 = x5749 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6537 = x6535 + x6536;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6538 = x5750 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6539 = x6537 + x6538;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6540 = x5751 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6541 = x6539 + x6540;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6542 = x5752 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6543 = x6541 + x6542;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6544 = x5753 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6545 = x6543 + x6544;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6546 = x5754 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6547 = x6545 + x6546;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6548 = x5755 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6549 = x6547 + x6548;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6550 = x6037 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6551 = x6036 + x6550;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6552 = x6038 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6553 = x6551 + x6552;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6554 = x6039 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6555 = x6553 + x6554;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6556 = x6040 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6557 = x6555 + x6556;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6558 = x6041 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6559 = x6557 + x6558;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6560 = x6042 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6561 = x6559 + x6560;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6562 = x6043 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6563 = x6561 + x6562;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6564 = x6044 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6565 = x6563 + x6564;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6566 = x6045 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6567 = x6565 + x6566;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6568 = x6046 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6569 = x6567 + x6568;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6570 = x6047 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6571 = x6569 + x6570;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6572 = x6048 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6573 = x6571 + x6572;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6574 = x6049 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6575 = x6573 + x6574;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6576 = x6050 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6577 = x6575 + x6576;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6578 = x6051 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6579 = x6577 + x6578;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6580 = x6053 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6581 = x6052 + x6580;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6582 = x6054 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6583 = x6581 + x6582;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6584 = x6055 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6585 = x6583 + x6584;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6586 = x6056 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6587 = x6585 + x6586;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6588 = x6057 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6589 = x6587 + x6588;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6590 = x6058 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6591 = x6589 + x6590;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6592 = x6059 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6593 = x6591 + x6592;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6594 = x6060 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6595 = x6593 + x6594;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6596 = x6061 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6597 = x6595 + x6596;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6598 = x6062 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6599 = x6597 + x6598;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6600 = x6063 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6601 = x6599 + x6600;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6602 = x6064 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6603 = x6601 + x6602;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6604 = x6065 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6605 = x6603 + x6604;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6606 = x6066 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6607 = x6605 + x6606;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6608 = x6067 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6609 = x6607 + x6608;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6610 = x5940 * x5972;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6611 = x2352 - x5940;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6612 = x6611 * x6004;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6613 = x6610 + x6612;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6614 = x5941 * x5973;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6615 = x2352 - x5941;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6616 = x6615 * x6005;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6617 = x6614 + x6616;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6618 = x5942 * x5974;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6619 = x2352 - x5942;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6620 = x6619 * x6006;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6621 = x6618 + x6620;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6622 = x5943 * x5975;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6623 = x2352 - x5943;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6624 = x6623 * x6007;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6625 = x6622 + x6624;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6626 = x5944 * x5976;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6627 = x2352 - x5944;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6628 = x6627 * x6008;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6629 = x6626 + x6628;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6630 = x5945 * x5977;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6631 = x2352 - x5945;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6632 = x6631 * x6009;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6633 = x6630 + x6632;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6634 = x5946 * x5978;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6635 = x2352 - x5946;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6636 = x6635 * x6010;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6637 = x6634 + x6636;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6638 = x5947 * x5979;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6639 = x2352 - x5947;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6640 = x6639 * x6011;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6641 = x6638 + x6640;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6642 = x5948 * x5980;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6643 = x2352 - x5948;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6644 = x6643 * x6012;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6645 = x6642 + x6644;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6646 = x5949 * x5981;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6647 = x2352 - x5949;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6648 = x6647 * x6013;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6649 = x6646 + x6648;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6650 = x5950 * x5982;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6651 = x2352 - x5950;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6652 = x6651 * x6014;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6653 = x6650 + x6652;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6654 = x5951 * x5983;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6655 = x2352 - x5951;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6656 = x6655 * x6015;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6657 = x6654 + x6656;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6658 = x5952 * x5984;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6659 = x2352 - x5952;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6660 = x6659 * x6016;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6661 = x6658 + x6660;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6662 = x5953 * x5985;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6663 = x2352 - x5953;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6664 = x6663 * x6017;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6665 = x6662 + x6664;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6666 = x5954 * x5986;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6667 = x2352 - x5954;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6668 = x6667 * x6018;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6669 = x6666 + x6668;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6670 = x5955 * x5987;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6671 = x2352 - x5955;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6672 = x6671 * x6019;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6673 = x6670 + x6672;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6674 = x5956 * x5988;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6675 = x2352 - x5956;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6676 = x6675 * x6020;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6677 = x6674 + x6676;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6678 = x5957 * x5989;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6679 = x2352 - x5957;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6680 = x6679 * x6021;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6681 = x6678 + x6680;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6682 = x5958 * x5990;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6683 = x2352 - x5958;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6684 = x6683 * x6022;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6685 = x6682 + x6684;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6686 = x5959 * x5991;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6687 = x2352 - x5959;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6688 = x6687 * x6023;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6689 = x6686 + x6688;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6690 = x5960 * x5992;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6691 = x2352 - x5960;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6692 = x6691 * x6024;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6693 = x6690 + x6692;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6694 = x5961 * x5993;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6695 = x2352 - x5961;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6696 = x6695 * x6025;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6697 = x6694 + x6696;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6698 = x5962 * x5994;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6699 = x2352 - x5962;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6700 = x6699 * x6026;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6701 = x6698 + x6700;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6702 = x5963 * x5995;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6703 = x2352 - x5963;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6704 = x6703 * x6027;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6705 = x6702 + x6704;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6706 = x5964 * x5996;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6707 = x2352 - x5964;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6708 = x6707 * x6028;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6709 = x6706 + x6708;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6710 = x5965 * x5997;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6711 = x2352 - x5965;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6712 = x6711 * x6029;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6713 = x6710 + x6712;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6714 = x5966 * x5998;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6715 = x2352 - x5966;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6716 = x6715 * x6030;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6717 = x6714 + x6716;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6718 = x5967 * x5999;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6719 = x2352 - x5967;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6720 = x6719 * x6031;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6721 = x6718 + x6720;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6722 = x5968 * x6000;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6723 = x2352 - x5968;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6724 = x6723 * x6032;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6725 = x6722 + x6724;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6726 = x5969 * x6001;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6727 = x2352 - x5969;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6728 = x6727 * x6033;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6729 = x6726 + x6728;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6730 = x5970 * x6002;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6731 = x2352 - x5970;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6732 = x6731 * x6034;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6733 = x6730 + x6732;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6734 = x5971 * x6003;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x6735 = x2352 - x5971;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x6736 = x6735 * x6035;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x6737 = x6734 + x6736;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6738 = x6617 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6739 = x6613 + x6738;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6740 = x6621 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6741 = x6739 + x6740;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6742 = x6625 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6743 = x6741 + x6742;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6744 = x6629 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6745 = x6743 + x6744;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6746 = x6633 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6747 = x6745 + x6746;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6748 = x6637 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6749 = x6747 + x6748;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6750 = x6641 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6751 = x6749 + x6750;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6752 = x6645 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6753 = x6751 + x6752;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6754 = x6649 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6755 = x6753 + x6754;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6756 = x6653 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6757 = x6755 + x6756;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6758 = x6657 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6759 = x6757 + x6758;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6760 = x6661 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6761 = x6759 + x6760;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6762 = x6665 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6763 = x6761 + x6762;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6764 = x6669 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6765 = x6763 + x6764;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6766 = x6673 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6767 = x6765 + x6766;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6768 = x6681 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6769 = x6677 + x6768;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6770 = x6685 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6771 = x6769 + x6770;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6772 = x6689 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6773 = x6771 + x6772;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6774 = x6693 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6775 = x6773 + x6774;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6776 = x6697 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6777 = x6775 + x6776;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6778 = x6701 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6779 = x6777 + x6778;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6780 = x6705 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6781 = x6779 + x6780;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6782 = x6709 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6783 = x6781 + x6782;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6784 = x6713 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6785 = x6783 + x6784;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6786 = x6717 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6787 = x6785 + x6786;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6788 = x6721 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6789 = x6787 + x6788;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6790 = x6725 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6791 = x6789 + x6790;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6792 = x6729 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6793 = x6791 + x6792;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6794 = x6733 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6795 = x6793 + x6794;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6796 = x6737 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6797 = x6795 + x6796;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6798 = x6427 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6799 = x6424 + x6798;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6800 = x6430 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6801 = x6799 + x6800;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6802 = x6433 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6803 = x6801 + x6802;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6804 = x6436 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6805 = x6803 + x6804;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6806 = x6439 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6807 = x6805 + x6806;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6808 = x6442 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6809 = x6807 + x6808;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6810 = x6445 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6811 = x6809 + x6810;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6812 = x6448 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6813 = x6811 + x6812;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6814 = x6451 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6815 = x6813 + x6814;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6816 = x6454 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6817 = x6815 + x6816;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6818 = x6457 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6819 = x6817 + x6818;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6820 = x6460 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6821 = x6819 + x6820;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6822 = x6463 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6823 = x6821 + x6822;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6824 = x6466 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6825 = x6823 + x6824;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6826 = x6469 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6827 = x6825 + x6826;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6828 = x6475 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6829 = x6472 + x6828;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6830 = x6478 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6831 = x6829 + x6830;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6832 = x6481 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6833 = x6831 + x6832;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6834 = x6484 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6835 = x6833 + x6834;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6836 = x6487 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6837 = x6835 + x6836;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6838 = x6490 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6839 = x6837 + x6838;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6840 = x6493 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6841 = x6839 + x6840;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6842 = x6496 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6843 = x6841 + x6842;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6844 = x6499 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6845 = x6843 + x6844;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6846 = x6502 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6847 = x6845 + x6846;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6848 = x6505 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6849 = x6847 + x6848;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6850 = x6508 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6851 = x6849 + x6850;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6852 = x6511 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6853 = x6851 + x6852;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6854 = x6514 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6855 = x6853 + x6854;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x6856 = x6517 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x6857 = x6855 + x6856;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x6858 = x6767 + x6827;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x6859 = x6797 + x6857;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x6860 = x6579 + x6858;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x6861 = x6609 + x6859;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x6862 = x6068 + x6860;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x6863 = x6069 + x6861;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x6864 = x6533 + x6862;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x6865 = x6549 + x6863;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6866 = x5812 * x5844;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x6867 = x2352 - x5876;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6868 = x6866 * x6867;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x6869 = x2352 - x5844;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6870 = x5812 * x6869;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6871 = x6870 * x5876;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6872 = x6868 + x6871;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x6873 = x2352 - x5812;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6874 = x6873 * x5844;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6875 = x6874 * x5876;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6876 = x6872 + x6875;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x6877 = x6866 * x5876;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6878 = x6876 + x6877;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6879 = x5813 * x5845;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x6880 = x2352 - x5877;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6881 = x6879 * x6880;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x6882 = x2352 - x5845;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6883 = x5813 * x6882;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6884 = x6883 * x5877;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6885 = x6881 + x6884;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x6886 = x2352 - x5813;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6887 = x6886 * x5845;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6888 = x6887 * x5877;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6889 = x6885 + x6888;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x6890 = x6879 * x5877;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6891 = x6889 + x6890;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6892 = x5814 * x5846;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x6893 = x2352 - x5878;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6894 = x6892 * x6893;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x6895 = x2352 - x5846;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6896 = x5814 * x6895;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6897 = x6896 * x5878;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6898 = x6894 + x6897;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x6899 = x2352 - x5814;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6900 = x6899 * x5846;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6901 = x6900 * x5878;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6902 = x6898 + x6901;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x6903 = x6892 * x5878;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6904 = x6902 + x6903;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6905 = x5815 * x5847;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x6906 = x2352 - x5879;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6907 = x6905 * x6906;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x6908 = x2352 - x5847;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6909 = x5815 * x6908;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6910 = x6909 * x5879;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6911 = x6907 + x6910;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x6912 = x2352 - x5815;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6913 = x6912 * x5847;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6914 = x6913 * x5879;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6915 = x6911 + x6914;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x6916 = x6905 * x5879;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6917 = x6915 + x6916;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6918 = x5816 * x5848;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x6919 = x2352 - x5880;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6920 = x6918 * x6919;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x6921 = x2352 - x5848;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6922 = x5816 * x6921;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6923 = x6922 * x5880;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6924 = x6920 + x6923;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x6925 = x2352 - x5816;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6926 = x6925 * x5848;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6927 = x6926 * x5880;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6928 = x6924 + x6927;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x6929 = x6918 * x5880;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6930 = x6928 + x6929;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6931 = x5817 * x5849;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x6932 = x2352 - x5881;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6933 = x6931 * x6932;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x6934 = x2352 - x5849;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6935 = x5817 * x6934;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6936 = x6935 * x5881;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6937 = x6933 + x6936;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x6938 = x2352 - x5817;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6939 = x6938 * x5849;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6940 = x6939 * x5881;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6941 = x6937 + x6940;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x6942 = x6931 * x5881;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6943 = x6941 + x6942;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6944 = x5818 * x5850;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x6945 = x2352 - x5882;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6946 = x6944 * x6945;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x6947 = x2352 - x5850;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6948 = x5818 * x6947;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6949 = x6948 * x5882;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6950 = x6946 + x6949;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x6951 = x2352 - x5818;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6952 = x6951 * x5850;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6953 = x6952 * x5882;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6954 = x6950 + x6953;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x6955 = x6944 * x5882;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6956 = x6954 + x6955;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6957 = x5819 * x5851;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x6958 = x2352 - x5883;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6959 = x6957 * x6958;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x6960 = x2352 - x5851;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6961 = x5819 * x6960;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6962 = x6961 * x5883;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6963 = x6959 + x6962;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x6964 = x2352 - x5819;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6965 = x6964 * x5851;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6966 = x6965 * x5883;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6967 = x6963 + x6966;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x6968 = x6957 * x5883;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6969 = x6967 + x6968;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6970 = x5820 * x5852;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x6971 = x2352 - x5884;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6972 = x6970 * x6971;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x6973 = x2352 - x5852;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6974 = x5820 * x6973;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6975 = x6974 * x5884;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6976 = x6972 + x6975;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x6977 = x2352 - x5820;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6978 = x6977 * x5852;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6979 = x6978 * x5884;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6980 = x6976 + x6979;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x6981 = x6970 * x5884;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6982 = x6980 + x6981;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6983 = x5821 * x5853;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x6984 = x2352 - x5885;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6985 = x6983 * x6984;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x6986 = x2352 - x5853;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6987 = x5821 * x6986;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x6988 = x6987 * x5885;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6989 = x6985 + x6988;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x6990 = x2352 - x5821;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6991 = x6990 * x5853;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x6992 = x6991 * x5885;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6993 = x6989 + x6992;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x6994 = x6983 * x5885;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6995 = x6993 + x6994;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6996 = x5822 * x5854;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x6997 = x2352 - x5886;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x6998 = x6996 * x6997;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x6999 = x2352 - x5854;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7000 = x5822 * x6999;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7001 = x7000 * x5886;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7002 = x6998 + x7001;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7003 = x2352 - x5822;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7004 = x7003 * x5854;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7005 = x7004 * x5886;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7006 = x7002 + x7005;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7007 = x6996 * x5886;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7008 = x7006 + x7007;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7009 = x5823 * x5855;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7010 = x2352 - x5887;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7011 = x7009 * x7010;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7012 = x2352 - x5855;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7013 = x5823 * x7012;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7014 = x7013 * x5887;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7015 = x7011 + x7014;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7016 = x2352 - x5823;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7017 = x7016 * x5855;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7018 = x7017 * x5887;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7019 = x7015 + x7018;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7020 = x7009 * x5887;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7021 = x7019 + x7020;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7022 = x5824 * x5856;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7023 = x2352 - x5888;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7024 = x7022 * x7023;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7025 = x2352 - x5856;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7026 = x5824 * x7025;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7027 = x7026 * x5888;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7028 = x7024 + x7027;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7029 = x2352 - x5824;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7030 = x7029 * x5856;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7031 = x7030 * x5888;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7032 = x7028 + x7031;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7033 = x7022 * x5888;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7034 = x7032 + x7033;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7035 = x5825 * x5857;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7036 = x2352 - x5889;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7037 = x7035 * x7036;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7038 = x2352 - x5857;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7039 = x5825 * x7038;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7040 = x7039 * x5889;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7041 = x7037 + x7040;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7042 = x2352 - x5825;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7043 = x7042 * x5857;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7044 = x7043 * x5889;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7045 = x7041 + x7044;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7046 = x7035 * x5889;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7047 = x7045 + x7046;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7048 = x5826 * x5858;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7049 = x2352 - x5890;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7050 = x7048 * x7049;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7051 = x2352 - x5858;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7052 = x5826 * x7051;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7053 = x7052 * x5890;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7054 = x7050 + x7053;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7055 = x2352 - x5826;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7056 = x7055 * x5858;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7057 = x7056 * x5890;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7058 = x7054 + x7057;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7059 = x7048 * x5890;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7060 = x7058 + x7059;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7061 = x5827 * x5859;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7062 = x2352 - x5891;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7063 = x7061 * x7062;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7064 = x2352 - x5859;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7065 = x5827 * x7064;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7066 = x7065 * x5891;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7067 = x7063 + x7066;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7068 = x2352 - x5827;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7069 = x7068 * x5859;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7070 = x7069 * x5891;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7071 = x7067 + x7070;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7072 = x7061 * x5891;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7073 = x7071 + x7072;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7074 = x5828 * x5860;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7075 = x2352 - x5892;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7076 = x7074 * x7075;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7077 = x2352 - x5860;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7078 = x5828 * x7077;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7079 = x7078 * x5892;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7080 = x7076 + x7079;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7081 = x2352 - x5828;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7082 = x7081 * x5860;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7083 = x7082 * x5892;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7084 = x7080 + x7083;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7085 = x7074 * x5892;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7086 = x7084 + x7085;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7087 = x5829 * x5861;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7088 = x2352 - x5893;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7089 = x7087 * x7088;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7090 = x2352 - x5861;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7091 = x5829 * x7090;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7092 = x7091 * x5893;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7093 = x7089 + x7092;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7094 = x2352 - x5829;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7095 = x7094 * x5861;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7096 = x7095 * x5893;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7097 = x7093 + x7096;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7098 = x7087 * x5893;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7099 = x7097 + x7098;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7100 = x5830 * x5862;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7101 = x2352 - x5894;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7102 = x7100 * x7101;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7103 = x2352 - x5862;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7104 = x5830 * x7103;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7105 = x7104 * x5894;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7106 = x7102 + x7105;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7107 = x2352 - x5830;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7108 = x7107 * x5862;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7109 = x7108 * x5894;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7110 = x7106 + x7109;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7111 = x7100 * x5894;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7112 = x7110 + x7111;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7113 = x5831 * x5863;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7114 = x2352 - x5895;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7115 = x7113 * x7114;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7116 = x2352 - x5863;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7117 = x5831 * x7116;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7118 = x7117 * x5895;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7119 = x7115 + x7118;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7120 = x2352 - x5831;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7121 = x7120 * x5863;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7122 = x7121 * x5895;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7123 = x7119 + x7122;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7124 = x7113 * x5895;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7125 = x7123 + x7124;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7126 = x5832 * x5864;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7127 = x2352 - x5896;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7128 = x7126 * x7127;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7129 = x2352 - x5864;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7130 = x5832 * x7129;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7131 = x7130 * x5896;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7132 = x7128 + x7131;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7133 = x2352 - x5832;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7134 = x7133 * x5864;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7135 = x7134 * x5896;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7136 = x7132 + x7135;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7137 = x7126 * x5896;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7138 = x7136 + x7137;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7139 = x5833 * x5865;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7140 = x2352 - x5897;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7141 = x7139 * x7140;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7142 = x2352 - x5865;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7143 = x5833 * x7142;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7144 = x7143 * x5897;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7145 = x7141 + x7144;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7146 = x2352 - x5833;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7147 = x7146 * x5865;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7148 = x7147 * x5897;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7149 = x7145 + x7148;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7150 = x7139 * x5897;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7151 = x7149 + x7150;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7152 = x5834 * x5866;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7153 = x2352 - x5898;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7154 = x7152 * x7153;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7155 = x2352 - x5866;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7156 = x5834 * x7155;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7157 = x7156 * x5898;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7158 = x7154 + x7157;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7159 = x2352 - x5834;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7160 = x7159 * x5866;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7161 = x7160 * x5898;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7162 = x7158 + x7161;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7163 = x7152 * x5898;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7164 = x7162 + x7163;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7165 = x5835 * x5867;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7166 = x2352 - x5899;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7167 = x7165 * x7166;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7168 = x2352 - x5867;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7169 = x5835 * x7168;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7170 = x7169 * x5899;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7171 = x7167 + x7170;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7172 = x2352 - x5835;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7173 = x7172 * x5867;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7174 = x7173 * x5899;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7175 = x7171 + x7174;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7176 = x7165 * x5899;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7177 = x7175 + x7176;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7178 = x5836 * x5868;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7179 = x2352 - x5900;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7180 = x7178 * x7179;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7181 = x2352 - x5868;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7182 = x5836 * x7181;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7183 = x7182 * x5900;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7184 = x7180 + x7183;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7185 = x2352 - x5836;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7186 = x7185 * x5868;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7187 = x7186 * x5900;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7188 = x7184 + x7187;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7189 = x7178 * x5900;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7190 = x7188 + x7189;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7191 = x5837 * x5869;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7192 = x2352 - x5901;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7193 = x7191 * x7192;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7194 = x2352 - x5869;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7195 = x5837 * x7194;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7196 = x7195 * x5901;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7197 = x7193 + x7196;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7198 = x2352 - x5837;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7199 = x7198 * x5869;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7200 = x7199 * x5901;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7201 = x7197 + x7200;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7202 = x7191 * x5901;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7203 = x7201 + x7202;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7204 = x5838 * x5870;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7205 = x2352 - x5902;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7206 = x7204 * x7205;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7207 = x2352 - x5870;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7208 = x5838 * x7207;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7209 = x7208 * x5902;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7210 = x7206 + x7209;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7211 = x2352 - x5838;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7212 = x7211 * x5870;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7213 = x7212 * x5902;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7214 = x7210 + x7213;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7215 = x7204 * x5902;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7216 = x7214 + x7215;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7217 = x5839 * x5871;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7218 = x2352 - x5903;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7219 = x7217 * x7218;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7220 = x2352 - x5871;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7221 = x5839 * x7220;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7222 = x7221 * x5903;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7223 = x7219 + x7222;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7224 = x2352 - x5839;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7225 = x7224 * x5871;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7226 = x7225 * x5903;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7227 = x7223 + x7226;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7228 = x7217 * x5903;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7229 = x7227 + x7228;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7230 = x5840 * x5872;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7231 = x2352 - x5904;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7232 = x7230 * x7231;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7233 = x2352 - x5872;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7234 = x5840 * x7233;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7235 = x7234 * x5904;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7236 = x7232 + x7235;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7237 = x2352 - x5840;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7238 = x7237 * x5872;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7239 = x7238 * x5904;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7240 = x7236 + x7239;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7241 = x7230 * x5904;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7242 = x7240 + x7241;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7243 = x5841 * x5873;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7244 = x2352 - x5905;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7245 = x7243 * x7244;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7246 = x2352 - x5873;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7247 = x5841 * x7246;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7248 = x7247 * x5905;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7249 = x7245 + x7248;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7250 = x2352 - x5841;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7251 = x7250 * x5873;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7252 = x7251 * x5905;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7253 = x7249 + x7252;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7254 = x7243 * x5905;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7255 = x7253 + x7254;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7256 = x5842 * x5874;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7257 = x2352 - x5906;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7258 = x7256 * x7257;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7259 = x2352 - x5874;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7260 = x5842 * x7259;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7261 = x7260 * x5906;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7262 = x7258 + x7261;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7263 = x2352 - x5842;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7264 = x7263 * x5874;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7265 = x7264 * x5906;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7266 = x7262 + x7265;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7267 = x7256 * x5906;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7268 = x7266 + x7267;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7269 = x5843 * x5875;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x7270 = x2352 - x5907;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7271 = x7269 * x7270;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x7272 = x2352 - x5875;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7273 = x5843 * x7272;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x7274 = x7273 * x5907;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7275 = x7271 + x7274;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x7276 = x2352 - x5843;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7277 = x7276 * x5875;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x7278 = x7277 * x5907;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7279 = x7275 + x7278;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x7280 = x7269 * x5907;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x7281 = x7279 + x7280;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7282 = x6891 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7283 = x6878 + x7282;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7284 = x6904 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7285 = x7283 + x7284;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7286 = x6917 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7287 = x7285 + x7286;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7288 = x6930 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7289 = x7287 + x7288;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7290 = x6943 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7291 = x7289 + x7290;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7292 = x6956 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7293 = x7291 + x7292;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7294 = x6969 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7295 = x7293 + x7294;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7296 = x6982 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7297 = x7295 + x7296;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7298 = x6995 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7299 = x7297 + x7298;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7300 = x7008 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7301 = x7299 + x7300;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7302 = x7021 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7303 = x7301 + x7302;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7304 = x7034 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7305 = x7303 + x7304;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7306 = x7047 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7307 = x7305 + x7306;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7308 = x7060 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7309 = x7307 + x7308;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7310 = x7073 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7311 = x7309 + x7310;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7312 = x7099 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7313 = x7086 + x7312;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7314 = x7112 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7315 = x7313 + x7314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7316 = x7125 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7317 = x7315 + x7316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7318 = x7138 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7319 = x7317 + x7318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7320 = x7151 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7321 = x7319 + x7320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7322 = x7164 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7323 = x7321 + x7322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7324 = x7177 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7325 = x7323 + x7324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7326 = x7190 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7327 = x7325 + x7326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7328 = x7203 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7329 = x7327 + x7328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7330 = x7216 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7331 = x7329 + x7330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7332 = x7229 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7333 = x7331 + x7332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7334 = x7242 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7335 = x7333 + x7334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7336 = x7255 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7337 = x7335 + x7336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7338 = x7268 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7339 = x7337 + x7338;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7340 = x7281 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7341 = x7339 + x7340;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7342 = x6203 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7343 = x6200 + x7342;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7344 = x6206 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7345 = x7343 + x7344;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7346 = x6209 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7347 = x7345 + x7346;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7348 = x6212 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7349 = x7347 + x7348;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7350 = x6215 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7351 = x7349 + x7350;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7352 = x6218 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7353 = x7351 + x7352;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7354 = x6221 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7355 = x7353 + x7354;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7356 = x6224 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7357 = x7355 + x7356;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7358 = x6227 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7359 = x7357 + x7358;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7360 = x6230 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7361 = x7359 + x7360;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7362 = x6233 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7363 = x7361 + x7362;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7364 = x6236 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7365 = x7363 + x7364;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7366 = x6239 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7367 = x7365 + x7366;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7368 = x6242 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7369 = x7367 + x7368;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7370 = x6245 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7371 = x7369 + x7370;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7372 = x6251 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7373 = x6248 + x7372;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7374 = x6254 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7375 = x7373 + x7374;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7376 = x6257 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7377 = x7375 + x7376;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7378 = x6260 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7379 = x7377 + x7378;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7380 = x6263 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7381 = x7379 + x7380;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7382 = x6266 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7383 = x7381 + x7382;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7384 = x6269 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7385 = x7383 + x7384;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7386 = x6272 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7387 = x7385 + x7386;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7388 = x6275 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7389 = x7387 + x7388;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7390 = x6278 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7391 = x7389 + x7390;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7392 = x6281 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7393 = x7391 + x7392;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7394 = x6284 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7395 = x7393 + x7394;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7396 = x6287 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7397 = x7395 + x7396;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7398 = x6290 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7399 = x7397 + x7398;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7400 = x6293 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7401 = x7399 + x7400;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x7402 = x7311 + x7371;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x7403 = x7341 + x7401;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x7404 = x6864 + x7402;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x7405 = x6865 + x7403;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7406 = x5909 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7407 = x5908 + x7406;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7408 = x5910 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7409 = x7407 + x7408;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7410 = x5911 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7411 = x7409 + x7410;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7412 = x5912 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7413 = x7411 + x7412;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7414 = x5913 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7415 = x7413 + x7414;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7416 = x5914 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7417 = x7415 + x7416;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7418 = x5915 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7419 = x7417 + x7418;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7420 = x5916 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7421 = x7419 + x7420;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7422 = x5917 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7423 = x7421 + x7422;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7424 = x5918 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7425 = x7423 + x7424;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7426 = x5919 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7427 = x7425 + x7426;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7428 = x5920 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7429 = x7427 + x7428;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7430 = x5921 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7431 = x7429 + x7430;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7432 = x5922 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7433 = x7431 + x7432;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7434 = x5923 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7435 = x7433 + x7434;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7436 = x5925 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7437 = x5924 + x7436;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7438 = x5926 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7439 = x7437 + x7438;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7440 = x5927 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7441 = x7439 + x7440;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7442 = x5928 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7443 = x7441 + x7442;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7444 = x5929 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7445 = x7443 + x7444;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7446 = x5930 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7447 = x7445 + x7446;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7448 = x5931 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7449 = x7447 + x7448;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7450 = x5932 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7451 = x7449 + x7450;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7452 = x5933 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7453 = x7451 + x7452;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7454 = x5934 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7455 = x7453 + x7454;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7456 = x5935 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7457 = x7455 + x7456;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7458 = x5936 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7459 = x7457 + x7458;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7460 = x5937 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7461 = x7459 + x7460;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7462 = x5938 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7463 = x7461 + x7462;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x7464 = x5939 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x7465 = x7463 + x7464;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x7466 = x6864 + x7435;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x7467 = x6865 + x7465;
      // loc("zirgen/circuit/recursion/sha.cpp":290:5)
      {
        auto& reg = args[2][58 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7404);
        reg = x7404;
      }
      // loc("zirgen/circuit/recursion/sha.cpp":291:5)
      {
        auto& reg = args[2][92 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7466);
        reg = x7466;
      }
      // loc("zirgen/circuit/recursion/sha.cpp":290:5)
      {
        auto& reg = args[2][59 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7405);
        reg = x7405;
      }
      // loc("zirgen/circuit/recursion/sha.cpp":291:5)
      {
        auto& reg = args[2][93 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7467);
        reg = x7467;
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a_raw[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7468 = args[2][58 * steps + ((cycle - 0) & mask)];
      assert(x7468 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a_raw[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7469 = args[2][59 * steps + ((cycle - 0) & mask)];
      assert(x7469 != Fp::invalid());
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7470 = Fp(x7468.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7470);
          reg = x7470;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7471 = Fp(x7468.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7472 = x7471 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7472);
          reg = x7472;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7473 = Fp(x7468.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7474 = x7473 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7474);
          reg = x7474;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7475 = Fp(x7468.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7476 = x7475 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7476);
          reg = x7476;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7477 = Fp(x7468.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7478 = x7477 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7478);
          reg = x7478;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7479 = Fp(x7468.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7480 = x7479 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7480);
          reg = x7480;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7481 = Fp(x7468.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7482 = x7481 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7482);
          reg = x7482;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7483 = Fp(x7468.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7484 = x7483 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7484);
          reg = x7484;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7485 = Fp(x7468.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7486 = x7485 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7486);
          reg = x7486;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7487 = Fp(x7468.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7488 = x7487 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7488);
          reg = x7488;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7489 = Fp(x7468.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7490 = x7489 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7490);
          reg = x7490;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7491 = Fp(x7468.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7492 = x7491 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][37 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7492);
          reg = x7492;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7493 = Fp(x7468.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7494 = x7493 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][38 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7494);
          reg = x7494;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7495 = Fp(x7468.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7496 = x7495 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][39 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7496);
          reg = x7496;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7497 = Fp(x7468.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7498 = x7497 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][40 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7498);
          reg = x7498;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7499 = Fp(x7468.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7500 = x7499 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][41 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7500);
          reg = x7500;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7501 = args[2][26 * steps + ((cycle - 0) & mask)];
      assert(x7501 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7502 = args[2][27 * steps + ((cycle - 0) & mask)];
      assert(x7502 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7503 = x7502 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7504 = x7501 + x7503;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7505 = args[2][28 * steps + ((cycle - 0) & mask)];
      assert(x7505 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7506 = x7505 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7507 = x7504 + x7506;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7508 = args[2][29 * steps + ((cycle - 0) & mask)];
      assert(x7508 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7509 = x7508 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7510 = x7507 + x7509;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7511 = args[2][30 * steps + ((cycle - 0) & mask)];
      assert(x7511 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7512 = x7511 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7513 = x7510 + x7512;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7514 = args[2][31 * steps + ((cycle - 0) & mask)];
      assert(x7514 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7515 = x7514 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7516 = x7513 + x7515;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7517 = args[2][32 * steps + ((cycle - 0) & mask)];
      assert(x7517 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7518 = x7517 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7519 = x7516 + x7518;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7520 = args[2][33 * steps + ((cycle - 0) & mask)];
      assert(x7520 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7521 = x7520 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7522 = x7519 + x7521;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7523 = args[2][34 * steps + ((cycle - 0) & mask)];
      assert(x7523 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7524 = x7523 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7525 = x7522 + x7524;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7526 = args[2][35 * steps + ((cycle - 0) & mask)];
      assert(x7526 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7527 = x7526 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7528 = x7525 + x7527;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7529 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x7529 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7530 = x7529 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7531 = x7528 + x7530;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7532 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x7532 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7533 = x7532 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7534 = x7531 + x7533;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7535 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x7535 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7536 = x7535 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7537 = x7534 + x7536;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7538 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x7538 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7539 = x7538 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7540 = x7537 + x7539;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7541 = args[2][40 * steps + ((cycle - 0) & mask)];
      assert(x7541 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7542 = x7541 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7543 = x7540 + x7542;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7544 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x7544 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7545 = x7544 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7546 = x7543 + x7545;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x7547 = x7468 - x7546;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x7548 = x7547 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":124:26)
        auto x7549 = Fp(x7548.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][5 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7549);
          reg = x7549;
        }
      }
      // loc("zirgen/circuit/recursion/sha.cpp":127:32)
      auto x7550 = x7469 + x7548;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7551 = Fp(x7550.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][42 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7551);
          reg = x7551;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7552 = Fp(x7550.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7553 = x7552 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][43 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7553);
          reg = x7553;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7554 = Fp(x7550.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7555 = x7554 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][44 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7555);
          reg = x7555;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7556 = Fp(x7550.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7557 = x7556 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][45 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7557);
          reg = x7557;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7558 = Fp(x7550.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7559 = x7558 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][46 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7559);
          reg = x7559;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7560 = Fp(x7550.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7561 = x7560 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][47 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7561);
          reg = x7561;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7562 = Fp(x7550.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7563 = x7562 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][48 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7563);
          reg = x7563;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7564 = Fp(x7550.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7565 = x7564 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][49 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7565);
          reg = x7565;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7566 = Fp(x7550.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7567 = x7566 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][50 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7567);
          reg = x7567;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7568 = Fp(x7550.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7569 = x7568 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][51 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7569);
          reg = x7569;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7570 = Fp(x7550.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7571 = x7570 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][52 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7571);
          reg = x7571;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7572 = Fp(x7550.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7573 = x7572 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][53 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7573);
          reg = x7573;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7574 = Fp(x7550.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7575 = x7574 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][54 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7575);
          reg = x7575;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7576 = Fp(x7550.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7577 = x7576 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][55 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7577);
          reg = x7577;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7578 = Fp(x7550.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7579 = x7578 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][56 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7579);
          reg = x7579;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7580 = Fp(x7550.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7581 = x7580 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][57 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7581);
          reg = x7581;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7582 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x7582 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7583 = args[2][43 * steps + ((cycle - 0) & mask)];
      assert(x7583 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7584 = x7583 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7585 = x7582 + x7584;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7586 = args[2][44 * steps + ((cycle - 0) & mask)];
      assert(x7586 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7587 = x7586 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7588 = x7585 + x7587;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7589 = args[2][45 * steps + ((cycle - 0) & mask)];
      assert(x7589 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7590 = x7589 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7591 = x7588 + x7590;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7592 = args[2][46 * steps + ((cycle - 0) & mask)];
      assert(x7592 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7593 = x7592 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7594 = x7591 + x7593;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7595 = args[2][47 * steps + ((cycle - 0) & mask)];
      assert(x7595 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7596 = x7595 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7597 = x7594 + x7596;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7598 = args[2][48 * steps + ((cycle - 0) & mask)];
      assert(x7598 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7599 = x7598 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7600 = x7597 + x7599;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7601 = args[2][49 * steps + ((cycle - 0) & mask)];
      assert(x7601 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7602 = x7601 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7603 = x7600 + x7602;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7604 = args[2][50 * steps + ((cycle - 0) & mask)];
      assert(x7604 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7605 = x7604 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7606 = x7603 + x7605;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7607 = args[2][51 * steps + ((cycle - 0) & mask)];
      assert(x7607 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7608 = x7607 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7609 = x7606 + x7608;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7610 = args[2][52 * steps + ((cycle - 0) & mask)];
      assert(x7610 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7611 = x7610 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7612 = x7609 + x7611;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7613 = args[2][53 * steps + ((cycle - 0) & mask)];
      assert(x7613 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7614 = x7613 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7615 = x7612 + x7614;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7616 = args[2][54 * steps + ((cycle - 0) & mask)];
      assert(x7616 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7617 = x7616 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7618 = x7615 + x7617;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7619 = args[2][55 * steps + ((cycle - 0) & mask)];
      assert(x7619 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7620 = x7619 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7621 = x7618 + x7620;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7622 = args[2][56 * steps + ((cycle - 0) & mask)];
      assert(x7622 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7623 = x7622 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7624 = x7621 + x7623;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7625 = args[2][57 * steps + ((cycle - 0) & mask)];
      assert(x7625 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7626 = x7625 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7627 = x7624 + x7626;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x7628 = x7550 - x7627;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x7629 = x7628 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":128:27)
        auto x7630 = Fp(x7629.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7630);
          reg = x7630;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e_raw[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7631 = args[2][92 * steps + ((cycle - 0) & mask)];
      assert(x7631 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e_raw[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7632 = args[2][93 * steps + ((cycle - 0) & mask)];
      assert(x7632 != Fp::invalid());
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7633 = Fp(x7631.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][60 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7633);
          reg = x7633;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7634 = Fp(x7631.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7635 = x7634 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][61 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7635);
          reg = x7635;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7636 = Fp(x7631.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7637 = x7636 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][62 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7637);
          reg = x7637;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7638 = Fp(x7631.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7639 = x7638 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][63 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7639);
          reg = x7639;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7640 = Fp(x7631.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7641 = x7640 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][64 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7641);
          reg = x7641;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7642 = Fp(x7631.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7643 = x7642 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][65 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7643);
          reg = x7643;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7644 = Fp(x7631.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7645 = x7644 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][66 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7645);
          reg = x7645;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7646 = Fp(x7631.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7647 = x7646 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][67 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7647);
          reg = x7647;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7648 = Fp(x7631.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7649 = x7648 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][68 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7649);
          reg = x7649;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7650 = Fp(x7631.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7651 = x7650 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][69 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7651);
          reg = x7651;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7652 = Fp(x7631.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7653 = x7652 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7653);
          reg = x7653;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7654 = Fp(x7631.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7655 = x7654 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7655);
          reg = x7655;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7656 = Fp(x7631.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7657 = x7656 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][72 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7657);
          reg = x7657;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7658 = Fp(x7631.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7659 = x7658 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7659);
          reg = x7659;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7660 = Fp(x7631.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7661 = x7660 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7661);
          reg = x7661;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7662 = Fp(x7631.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7663 = x7662 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7663);
          reg = x7663;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7664 = args[2][60 * steps + ((cycle - 0) & mask)];
      assert(x7664 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7665 = args[2][61 * steps + ((cycle - 0) & mask)];
      assert(x7665 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7666 = x7665 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7667 = x7664 + x7666;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7668 = args[2][62 * steps + ((cycle - 0) & mask)];
      assert(x7668 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7669 = x7668 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7670 = x7667 + x7669;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7671 = args[2][63 * steps + ((cycle - 0) & mask)];
      assert(x7671 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7672 = x7671 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7673 = x7670 + x7672;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7674 = args[2][64 * steps + ((cycle - 0) & mask)];
      assert(x7674 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7675 = x7674 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7676 = x7673 + x7675;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7677 = args[2][65 * steps + ((cycle - 0) & mask)];
      assert(x7677 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7678 = x7677 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7679 = x7676 + x7678;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7680 = args[2][66 * steps + ((cycle - 0) & mask)];
      assert(x7680 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7681 = x7680 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7682 = x7679 + x7681;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7683 = args[2][67 * steps + ((cycle - 0) & mask)];
      assert(x7683 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7684 = x7683 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7685 = x7682 + x7684;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7686 = args[2][68 * steps + ((cycle - 0) & mask)];
      assert(x7686 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7687 = x7686 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7688 = x7685 + x7687;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7689 = args[2][69 * steps + ((cycle - 0) & mask)];
      assert(x7689 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7690 = x7689 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7691 = x7688 + x7690;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7692 = args[2][70 * steps + ((cycle - 0) & mask)];
      assert(x7692 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7693 = x7692 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7694 = x7691 + x7693;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7695 = args[2][71 * steps + ((cycle - 0) & mask)];
      assert(x7695 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7696 = x7695 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7697 = x7694 + x7696;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7698 = args[2][72 * steps + ((cycle - 0) & mask)];
      assert(x7698 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7699 = x7698 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7700 = x7697 + x7699;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7701 = args[2][73 * steps + ((cycle - 0) & mask)];
      assert(x7701 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7702 = x7701 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7703 = x7700 + x7702;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7704 = args[2][74 * steps + ((cycle - 0) & mask)];
      assert(x7704 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7705 = x7704 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7706 = x7703 + x7705;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7707 = args[2][75 * steps + ((cycle - 0) & mask)];
      assert(x7707 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7708 = x7707 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7709 = x7706 + x7708;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x7710 = x7631 - x7709;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x7711 = x7710 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":124:26)
        auto x7712 = Fp(x7711.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7712);
          reg = x7712;
        }
      }
      // loc("zirgen/circuit/recursion/sha.cpp":127:32)
      auto x7713 = x7632 + x7711;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7714 = Fp(x7713.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7714);
          reg = x7714;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7715 = Fp(x7713.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7716 = x7715 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7716);
          reg = x7716;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7717 = Fp(x7713.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7718 = x7717 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7718);
          reg = x7718;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7719 = Fp(x7713.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7720 = x7719 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7720);
          reg = x7720;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7721 = Fp(x7713.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7722 = x7721 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7722);
          reg = x7722;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7723 = Fp(x7713.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7724 = x7723 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7724);
          reg = x7724;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7725 = Fp(x7713.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7726 = x7725 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7726);
          reg = x7726;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7727 = Fp(x7713.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7728 = x7727 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7728);
          reg = x7728;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7729 = Fp(x7713.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7730 = x7729 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7730);
          reg = x7730;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7731 = Fp(x7713.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7732 = x7731 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7732);
          reg = x7732;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7733 = Fp(x7713.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7734 = x7733 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7734);
          reg = x7734;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7735 = Fp(x7713.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7736 = x7735 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7736);
          reg = x7736;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7737 = Fp(x7713.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7738 = x7737 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7738);
          reg = x7738;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7739 = Fp(x7713.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7740 = x7739 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][89 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7740);
          reg = x7740;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7741 = Fp(x7713.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7742 = x7741 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][90 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7742);
          reg = x7742;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x7743 = Fp(x7713.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x7744 = x7743 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][91 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7744);
          reg = x7744;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7745 = args[2][76 * steps + ((cycle - 0) & mask)];
      assert(x7745 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7746 = args[2][77 * steps + ((cycle - 0) & mask)];
      assert(x7746 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7747 = x7746 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7748 = x7745 + x7747;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7749 = args[2][78 * steps + ((cycle - 0) & mask)];
      assert(x7749 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7750 = x7749 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7751 = x7748 + x7750;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7752 = args[2][79 * steps + ((cycle - 0) & mask)];
      assert(x7752 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7753 = x7752 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7754 = x7751 + x7753;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7755 = args[2][80 * steps + ((cycle - 0) & mask)];
      assert(x7755 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7756 = x7755 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7757 = x7754 + x7756;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7758 = args[2][81 * steps + ((cycle - 0) & mask)];
      assert(x7758 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7759 = x7758 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7760 = x7757 + x7759;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7761 = args[2][82 * steps + ((cycle - 0) & mask)];
      assert(x7761 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7762 = x7761 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7763 = x7760 + x7762;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7764 = args[2][83 * steps + ((cycle - 0) & mask)];
      assert(x7764 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7765 = x7764 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7766 = x7763 + x7765;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7767 = args[2][84 * steps + ((cycle - 0) & mask)];
      assert(x7767 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7768 = x7767 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7769 = x7766 + x7768;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7770 = args[2][85 * steps + ((cycle - 0) & mask)];
      assert(x7770 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7771 = x7770 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7772 = x7769 + x7771;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7773 = args[2][86 * steps + ((cycle - 0) & mask)];
      assert(x7773 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7774 = x7773 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7775 = x7772 + x7774;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7776 = args[2][87 * steps + ((cycle - 0) & mask)];
      assert(x7776 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7777 = x7776 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7778 = x7775 + x7777;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7779 = args[2][88 * steps + ((cycle - 0) & mask)];
      assert(x7779 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7780 = x7779 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7781 = x7778 + x7780;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7782 = args[2][89 * steps + ((cycle - 0) & mask)];
      assert(x7782 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7783 = x7782 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7784 = x7781 + x7783;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7785 = args[2][90 * steps + ((cycle - 0) & mask)];
      assert(x7785 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7786 = x7785 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7787 = x7784 + x7786;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7788 = args[2][91 * steps + ((cycle - 0) & mask)];
      assert(x7788 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x7789 = x7788 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x7790 = x7787 + x7789;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x7791 = x7713 - x7790;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x7792 = x7791 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":128:27)
        auto x7793 = Fp(x7792.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7793);
          reg = x7793;
        }
      }
    }
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/opcode(OneHot)/sha_mix(Reg)"("./zirgen/components/mux.h":49:25))
    auto x7794 = args[0][15 * steps + ((cycle - 0) & mask)];
    assert(x7794 != Fp::invalid());
    if (x7794 != 0) {
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][12 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][13 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][14 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7795 = args[0][18 * steps + ((cycle - 0) & mask)];
      assert(x7795 != Fp::invalid());
      {
        host_args.at(0) = x7795;
        host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
        auto x7796 = host_outs.at(0);
        auto x7797 = host_outs.at(1);
        auto x7798 = host_outs.at(2);
        auto x7799 = host_outs.at(3);
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7796);
          reg = x7796;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7797);
          reg = x7797;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7798);
          reg = x7798;
        }
        // loc("zirgen/circuit/recursion/wom.cpp":49:5)
        {
          auto& reg = args[2][20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7799);
          reg = x7799;
        }
      }
      // loc("zirgen/circuit/recursion/wom.cpp":80:3)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7795);
        reg = x7795;
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7800 = args[2][94 * steps + ((cycle - 2) & mask)];
      assert(x7800 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7801 = args[2][95 * steps + ((cycle - 2) & mask)];
      assert(x7801 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7802 = args[2][96 * steps + ((cycle - 2) & mask)];
      assert(x7802 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7803 = args[2][97 * steps + ((cycle - 2) & mask)];
      assert(x7803 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7804 = args[2][98 * steps + ((cycle - 2) & mask)];
      assert(x7804 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7805 = args[2][99 * steps + ((cycle - 2) & mask)];
      assert(x7805 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7806 = args[2][100 * steps + ((cycle - 2) & mask)];
      assert(x7806 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7807 = args[2][101 * steps + ((cycle - 2) & mask)];
      assert(x7807 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7808 = args[2][102 * steps + ((cycle - 2) & mask)];
      assert(x7808 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7809 = args[2][103 * steps + ((cycle - 2) & mask)];
      assert(x7809 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7810 = args[2][104 * steps + ((cycle - 2) & mask)];
      assert(x7810 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7811 = args[2][105 * steps + ((cycle - 2) & mask)];
      assert(x7811 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7812 = args[2][106 * steps + ((cycle - 2) & mask)];
      assert(x7812 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7813 = args[2][107 * steps + ((cycle - 2) & mask)];
      assert(x7813 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7814 = args[2][108 * steps + ((cycle - 2) & mask)];
      assert(x7814 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7815 = args[2][109 * steps + ((cycle - 2) & mask)];
      assert(x7815 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7816 = args[2][110 * steps + ((cycle - 2) & mask)];
      assert(x7816 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7817 = args[2][111 * steps + ((cycle - 2) & mask)];
      assert(x7817 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7818 = args[2][112 * steps + ((cycle - 2) & mask)];
      assert(x7818 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7819 = args[2][113 * steps + ((cycle - 2) & mask)];
      assert(x7819 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7820 = args[2][114 * steps + ((cycle - 2) & mask)];
      assert(x7820 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7821 = args[2][115 * steps + ((cycle - 2) & mask)];
      assert(x7821 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7822 = args[2][116 * steps + ((cycle - 2) & mask)];
      assert(x7822 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7823 = args[2][117 * steps + ((cycle - 2) & mask)];
      assert(x7823 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7824 = args[2][118 * steps + ((cycle - 2) & mask)];
      assert(x7824 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7825 = args[2][119 * steps + ((cycle - 2) & mask)];
      assert(x7825 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7826 = args[2][120 * steps + ((cycle - 2) & mask)];
      assert(x7826 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7827 = args[2][121 * steps + ((cycle - 2) & mask)];
      assert(x7827 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7828 = args[2][122 * steps + ((cycle - 2) & mask)];
      assert(x7828 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7829 = args[2][123 * steps + ((cycle - 2) & mask)];
      assert(x7829 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7830 = args[2][124 * steps + ((cycle - 2) & mask)];
      assert(x7830 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7831 = args[2][125 * steps + ((cycle - 2) & mask)];
      assert(x7831 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7832 = args[2][94 * steps + ((cycle - 7) & mask)];
      assert(x7832 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7833 = args[2][95 * steps + ((cycle - 7) & mask)];
      assert(x7833 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7834 = args[2][96 * steps + ((cycle - 7) & mask)];
      assert(x7834 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7835 = args[2][97 * steps + ((cycle - 7) & mask)];
      assert(x7835 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7836 = args[2][98 * steps + ((cycle - 7) & mask)];
      assert(x7836 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7837 = args[2][99 * steps + ((cycle - 7) & mask)];
      assert(x7837 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7838 = args[2][100 * steps + ((cycle - 7) & mask)];
      assert(x7838 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7839 = args[2][101 * steps + ((cycle - 7) & mask)];
      assert(x7839 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7840 = args[2][102 * steps + ((cycle - 7) & mask)];
      assert(x7840 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7841 = args[2][103 * steps + ((cycle - 7) & mask)];
      assert(x7841 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7842 = args[2][104 * steps + ((cycle - 7) & mask)];
      assert(x7842 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7843 = args[2][105 * steps + ((cycle - 7) & mask)];
      assert(x7843 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7844 = args[2][106 * steps + ((cycle - 7) & mask)];
      assert(x7844 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7845 = args[2][107 * steps + ((cycle - 7) & mask)];
      assert(x7845 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7846 = args[2][108 * steps + ((cycle - 7) & mask)];
      assert(x7846 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7847 = args[2][109 * steps + ((cycle - 7) & mask)];
      assert(x7847 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7848 = args[2][110 * steps + ((cycle - 7) & mask)];
      assert(x7848 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7849 = args[2][111 * steps + ((cycle - 7) & mask)];
      assert(x7849 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7850 = args[2][112 * steps + ((cycle - 7) & mask)];
      assert(x7850 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7851 = args[2][113 * steps + ((cycle - 7) & mask)];
      assert(x7851 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7852 = args[2][114 * steps + ((cycle - 7) & mask)];
      assert(x7852 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7853 = args[2][115 * steps + ((cycle - 7) & mask)];
      assert(x7853 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7854 = args[2][116 * steps + ((cycle - 7) & mask)];
      assert(x7854 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7855 = args[2][117 * steps + ((cycle - 7) & mask)];
      assert(x7855 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7856 = args[2][118 * steps + ((cycle - 7) & mask)];
      assert(x7856 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7857 = args[2][119 * steps + ((cycle - 7) & mask)];
      assert(x7857 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7858 = args[2][120 * steps + ((cycle - 7) & mask)];
      assert(x7858 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7859 = args[2][121 * steps + ((cycle - 7) & mask)];
      assert(x7859 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7860 = args[2][122 * steps + ((cycle - 7) & mask)];
      assert(x7860 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7861 = args[2][123 * steps + ((cycle - 7) & mask)];
      assert(x7861 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7862 = args[2][124 * steps + ((cycle - 7) & mask)];
      assert(x7862 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7863 = args[2][125 * steps + ((cycle - 7) & mask)];
      assert(x7863 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7864 = args[2][94 * steps + ((cycle - 15) & mask)];
      assert(x7864 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7865 = args[2][95 * steps + ((cycle - 15) & mask)];
      assert(x7865 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7866 = args[2][96 * steps + ((cycle - 15) & mask)];
      assert(x7866 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7867 = args[2][97 * steps + ((cycle - 15) & mask)];
      assert(x7867 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7868 = args[2][98 * steps + ((cycle - 15) & mask)];
      assert(x7868 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7869 = args[2][99 * steps + ((cycle - 15) & mask)];
      assert(x7869 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7870 = args[2][100 * steps + ((cycle - 15) & mask)];
      assert(x7870 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7871 = args[2][101 * steps + ((cycle - 15) & mask)];
      assert(x7871 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7872 = args[2][102 * steps + ((cycle - 15) & mask)];
      assert(x7872 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7873 = args[2][103 * steps + ((cycle - 15) & mask)];
      assert(x7873 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7874 = args[2][104 * steps + ((cycle - 15) & mask)];
      assert(x7874 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7875 = args[2][105 * steps + ((cycle - 15) & mask)];
      assert(x7875 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7876 = args[2][106 * steps + ((cycle - 15) & mask)];
      assert(x7876 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7877 = args[2][107 * steps + ((cycle - 15) & mask)];
      assert(x7877 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7878 = args[2][108 * steps + ((cycle - 15) & mask)];
      assert(x7878 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7879 = args[2][109 * steps + ((cycle - 15) & mask)];
      assert(x7879 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7880 = args[2][110 * steps + ((cycle - 15) & mask)];
      assert(x7880 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7881 = args[2][111 * steps + ((cycle - 15) & mask)];
      assert(x7881 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7882 = args[2][112 * steps + ((cycle - 15) & mask)];
      assert(x7882 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7883 = args[2][113 * steps + ((cycle - 15) & mask)];
      assert(x7883 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7884 = args[2][114 * steps + ((cycle - 15) & mask)];
      assert(x7884 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7885 = args[2][115 * steps + ((cycle - 15) & mask)];
      assert(x7885 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7886 = args[2][116 * steps + ((cycle - 15) & mask)];
      assert(x7886 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7887 = args[2][117 * steps + ((cycle - 15) & mask)];
      assert(x7887 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7888 = args[2][118 * steps + ((cycle - 15) & mask)];
      assert(x7888 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7889 = args[2][119 * steps + ((cycle - 15) & mask)];
      assert(x7889 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7890 = args[2][120 * steps + ((cycle - 15) & mask)];
      assert(x7890 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7891 = args[2][121 * steps + ((cycle - 15) & mask)];
      assert(x7891 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7892 = args[2][122 * steps + ((cycle - 15) & mask)];
      assert(x7892 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7893 = args[2][123 * steps + ((cycle - 15) & mask)];
      assert(x7893 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7894 = args[2][124 * steps + ((cycle - 15) & mask)];
      assert(x7894 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7895 = args[2][125 * steps + ((cycle - 15) & mask)];
      assert(x7895 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7896 = args[2][94 * steps + ((cycle - 16) & mask)];
      assert(x7896 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7897 = args[2][95 * steps + ((cycle - 16) & mask)];
      assert(x7897 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7898 = args[2][96 * steps + ((cycle - 16) & mask)];
      assert(x7898 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7899 = args[2][97 * steps + ((cycle - 16) & mask)];
      assert(x7899 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7900 = args[2][98 * steps + ((cycle - 16) & mask)];
      assert(x7900 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7901 = args[2][99 * steps + ((cycle - 16) & mask)];
      assert(x7901 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7902 = args[2][100 * steps + ((cycle - 16) & mask)];
      assert(x7902 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7903 = args[2][101 * steps + ((cycle - 16) & mask)];
      assert(x7903 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7904 = args[2][102 * steps + ((cycle - 16) & mask)];
      assert(x7904 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7905 = args[2][103 * steps + ((cycle - 16) & mask)];
      assert(x7905 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7906 = args[2][104 * steps + ((cycle - 16) & mask)];
      assert(x7906 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7907 = args[2][105 * steps + ((cycle - 16) & mask)];
      assert(x7907 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7908 = args[2][106 * steps + ((cycle - 16) & mask)];
      assert(x7908 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7909 = args[2][107 * steps + ((cycle - 16) & mask)];
      assert(x7909 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7910 = args[2][108 * steps + ((cycle - 16) & mask)];
      assert(x7910 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7911 = args[2][109 * steps + ((cycle - 16) & mask)];
      assert(x7911 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7912 = args[2][110 * steps + ((cycle - 16) & mask)];
      assert(x7912 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7913 = args[2][111 * steps + ((cycle - 16) & mask)];
      assert(x7913 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7914 = args[2][112 * steps + ((cycle - 16) & mask)];
      assert(x7914 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7915 = args[2][113 * steps + ((cycle - 16) & mask)];
      assert(x7915 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7916 = args[2][114 * steps + ((cycle - 16) & mask)];
      assert(x7916 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7917 = args[2][115 * steps + ((cycle - 16) & mask)];
      assert(x7917 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7918 = args[2][116 * steps + ((cycle - 16) & mask)];
      assert(x7918 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7919 = args[2][117 * steps + ((cycle - 16) & mask)];
      assert(x7919 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7920 = args[2][118 * steps + ((cycle - 16) & mask)];
      assert(x7920 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7921 = args[2][119 * steps + ((cycle - 16) & mask)];
      assert(x7921 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7922 = args[2][120 * steps + ((cycle - 16) & mask)];
      assert(x7922 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7923 = args[2][121 * steps + ((cycle - 16) & mask)];
      assert(x7923 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7924 = args[2][122 * steps + ((cycle - 16) & mask)];
      assert(x7924 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7925 = args[2][123 * steps + ((cycle - 16) & mask)];
      assert(x7925 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7926 = args[2][124 * steps + ((cycle - 16) & mask)];
      assert(x7926 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7927 = args[2][125 * steps + ((cycle - 16) & mask)];
      assert(x7927 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7928 = x7882 + x7867;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7929 = x7882 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7930 = x7929 * x7867;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7931 = x7928 - x7930;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7932 = x7883 + x7868;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7933 = x7883 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7934 = x7933 * x7868;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7935 = x7932 - x7934;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7936 = x7884 + x7869;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7937 = x7884 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7938 = x7937 * x7869;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7939 = x7936 - x7938;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7940 = x7885 + x7870;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7941 = x7885 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7942 = x7941 * x7870;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7943 = x7940 - x7942;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7944 = x7886 + x7871;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7945 = x7886 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7946 = x7945 * x7871;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7947 = x7944 - x7946;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7948 = x7887 + x7872;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7949 = x7887 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7950 = x7949 * x7872;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7951 = x7948 - x7950;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7952 = x7888 + x7873;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7953 = x7888 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7954 = x7953 * x7873;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7955 = x7952 - x7954;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7956 = x7889 + x7874;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7957 = x7889 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7958 = x7957 * x7874;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7959 = x7956 - x7958;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7960 = x7890 + x7875;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7961 = x7890 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7962 = x7961 * x7875;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7963 = x7960 - x7962;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7964 = x7891 + x7876;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7965 = x7891 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7966 = x7965 * x7876;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7967 = x7964 - x7966;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7968 = x7892 + x7877;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7969 = x7892 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7970 = x7969 * x7877;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7971 = x7968 - x7970;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7972 = x7893 + x7878;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7973 = x7893 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7974 = x7973 * x7878;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7975 = x7972 - x7974;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7976 = x7894 + x7879;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7977 = x7894 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7978 = x7977 * x7879;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7979 = x7976 - x7978;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7980 = x7895 + x7880;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7981 = x7895 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7982 = x7981 * x7880;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7983 = x7980 - x7982;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7984 = x7864 + x7881;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7985 = x7864 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7986 = x7985 * x7881;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7987 = x7984 - x7986;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7988 = x7865 + x7882;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7989 = x7865 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7990 = x7989 * x7882;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7991 = x7988 - x7990;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7992 = x7866 + x7883;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7993 = x7866 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7994 = x7993 * x7883;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7995 = x7992 - x7994;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7996 = x7867 + x7884;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7997 = x7867 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x7998 = x7997 * x7884;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x7999 = x7996 - x7998;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8000 = x7868 + x7885;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8001 = x7868 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8002 = x8001 * x7885;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8003 = x8000 - x8002;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8004 = x7869 + x7886;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8005 = x7869 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8006 = x8005 * x7886;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8007 = x8004 - x8006;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8008 = x7870 + x7887;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8009 = x7870 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8010 = x8009 * x7887;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8011 = x8008 - x8010;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8012 = x7871 + x7888;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8013 = x7871 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8014 = x8013 * x7888;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8015 = x8012 - x8014;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8016 = x7872 + x7889;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8017 = x7872 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8018 = x8017 * x7889;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8019 = x8016 - x8018;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8020 = x7873 + x7890;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8021 = x7873 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8022 = x8021 * x7890;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8023 = x8020 - x8022;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8024 = x7874 + x7891;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8025 = x7874 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8026 = x8025 * x7891;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8027 = x8024 - x8026;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8028 = x7875 + x7892;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8029 = x7875 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8030 = x8029 * x7892;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8031 = x8028 - x8030;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8032 = x7876 + x7893;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8033 = x7876 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8034 = x8033 * x7893;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8035 = x8032 - x8034;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8036 = x7877 + x7894;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8037 = x7877 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8038 = x8037 * x7894;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8039 = x8036 - x8038;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8040 = x7878 + x7895;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8041 = x7878 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8042 = x8041 * x7895;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8043 = x8040 - x8042;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8044 = x7871 + x7931;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8045 = x8013 * x7931;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8046 = x8044 - x8045;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8047 = x7872 + x7935;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8048 = x8017 * x7935;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8049 = x8047 - x8048;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8050 = x7873 + x7939;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8051 = x8021 * x7939;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8052 = x8050 - x8051;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8053 = x7874 + x7943;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8054 = x8025 * x7943;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8055 = x8053 - x8054;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8056 = x7875 + x7947;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8057 = x8029 * x7947;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8058 = x8056 - x8057;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8059 = x7876 + x7951;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8060 = x8033 * x7951;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8061 = x8059 - x8060;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8062 = x7877 + x7955;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8063 = x8037 * x7955;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8064 = x8062 - x8063;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8065 = x7878 + x7959;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8066 = x8041 * x7959;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8067 = x8065 - x8066;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8068 = x7879 + x7963;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8069 = x7879 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8070 = x8069 * x7963;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8071 = x8068 - x8070;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8072 = x7880 + x7967;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8073 = x7880 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8074 = x8073 * x7967;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8075 = x8072 - x8074;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8076 = x7881 + x7971;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8077 = x7881 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8078 = x8077 * x7971;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8079 = x8076 - x8078;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8080 = x7882 + x7975;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8081 = x7929 * x7975;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8082 = x8080 - x8081;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8083 = x7883 + x7979;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8084 = x7933 * x7979;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8085 = x8083 - x8084;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8086 = x7884 + x7983;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8087 = x7937 * x7983;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8088 = x8086 - x8087;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8089 = x7885 + x7987;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8090 = x7941 * x7987;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8091 = x8089 - x8090;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8092 = x7886 + x7991;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8093 = x7945 * x7991;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8094 = x8092 - x8093;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8095 = x7887 + x7995;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8096 = x7949 * x7995;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8097 = x8095 - x8096;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8098 = x7888 + x7999;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8099 = x7953 * x7999;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8100 = x8098 - x8099;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8101 = x7889 + x8003;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8102 = x7957 * x8003;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8103 = x8101 - x8102;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8104 = x7890 + x8007;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8105 = x7961 * x8007;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8106 = x8104 - x8105;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8107 = x7891 + x8011;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8108 = x7965 * x8011;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8109 = x8107 - x8108;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8110 = x7892 + x8015;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8111 = x7969 * x8015;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8112 = x8110 - x8111;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8113 = x7893 + x8019;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8114 = x7973 * x8019;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8115 = x8113 - x8114;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8116 = x7894 + x8023;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8117 = x7977 * x8023;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8118 = x8116 - x8117;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8119 = x7895 + x8027;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8120 = x7981 * x8027;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8121 = x8119 - x8120;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8122 = x7864 + x8031;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8123 = x7985 * x8031;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8124 = x8122 - x8123;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8125 = x7865 + x8035;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8126 = x7989 * x8035;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8127 = x8125 - x8126;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8128 = x7866 + x8039;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8129 = x7993 * x8039;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8130 = x8128 - x8129;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8131 = x7867 + x8043;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8132 = x7997 * x8043;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8133 = x8131 - x8132;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8134 = x7868 + x7879;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8135 = x8001 * x7879;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8136 = x8134 - x8135;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8137 = x7869 + x7880;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8138 = x8005 * x7880;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8139 = x8137 - x8138;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8140 = x7870 + x7881;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8141 = x8009 * x7881;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8142 = x8140 - x8141;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8143 = x7819 + x7810;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8144 = x7819 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8145 = x8144 * x7810;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8146 = x8143 - x8145;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8147 = x7820 + x7811;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8148 = x7820 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8149 = x8148 * x7811;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8150 = x8147 - x8149;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8151 = x7821 + x7812;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8152 = x7821 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8153 = x8152 * x7812;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8154 = x8151 - x8153;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8155 = x7822 + x7813;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8156 = x7822 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8157 = x8156 * x7813;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8158 = x8155 - x8157;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8159 = x7823 + x7814;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8160 = x7823 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8161 = x8160 * x7814;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8162 = x8159 - x8161;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8163 = x7824 + x7815;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8164 = x7824 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8165 = x8164 * x7815;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8166 = x8163 - x8165;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8167 = x7825 + x7816;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8168 = x7825 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8169 = x8168 * x7816;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8170 = x8167 - x8169;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8171 = x7826 + x7817;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8172 = x7826 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8173 = x8172 * x7817;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8174 = x8171 - x8173;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8175 = x7827 + x7818;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8176 = x7827 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8177 = x8176 * x7818;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8178 = x8175 - x8177;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8179 = x7828 + x7819;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8180 = x7828 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8181 = x8180 * x7819;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8182 = x8179 - x8181;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8183 = x7829 + x7820;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8184 = x7829 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8185 = x8184 * x7820;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8186 = x8183 - x8185;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8187 = x7830 + x7821;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8188 = x7830 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8189 = x8188 * x7821;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8190 = x8187 - x8189;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8191 = x7831 + x7822;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8192 = x7831 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8193 = x8192 * x7822;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8194 = x8191 - x8193;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8195 = x7800 + x7823;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8196 = x7800 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8197 = x8196 * x7823;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8198 = x8195 - x8197;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8199 = x7801 + x7824;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8200 = x7801 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8201 = x8200 * x7824;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8202 = x8199 - x8201;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8203 = x7802 + x7825;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8204 = x7802 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8205 = x8204 * x7825;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8206 = x8203 - x8205;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8207 = x7803 + x7826;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8208 = x7803 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8209 = x8208 * x7826;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8210 = x8207 - x8209;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8211 = x7804 + x7827;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8212 = x7804 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8213 = x8212 * x7827;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8214 = x8211 - x8213;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8215 = x7805 + x7828;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8216 = x7805 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8217 = x8216 * x7828;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8218 = x8215 - x8217;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8219 = x7806 + x7829;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8220 = x7806 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8221 = x8220 * x7829;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8222 = x8219 - x8221;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8223 = x7807 + x7830;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8224 = x7807 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8225 = x8224 * x7830;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8226 = x8223 - x8225;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8227 = x7808 + x7831;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8228 = x7808 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8229 = x8228 * x7831;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8230 = x8227 - x8229;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8231 = x7817 + x8146;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8232 = x7817 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8233 = x8232 * x8146;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8234 = x8231 - x8233;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8235 = x7818 + x8150;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8236 = x7818 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8237 = x8236 * x8150;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8238 = x8235 - x8237;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8239 = x7819 + x8154;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8240 = x8144 * x8154;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8241 = x8239 - x8240;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8242 = x7820 + x8158;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8243 = x8148 * x8158;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8244 = x8242 - x8243;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8245 = x7821 + x8162;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8246 = x8152 * x8162;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8247 = x8245 - x8246;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8248 = x7822 + x8166;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8249 = x8156 * x8166;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8250 = x8248 - x8249;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8251 = x7823 + x8170;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8252 = x8160 * x8170;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8253 = x8251 - x8252;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8254 = x7824 + x8174;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8255 = x8164 * x8174;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8256 = x8254 - x8255;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8257 = x7825 + x8178;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8258 = x8168 * x8178;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8259 = x8257 - x8258;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8260 = x7826 + x8182;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8261 = x8172 * x8182;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8262 = x8260 - x8261;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8263 = x7827 + x8186;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8264 = x8176 * x8186;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8265 = x8263 - x8264;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8266 = x7828 + x8190;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8267 = x8180 * x8190;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8268 = x8266 - x8267;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8269 = x7829 + x8194;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8270 = x8184 * x8194;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8271 = x8269 - x8270;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8272 = x7830 + x8198;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8273 = x8188 * x8198;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8274 = x8272 - x8273;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8275 = x7831 + x8202;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8276 = x8192 * x8202;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8277 = x8275 - x8276;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8278 = x7800 + x8206;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8279 = x8196 * x8206;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8280 = x8278 - x8279;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8281 = x7801 + x8210;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8282 = x8200 * x8210;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8283 = x8281 - x8282;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8284 = x7802 + x8214;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8285 = x8204 * x8214;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8286 = x8284 - x8285;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8287 = x7803 + x8218;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8288 = x8208 * x8218;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8289 = x8287 - x8288;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8290 = x7804 + x8222;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8291 = x8212 * x8222;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8292 = x8290 - x8291;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8293 = x7805 + x8226;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8294 = x8216 * x8226;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8295 = x8293 - x8294;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8296 = x7806 + x8230;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8297 = x8220 * x8230;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8298 = x8296 - x8297;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8299 = x7807 + x7809;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8300 = x8224 * x7809;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8301 = x8299 - x8300;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8302 = x7808 + x7810;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8303 = x8228 * x7810;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8304 = x8302 - x8303;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8305 = x7809 + x7811;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8306 = x7809 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8307 = x8306 * x7811;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8308 = x8305 - x8307;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8309 = x7810 + x7812;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8310 = x7810 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8311 = x8310 * x7812;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8312 = x8309 - x8311;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8313 = x7811 + x7813;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8314 = x7811 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8315 = x8314 * x7813;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8316 = x8313 - x8315;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8317 = x7812 + x7814;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8318 = x7812 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8319 = x8318 * x7814;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8320 = x8317 - x8319;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8321 = x7813 + x7815;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8322 = x7813 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8323 = x8322 * x7815;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8324 = x8321 - x8323;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8325 = x7814 + x7816;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8326 = x7814 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8327 = x8326 * x7816;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8328 = x8325 - x8327;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8329 = x7815 + x7817;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8330 = x7815 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8331 = x8330 * x7817;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8332 = x8329 - x8331;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8333 = x7816 + x7818;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8334 = x7816 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x8335 = x8334 * x7818;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x8336 = x8333 - x8335;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8337 = x7897 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8338 = x7896 + x8337;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8339 = x7898 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8340 = x8338 + x8339;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8341 = x7899 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8342 = x8340 + x8341;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8343 = x7900 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8344 = x8342 + x8343;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8345 = x7901 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8346 = x8344 + x8345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8347 = x7902 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8348 = x8346 + x8347;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8349 = x7903 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8350 = x8348 + x8349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8351 = x7904 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8352 = x8350 + x8351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8353 = x7905 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8354 = x8352 + x8353;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8355 = x7906 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8356 = x8354 + x8355;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8357 = x7907 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8358 = x8356 + x8357;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8359 = x7908 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8360 = x8358 + x8359;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8361 = x7909 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8362 = x8360 + x8361;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8363 = x7910 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8364 = x8362 + x8363;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8365 = x7911 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8366 = x8364 + x8365;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8367 = x7913 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8368 = x7912 + x8367;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8369 = x7914 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8370 = x8368 + x8369;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8371 = x7915 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8372 = x8370 + x8371;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8373 = x7916 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8374 = x8372 + x8373;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8375 = x7917 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8376 = x8374 + x8375;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8377 = x7918 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8378 = x8376 + x8377;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8379 = x7919 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8380 = x8378 + x8379;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8381 = x7920 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8382 = x8380 + x8381;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8383 = x7921 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8384 = x8382 + x8383;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8385 = x7922 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8386 = x8384 + x8385;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8387 = x7923 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8388 = x8386 + x8387;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8389 = x7924 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8390 = x8388 + x8389;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8391 = x7925 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8392 = x8390 + x8391;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8393 = x7926 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8394 = x8392 + x8393;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8395 = x7927 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8396 = x8394 + x8395;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8397 = x8049 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8398 = x8046 + x8397;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8399 = x8052 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8400 = x8398 + x8399;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8401 = x8055 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8402 = x8400 + x8401;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8403 = x8058 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8404 = x8402 + x8403;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8405 = x8061 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8406 = x8404 + x8405;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8407 = x8064 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8408 = x8406 + x8407;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8409 = x8067 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8410 = x8408 + x8409;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8411 = x8071 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8412 = x8410 + x8411;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8413 = x8075 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8414 = x8412 + x8413;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8415 = x8079 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8416 = x8414 + x8415;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8417 = x8082 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8418 = x8416 + x8417;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8419 = x8085 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8420 = x8418 + x8419;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8421 = x8088 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8422 = x8420 + x8421;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8423 = x8091 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8424 = x8422 + x8423;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8425 = x8094 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8426 = x8424 + x8425;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8427 = x8100 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8428 = x8097 + x8427;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8429 = x8103 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8430 = x8428 + x8429;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8431 = x8106 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8432 = x8430 + x8431;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8433 = x8109 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8434 = x8432 + x8433;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8435 = x8112 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8436 = x8434 + x8435;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8437 = x8115 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8438 = x8436 + x8437;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8439 = x8118 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8440 = x8438 + x8439;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8441 = x8121 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8442 = x8440 + x8441;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8443 = x8124 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8444 = x8442 + x8443;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8445 = x8127 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8446 = x8444 + x8445;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8447 = x8130 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8448 = x8446 + x8447;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8449 = x8133 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8450 = x8448 + x8449;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8451 = x8136 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8452 = x8450 + x8451;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8453 = x8139 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8454 = x8452 + x8453;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8455 = x8142 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8456 = x8454 + x8455;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8457 = x7833 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8458 = x7832 + x8457;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8459 = x7834 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8460 = x8458 + x8459;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8461 = x7835 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8462 = x8460 + x8461;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8463 = x7836 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8464 = x8462 + x8463;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8465 = x7837 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8466 = x8464 + x8465;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8467 = x7838 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8468 = x8466 + x8467;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8469 = x7839 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8470 = x8468 + x8469;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8471 = x7840 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8472 = x8470 + x8471;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8473 = x7841 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8474 = x8472 + x8473;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8475 = x7842 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8476 = x8474 + x8475;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8477 = x7843 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8478 = x8476 + x8477;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8479 = x7844 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8480 = x8478 + x8479;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8481 = x7845 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8482 = x8480 + x8481;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8483 = x7846 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8484 = x8482 + x8483;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8485 = x7847 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8486 = x8484 + x8485;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8487 = x7849 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8488 = x7848 + x8487;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8489 = x7850 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8490 = x8488 + x8489;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8491 = x7851 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8492 = x8490 + x8491;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8493 = x7852 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8494 = x8492 + x8493;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8495 = x7853 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8496 = x8494 + x8495;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8497 = x7854 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8498 = x8496 + x8497;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8499 = x7855 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8500 = x8498 + x8499;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8501 = x7856 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8502 = x8500 + x8501;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8503 = x7857 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8504 = x8502 + x8503;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8505 = x7858 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8506 = x8504 + x8505;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8507 = x7859 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8508 = x8506 + x8507;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8509 = x7860 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8510 = x8508 + x8509;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8511 = x7861 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8512 = x8510 + x8511;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8513 = x7862 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8514 = x8512 + x8513;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8515 = x7863 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8516 = x8514 + x8515;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8517 = x8238 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8518 = x8234 + x8517;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8519 = x8241 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8520 = x8518 + x8519;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8521 = x8244 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8522 = x8520 + x8521;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8523 = x8247 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8524 = x8522 + x8523;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8525 = x8250 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8526 = x8524 + x8525;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8527 = x8253 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8528 = x8526 + x8527;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8529 = x8256 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8530 = x8528 + x8529;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8531 = x8259 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8532 = x8530 + x8531;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8533 = x8262 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8534 = x8532 + x8533;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8535 = x8265 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8536 = x8534 + x8535;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8537 = x8268 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8538 = x8536 + x8537;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8539 = x8271 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8540 = x8538 + x8539;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8541 = x8274 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8542 = x8540 + x8541;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8543 = x8277 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8544 = x8542 + x8543;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8545 = x8280 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8546 = x8544 + x8545;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8547 = x8286 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8548 = x8283 + x8547;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8549 = x8289 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8550 = x8548 + x8549;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8551 = x8292 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8552 = x8550 + x8551;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8553 = x8295 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8554 = x8552 + x8553;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8555 = x8298 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8556 = x8554 + x8555;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8557 = x8301 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8558 = x8556 + x8557;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8559 = x8304 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8560 = x8558 + x8559;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8561 = x8308 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8562 = x8560 + x8561;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8563 = x8312 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8564 = x8562 + x8563;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8565 = x8316 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8566 = x8564 + x8565;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8567 = x8320 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8568 = x8566 + x8567;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8569 = x8324 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8570 = x8568 + x8569;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8571 = x8328 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8572 = x8570 + x8571;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8573 = x8332 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8574 = x8572 + x8573;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x8575 = x8336 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x8576 = x8574 + x8575;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x8577 = x8486 + x8546;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x8578 = x8516 + x8576;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x8579 = x8426 + x8577;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x8580 = x8456 + x8578;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x8581 = x8366 + x8579;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x8582 = x8396 + x8580;
      // loc("zirgen/circuit/recursion/sha.cpp":261:5)
      {
        auto& reg = args[2][126 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8581);
        reg = x8581;
      }
      // loc("zirgen/circuit/recursion/sha.cpp":261:5)
      {
        auto& reg = args[2][127 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8582);
        reg = x8582;
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w_raw[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8583 = args[2][126 * steps + ((cycle - 0) & mask)];
      assert(x8583 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w_raw[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8584 = args[2][127 * steps + ((cycle - 0) & mask)];
      assert(x8584 != Fp::invalid());
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8585 = Fp(x8583.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][94 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8585);
          reg = x8585;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8586 = Fp(x8583.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8587 = x8586 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][95 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8587);
          reg = x8587;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8588 = Fp(x8583.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8589 = x8588 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][96 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8589);
          reg = x8589;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8590 = Fp(x8583.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8591 = x8590 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][97 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8591);
          reg = x8591;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8592 = Fp(x8583.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8593 = x8592 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8593);
          reg = x8593;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8594 = Fp(x8583.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8595 = x8594 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8595);
          reg = x8595;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8596 = Fp(x8583.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8597 = x8596 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8597);
          reg = x8597;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8598 = Fp(x8583.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8599 = x8598 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][101 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8599);
          reg = x8599;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8600 = Fp(x8583.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8601 = x8600 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][102 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8601);
          reg = x8601;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8602 = Fp(x8583.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8603 = x8602 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][103 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8603);
          reg = x8603;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8604 = Fp(x8583.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8605 = x8604 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][104 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8605);
          reg = x8605;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8606 = Fp(x8583.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8607 = x8606 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][105 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8607);
          reg = x8607;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8608 = Fp(x8583.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8609 = x8608 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][106 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8609);
          reg = x8609;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8610 = Fp(x8583.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8611 = x8610 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][107 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8611);
          reg = x8611;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8612 = Fp(x8583.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8613 = x8612 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][108 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8613);
          reg = x8613;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8614 = Fp(x8583.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8615 = x8614 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][109 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8615);
          reg = x8615;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8616 = args[2][94 * steps + ((cycle - 0) & mask)];
      assert(x8616 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8617 = args[2][95 * steps + ((cycle - 0) & mask)];
      assert(x8617 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8618 = x8617 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8619 = x8616 + x8618;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8620 = args[2][96 * steps + ((cycle - 0) & mask)];
      assert(x8620 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8621 = x8620 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8622 = x8619 + x8621;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8623 = args[2][97 * steps + ((cycle - 0) & mask)];
      assert(x8623 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8624 = x8623 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8625 = x8622 + x8624;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8626 = args[2][98 * steps + ((cycle - 0) & mask)];
      assert(x8626 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8627 = x8626 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8628 = x8625 + x8627;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8629 = args[2][99 * steps + ((cycle - 0) & mask)];
      assert(x8629 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8630 = x8629 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8631 = x8628 + x8630;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8632 = args[2][100 * steps + ((cycle - 0) & mask)];
      assert(x8632 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8633 = x8632 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8634 = x8631 + x8633;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8635 = args[2][101 * steps + ((cycle - 0) & mask)];
      assert(x8635 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8636 = x8635 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8637 = x8634 + x8636;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8638 = args[2][102 * steps + ((cycle - 0) & mask)];
      assert(x8638 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8639 = x8638 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8640 = x8637 + x8639;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8641 = args[2][103 * steps + ((cycle - 0) & mask)];
      assert(x8641 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8642 = x8641 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8643 = x8640 + x8642;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8644 = args[2][104 * steps + ((cycle - 0) & mask)];
      assert(x8644 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8645 = x8644 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8646 = x8643 + x8645;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8647 = args[2][105 * steps + ((cycle - 0) & mask)];
      assert(x8647 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8648 = x8647 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8649 = x8646 + x8648;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8650 = args[2][106 * steps + ((cycle - 0) & mask)];
      assert(x8650 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8651 = x8650 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8652 = x8649 + x8651;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8653 = args[2][107 * steps + ((cycle - 0) & mask)];
      assert(x8653 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8654 = x8653 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8655 = x8652 + x8654;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8656 = args[2][108 * steps + ((cycle - 0) & mask)];
      assert(x8656 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8657 = x8656 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8658 = x8655 + x8657;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8659 = args[2][109 * steps + ((cycle - 0) & mask)];
      assert(x8659 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8660 = x8659 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8661 = x8658 + x8660;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x8662 = x8583 - x8661;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x8663 = x8662 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":124:26)
        auto x8664 = Fp(x8663.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8664);
          reg = x8664;
        }
      }
      // loc("zirgen/circuit/recursion/sha.cpp":127:32)
      auto x8665 = x8584 + x8663;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8666 = Fp(x8665.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][110 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8666);
          reg = x8666;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8667 = Fp(x8665.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8668 = x8667 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][111 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8668);
          reg = x8668;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8669 = Fp(x8665.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8670 = x8669 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][112 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8670);
          reg = x8670;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8671 = Fp(x8665.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8672 = x8671 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][113 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8672);
          reg = x8672;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8673 = Fp(x8665.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8674 = x8673 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][114 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8674);
          reg = x8674;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8675 = Fp(x8665.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8676 = x8675 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][115 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8676);
          reg = x8676;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8677 = Fp(x8665.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8678 = x8677 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8678);
          reg = x8678;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8679 = Fp(x8665.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8680 = x8679 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8680);
          reg = x8680;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8681 = Fp(x8665.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8682 = x8681 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8682);
          reg = x8682;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8683 = Fp(x8665.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8684 = x8683 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8684);
          reg = x8684;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8685 = Fp(x8665.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8686 = x8685 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8686);
          reg = x8686;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8687 = Fp(x8665.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8688 = x8687 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8688);
          reg = x8688;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8689 = Fp(x8665.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8690 = x8689 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8690);
          reg = x8690;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8691 = Fp(x8665.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8692 = x8691 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8692);
          reg = x8692;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8693 = Fp(x8665.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8694 = x8693 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8694);
          reg = x8694;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x8695 = Fp(x8665.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x8696 = x8695 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8696);
          reg = x8696;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8697 = args[2][110 * steps + ((cycle - 0) & mask)];
      assert(x8697 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8698 = args[2][111 * steps + ((cycle - 0) & mask)];
      assert(x8698 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8699 = x8698 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8700 = x8697 + x8699;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8701 = args[2][112 * steps + ((cycle - 0) & mask)];
      assert(x8701 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8702 = x8701 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8703 = x8700 + x8702;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8704 = args[2][113 * steps + ((cycle - 0) & mask)];
      assert(x8704 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8705 = x8704 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8706 = x8703 + x8705;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8707 = args[2][114 * steps + ((cycle - 0) & mask)];
      assert(x8707 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8708 = x8707 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8709 = x8706 + x8708;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8710 = args[2][115 * steps + ((cycle - 0) & mask)];
      assert(x8710 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8711 = x8710 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8712 = x8709 + x8711;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8713 = args[2][116 * steps + ((cycle - 0) & mask)];
      assert(x8713 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8714 = x8713 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8715 = x8712 + x8714;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8716 = args[2][117 * steps + ((cycle - 0) & mask)];
      assert(x8716 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8717 = x8716 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8718 = x8715 + x8717;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8719 = args[2][118 * steps + ((cycle - 0) & mask)];
      assert(x8719 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8720 = x8719 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8721 = x8718 + x8720;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8722 = args[2][119 * steps + ((cycle - 0) & mask)];
      assert(x8722 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8723 = x8722 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8724 = x8721 + x8723;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8725 = args[2][120 * steps + ((cycle - 0) & mask)];
      assert(x8725 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8726 = x8725 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8727 = x8724 + x8726;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8728 = args[2][121 * steps + ((cycle - 0) & mask)];
      assert(x8728 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8729 = x8728 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8730 = x8727 + x8729;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8731 = args[2][122 * steps + ((cycle - 0) & mask)];
      assert(x8731 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8732 = x8731 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8733 = x8730 + x8732;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8734 = args[2][123 * steps + ((cycle - 0) & mask)];
      assert(x8734 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8735 = x8734 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8736 = x8733 + x8735;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8737 = args[2][124 * steps + ((cycle - 0) & mask)];
      assert(x8737 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8738 = x8737 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8739 = x8736 + x8738;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/w[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8740 = args[2][125 * steps + ((cycle - 0) & mask)];
      assert(x8740 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x8741 = x8740 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x8742 = x8739 + x8741;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x8743 = x8665 - x8742;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x8744 = x8743 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":128:27)
        auto x8745 = Fp(x8744.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8745);
          reg = x8745;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8746 = args[2][26 * steps + ((cycle - 1) & mask)];
      assert(x8746 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8747 = args[2][27 * steps + ((cycle - 1) & mask)];
      assert(x8747 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8748 = args[2][28 * steps + ((cycle - 1) & mask)];
      assert(x8748 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8749 = args[2][29 * steps + ((cycle - 1) & mask)];
      assert(x8749 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8750 = args[2][30 * steps + ((cycle - 1) & mask)];
      assert(x8750 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8751 = args[2][31 * steps + ((cycle - 1) & mask)];
      assert(x8751 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8752 = args[2][32 * steps + ((cycle - 1) & mask)];
      assert(x8752 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8753 = args[2][33 * steps + ((cycle - 1) & mask)];
      assert(x8753 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8754 = args[2][34 * steps + ((cycle - 1) & mask)];
      assert(x8754 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8755 = args[2][35 * steps + ((cycle - 1) & mask)];
      assert(x8755 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8756 = args[2][36 * steps + ((cycle - 1) & mask)];
      assert(x8756 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8757 = args[2][37 * steps + ((cycle - 1) & mask)];
      assert(x8757 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8758 = args[2][38 * steps + ((cycle - 1) & mask)];
      assert(x8758 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8759 = args[2][39 * steps + ((cycle - 1) & mask)];
      assert(x8759 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8760 = args[2][40 * steps + ((cycle - 1) & mask)];
      assert(x8760 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8761 = args[2][41 * steps + ((cycle - 1) & mask)];
      assert(x8761 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8762 = args[2][42 * steps + ((cycle - 1) & mask)];
      assert(x8762 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8763 = args[2][43 * steps + ((cycle - 1) & mask)];
      assert(x8763 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8764 = args[2][44 * steps + ((cycle - 1) & mask)];
      assert(x8764 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8765 = args[2][45 * steps + ((cycle - 1) & mask)];
      assert(x8765 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8766 = args[2][46 * steps + ((cycle - 1) & mask)];
      assert(x8766 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8767 = args[2][47 * steps + ((cycle - 1) & mask)];
      assert(x8767 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8768 = args[2][48 * steps + ((cycle - 1) & mask)];
      assert(x8768 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8769 = args[2][49 * steps + ((cycle - 1) & mask)];
      assert(x8769 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8770 = args[2][50 * steps + ((cycle - 1) & mask)];
      assert(x8770 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8771 = args[2][51 * steps + ((cycle - 1) & mask)];
      assert(x8771 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8772 = args[2][52 * steps + ((cycle - 1) & mask)];
      assert(x8772 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8773 = args[2][53 * steps + ((cycle - 1) & mask)];
      assert(x8773 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8774 = args[2][54 * steps + ((cycle - 1) & mask)];
      assert(x8774 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8775 = args[2][55 * steps + ((cycle - 1) & mask)];
      assert(x8775 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8776 = args[2][56 * steps + ((cycle - 1) & mask)];
      assert(x8776 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8777 = args[2][57 * steps + ((cycle - 1) & mask)];
      assert(x8777 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8778 = args[2][26 * steps + ((cycle - 2) & mask)];
      assert(x8778 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8779 = args[2][27 * steps + ((cycle - 2) & mask)];
      assert(x8779 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8780 = args[2][28 * steps + ((cycle - 2) & mask)];
      assert(x8780 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8781 = args[2][29 * steps + ((cycle - 2) & mask)];
      assert(x8781 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8782 = args[2][30 * steps + ((cycle - 2) & mask)];
      assert(x8782 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8783 = args[2][31 * steps + ((cycle - 2) & mask)];
      assert(x8783 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8784 = args[2][32 * steps + ((cycle - 2) & mask)];
      assert(x8784 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8785 = args[2][33 * steps + ((cycle - 2) & mask)];
      assert(x8785 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8786 = args[2][34 * steps + ((cycle - 2) & mask)];
      assert(x8786 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8787 = args[2][35 * steps + ((cycle - 2) & mask)];
      assert(x8787 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8788 = args[2][36 * steps + ((cycle - 2) & mask)];
      assert(x8788 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8789 = args[2][37 * steps + ((cycle - 2) & mask)];
      assert(x8789 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8790 = args[2][38 * steps + ((cycle - 2) & mask)];
      assert(x8790 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8791 = args[2][39 * steps + ((cycle - 2) & mask)];
      assert(x8791 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8792 = args[2][40 * steps + ((cycle - 2) & mask)];
      assert(x8792 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8793 = args[2][41 * steps + ((cycle - 2) & mask)];
      assert(x8793 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8794 = args[2][42 * steps + ((cycle - 2) & mask)];
      assert(x8794 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8795 = args[2][43 * steps + ((cycle - 2) & mask)];
      assert(x8795 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8796 = args[2][44 * steps + ((cycle - 2) & mask)];
      assert(x8796 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8797 = args[2][45 * steps + ((cycle - 2) & mask)];
      assert(x8797 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8798 = args[2][46 * steps + ((cycle - 2) & mask)];
      assert(x8798 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8799 = args[2][47 * steps + ((cycle - 2) & mask)];
      assert(x8799 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8800 = args[2][48 * steps + ((cycle - 2) & mask)];
      assert(x8800 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8801 = args[2][49 * steps + ((cycle - 2) & mask)];
      assert(x8801 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8802 = args[2][50 * steps + ((cycle - 2) & mask)];
      assert(x8802 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8803 = args[2][51 * steps + ((cycle - 2) & mask)];
      assert(x8803 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8804 = args[2][52 * steps + ((cycle - 2) & mask)];
      assert(x8804 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8805 = args[2][53 * steps + ((cycle - 2) & mask)];
      assert(x8805 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8806 = args[2][54 * steps + ((cycle - 2) & mask)];
      assert(x8806 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8807 = args[2][55 * steps + ((cycle - 2) & mask)];
      assert(x8807 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8808 = args[2][56 * steps + ((cycle - 2) & mask)];
      assert(x8808 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8809 = args[2][57 * steps + ((cycle - 2) & mask)];
      assert(x8809 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8810 = args[2][26 * steps + ((cycle - 3) & mask)];
      assert(x8810 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8811 = args[2][27 * steps + ((cycle - 3) & mask)];
      assert(x8811 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8812 = args[2][28 * steps + ((cycle - 3) & mask)];
      assert(x8812 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8813 = args[2][29 * steps + ((cycle - 3) & mask)];
      assert(x8813 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8814 = args[2][30 * steps + ((cycle - 3) & mask)];
      assert(x8814 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8815 = args[2][31 * steps + ((cycle - 3) & mask)];
      assert(x8815 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8816 = args[2][32 * steps + ((cycle - 3) & mask)];
      assert(x8816 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8817 = args[2][33 * steps + ((cycle - 3) & mask)];
      assert(x8817 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8818 = args[2][34 * steps + ((cycle - 3) & mask)];
      assert(x8818 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8819 = args[2][35 * steps + ((cycle - 3) & mask)];
      assert(x8819 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8820 = args[2][36 * steps + ((cycle - 3) & mask)];
      assert(x8820 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8821 = args[2][37 * steps + ((cycle - 3) & mask)];
      assert(x8821 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8822 = args[2][38 * steps + ((cycle - 3) & mask)];
      assert(x8822 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8823 = args[2][39 * steps + ((cycle - 3) & mask)];
      assert(x8823 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8824 = args[2][40 * steps + ((cycle - 3) & mask)];
      assert(x8824 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8825 = args[2][41 * steps + ((cycle - 3) & mask)];
      assert(x8825 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8826 = args[2][42 * steps + ((cycle - 3) & mask)];
      assert(x8826 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8827 = args[2][43 * steps + ((cycle - 3) & mask)];
      assert(x8827 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8828 = args[2][44 * steps + ((cycle - 3) & mask)];
      assert(x8828 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8829 = args[2][45 * steps + ((cycle - 3) & mask)];
      assert(x8829 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8830 = args[2][46 * steps + ((cycle - 3) & mask)];
      assert(x8830 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8831 = args[2][47 * steps + ((cycle - 3) & mask)];
      assert(x8831 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8832 = args[2][48 * steps + ((cycle - 3) & mask)];
      assert(x8832 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8833 = args[2][49 * steps + ((cycle - 3) & mask)];
      assert(x8833 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8834 = args[2][50 * steps + ((cycle - 3) & mask)];
      assert(x8834 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8835 = args[2][51 * steps + ((cycle - 3) & mask)];
      assert(x8835 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8836 = args[2][52 * steps + ((cycle - 3) & mask)];
      assert(x8836 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8837 = args[2][53 * steps + ((cycle - 3) & mask)];
      assert(x8837 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8838 = args[2][54 * steps + ((cycle - 3) & mask)];
      assert(x8838 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8839 = args[2][55 * steps + ((cycle - 3) & mask)];
      assert(x8839 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8840 = args[2][56 * steps + ((cycle - 3) & mask)];
      assert(x8840 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8841 = args[2][57 * steps + ((cycle - 3) & mask)];
      assert(x8841 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8842 = args[2][26 * steps + ((cycle - 4) & mask)];
      assert(x8842 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8843 = args[2][27 * steps + ((cycle - 4) & mask)];
      assert(x8843 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8844 = args[2][28 * steps + ((cycle - 4) & mask)];
      assert(x8844 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8845 = args[2][29 * steps + ((cycle - 4) & mask)];
      assert(x8845 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8846 = args[2][30 * steps + ((cycle - 4) & mask)];
      assert(x8846 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8847 = args[2][31 * steps + ((cycle - 4) & mask)];
      assert(x8847 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8848 = args[2][32 * steps + ((cycle - 4) & mask)];
      assert(x8848 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8849 = args[2][33 * steps + ((cycle - 4) & mask)];
      assert(x8849 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8850 = args[2][34 * steps + ((cycle - 4) & mask)];
      assert(x8850 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8851 = args[2][35 * steps + ((cycle - 4) & mask)];
      assert(x8851 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8852 = args[2][36 * steps + ((cycle - 4) & mask)];
      assert(x8852 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8853 = args[2][37 * steps + ((cycle - 4) & mask)];
      assert(x8853 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8854 = args[2][38 * steps + ((cycle - 4) & mask)];
      assert(x8854 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8855 = args[2][39 * steps + ((cycle - 4) & mask)];
      assert(x8855 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8856 = args[2][40 * steps + ((cycle - 4) & mask)];
      assert(x8856 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8857 = args[2][41 * steps + ((cycle - 4) & mask)];
      assert(x8857 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8858 = args[2][42 * steps + ((cycle - 4) & mask)];
      assert(x8858 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8859 = args[2][43 * steps + ((cycle - 4) & mask)];
      assert(x8859 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8860 = args[2][44 * steps + ((cycle - 4) & mask)];
      assert(x8860 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8861 = args[2][45 * steps + ((cycle - 4) & mask)];
      assert(x8861 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8862 = args[2][46 * steps + ((cycle - 4) & mask)];
      assert(x8862 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8863 = args[2][47 * steps + ((cycle - 4) & mask)];
      assert(x8863 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8864 = args[2][48 * steps + ((cycle - 4) & mask)];
      assert(x8864 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8865 = args[2][49 * steps + ((cycle - 4) & mask)];
      assert(x8865 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8866 = args[2][50 * steps + ((cycle - 4) & mask)];
      assert(x8866 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8867 = args[2][51 * steps + ((cycle - 4) & mask)];
      assert(x8867 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8868 = args[2][52 * steps + ((cycle - 4) & mask)];
      assert(x8868 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8869 = args[2][53 * steps + ((cycle - 4) & mask)];
      assert(x8869 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8870 = args[2][54 * steps + ((cycle - 4) & mask)];
      assert(x8870 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8871 = args[2][55 * steps + ((cycle - 4) & mask)];
      assert(x8871 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8872 = args[2][56 * steps + ((cycle - 4) & mask)];
      assert(x8872 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8873 = args[2][57 * steps + ((cycle - 4) & mask)];
      assert(x8873 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8874 = args[2][60 * steps + ((cycle - 1) & mask)];
      assert(x8874 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8875 = args[2][61 * steps + ((cycle - 1) & mask)];
      assert(x8875 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8876 = args[2][62 * steps + ((cycle - 1) & mask)];
      assert(x8876 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8877 = args[2][63 * steps + ((cycle - 1) & mask)];
      assert(x8877 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8878 = args[2][64 * steps + ((cycle - 1) & mask)];
      assert(x8878 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8879 = args[2][65 * steps + ((cycle - 1) & mask)];
      assert(x8879 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8880 = args[2][66 * steps + ((cycle - 1) & mask)];
      assert(x8880 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8881 = args[2][67 * steps + ((cycle - 1) & mask)];
      assert(x8881 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8882 = args[2][68 * steps + ((cycle - 1) & mask)];
      assert(x8882 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8883 = args[2][69 * steps + ((cycle - 1) & mask)];
      assert(x8883 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8884 = args[2][70 * steps + ((cycle - 1) & mask)];
      assert(x8884 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8885 = args[2][71 * steps + ((cycle - 1) & mask)];
      assert(x8885 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8886 = args[2][72 * steps + ((cycle - 1) & mask)];
      assert(x8886 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8887 = args[2][73 * steps + ((cycle - 1) & mask)];
      assert(x8887 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8888 = args[2][74 * steps + ((cycle - 1) & mask)];
      assert(x8888 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8889 = args[2][75 * steps + ((cycle - 1) & mask)];
      assert(x8889 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8890 = args[2][76 * steps + ((cycle - 1) & mask)];
      assert(x8890 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8891 = args[2][77 * steps + ((cycle - 1) & mask)];
      assert(x8891 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8892 = args[2][78 * steps + ((cycle - 1) & mask)];
      assert(x8892 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8893 = args[2][79 * steps + ((cycle - 1) & mask)];
      assert(x8893 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8894 = args[2][80 * steps + ((cycle - 1) & mask)];
      assert(x8894 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8895 = args[2][81 * steps + ((cycle - 1) & mask)];
      assert(x8895 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8896 = args[2][82 * steps + ((cycle - 1) & mask)];
      assert(x8896 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8897 = args[2][83 * steps + ((cycle - 1) & mask)];
      assert(x8897 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8898 = args[2][84 * steps + ((cycle - 1) & mask)];
      assert(x8898 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8899 = args[2][85 * steps + ((cycle - 1) & mask)];
      assert(x8899 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8900 = args[2][86 * steps + ((cycle - 1) & mask)];
      assert(x8900 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8901 = args[2][87 * steps + ((cycle - 1) & mask)];
      assert(x8901 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8902 = args[2][88 * steps + ((cycle - 1) & mask)];
      assert(x8902 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8903 = args[2][89 * steps + ((cycle - 1) & mask)];
      assert(x8903 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8904 = args[2][90 * steps + ((cycle - 1) & mask)];
      assert(x8904 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8905 = args[2][91 * steps + ((cycle - 1) & mask)];
      assert(x8905 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8906 = args[2][60 * steps + ((cycle - 2) & mask)];
      assert(x8906 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8907 = args[2][61 * steps + ((cycle - 2) & mask)];
      assert(x8907 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8908 = args[2][62 * steps + ((cycle - 2) & mask)];
      assert(x8908 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8909 = args[2][63 * steps + ((cycle - 2) & mask)];
      assert(x8909 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8910 = args[2][64 * steps + ((cycle - 2) & mask)];
      assert(x8910 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8911 = args[2][65 * steps + ((cycle - 2) & mask)];
      assert(x8911 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8912 = args[2][66 * steps + ((cycle - 2) & mask)];
      assert(x8912 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8913 = args[2][67 * steps + ((cycle - 2) & mask)];
      assert(x8913 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8914 = args[2][68 * steps + ((cycle - 2) & mask)];
      assert(x8914 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8915 = args[2][69 * steps + ((cycle - 2) & mask)];
      assert(x8915 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8916 = args[2][70 * steps + ((cycle - 2) & mask)];
      assert(x8916 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8917 = args[2][71 * steps + ((cycle - 2) & mask)];
      assert(x8917 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8918 = args[2][72 * steps + ((cycle - 2) & mask)];
      assert(x8918 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8919 = args[2][73 * steps + ((cycle - 2) & mask)];
      assert(x8919 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8920 = args[2][74 * steps + ((cycle - 2) & mask)];
      assert(x8920 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8921 = args[2][75 * steps + ((cycle - 2) & mask)];
      assert(x8921 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8922 = args[2][76 * steps + ((cycle - 2) & mask)];
      assert(x8922 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8923 = args[2][77 * steps + ((cycle - 2) & mask)];
      assert(x8923 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8924 = args[2][78 * steps + ((cycle - 2) & mask)];
      assert(x8924 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8925 = args[2][79 * steps + ((cycle - 2) & mask)];
      assert(x8925 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8926 = args[2][80 * steps + ((cycle - 2) & mask)];
      assert(x8926 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8927 = args[2][81 * steps + ((cycle - 2) & mask)];
      assert(x8927 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8928 = args[2][82 * steps + ((cycle - 2) & mask)];
      assert(x8928 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8929 = args[2][83 * steps + ((cycle - 2) & mask)];
      assert(x8929 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8930 = args[2][84 * steps + ((cycle - 2) & mask)];
      assert(x8930 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8931 = args[2][85 * steps + ((cycle - 2) & mask)];
      assert(x8931 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8932 = args[2][86 * steps + ((cycle - 2) & mask)];
      assert(x8932 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8933 = args[2][87 * steps + ((cycle - 2) & mask)];
      assert(x8933 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8934 = args[2][88 * steps + ((cycle - 2) & mask)];
      assert(x8934 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8935 = args[2][89 * steps + ((cycle - 2) & mask)];
      assert(x8935 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8936 = args[2][90 * steps + ((cycle - 2) & mask)];
      assert(x8936 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8937 = args[2][91 * steps + ((cycle - 2) & mask)];
      assert(x8937 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8938 = args[2][60 * steps + ((cycle - 3) & mask)];
      assert(x8938 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8939 = args[2][61 * steps + ((cycle - 3) & mask)];
      assert(x8939 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8940 = args[2][62 * steps + ((cycle - 3) & mask)];
      assert(x8940 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8941 = args[2][63 * steps + ((cycle - 3) & mask)];
      assert(x8941 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8942 = args[2][64 * steps + ((cycle - 3) & mask)];
      assert(x8942 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8943 = args[2][65 * steps + ((cycle - 3) & mask)];
      assert(x8943 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8944 = args[2][66 * steps + ((cycle - 3) & mask)];
      assert(x8944 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8945 = args[2][67 * steps + ((cycle - 3) & mask)];
      assert(x8945 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8946 = args[2][68 * steps + ((cycle - 3) & mask)];
      assert(x8946 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8947 = args[2][69 * steps + ((cycle - 3) & mask)];
      assert(x8947 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8948 = args[2][70 * steps + ((cycle - 3) & mask)];
      assert(x8948 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8949 = args[2][71 * steps + ((cycle - 3) & mask)];
      assert(x8949 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8950 = args[2][72 * steps + ((cycle - 3) & mask)];
      assert(x8950 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8951 = args[2][73 * steps + ((cycle - 3) & mask)];
      assert(x8951 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8952 = args[2][74 * steps + ((cycle - 3) & mask)];
      assert(x8952 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8953 = args[2][75 * steps + ((cycle - 3) & mask)];
      assert(x8953 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8954 = args[2][76 * steps + ((cycle - 3) & mask)];
      assert(x8954 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8955 = args[2][77 * steps + ((cycle - 3) & mask)];
      assert(x8955 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8956 = args[2][78 * steps + ((cycle - 3) & mask)];
      assert(x8956 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8957 = args[2][79 * steps + ((cycle - 3) & mask)];
      assert(x8957 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8958 = args[2][80 * steps + ((cycle - 3) & mask)];
      assert(x8958 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8959 = args[2][81 * steps + ((cycle - 3) & mask)];
      assert(x8959 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8960 = args[2][82 * steps + ((cycle - 3) & mask)];
      assert(x8960 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8961 = args[2][83 * steps + ((cycle - 3) & mask)];
      assert(x8961 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8962 = args[2][84 * steps + ((cycle - 3) & mask)];
      assert(x8962 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8963 = args[2][85 * steps + ((cycle - 3) & mask)];
      assert(x8963 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8964 = args[2][86 * steps + ((cycle - 3) & mask)];
      assert(x8964 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8965 = args[2][87 * steps + ((cycle - 3) & mask)];
      assert(x8965 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8966 = args[2][88 * steps + ((cycle - 3) & mask)];
      assert(x8966 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8967 = args[2][89 * steps + ((cycle - 3) & mask)];
      assert(x8967 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8968 = args[2][90 * steps + ((cycle - 3) & mask)];
      assert(x8968 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8969 = args[2][91 * steps + ((cycle - 3) & mask)];
      assert(x8969 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8970 = args[2][60 * steps + ((cycle - 4) & mask)];
      assert(x8970 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8971 = args[2][61 * steps + ((cycle - 4) & mask)];
      assert(x8971 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8972 = args[2][62 * steps + ((cycle - 4) & mask)];
      assert(x8972 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8973 = args[2][63 * steps + ((cycle - 4) & mask)];
      assert(x8973 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8974 = args[2][64 * steps + ((cycle - 4) & mask)];
      assert(x8974 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8975 = args[2][65 * steps + ((cycle - 4) & mask)];
      assert(x8975 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8976 = args[2][66 * steps + ((cycle - 4) & mask)];
      assert(x8976 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8977 = args[2][67 * steps + ((cycle - 4) & mask)];
      assert(x8977 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8978 = args[2][68 * steps + ((cycle - 4) & mask)];
      assert(x8978 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8979 = args[2][69 * steps + ((cycle - 4) & mask)];
      assert(x8979 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8980 = args[2][70 * steps + ((cycle - 4) & mask)];
      assert(x8980 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8981 = args[2][71 * steps + ((cycle - 4) & mask)];
      assert(x8981 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8982 = args[2][72 * steps + ((cycle - 4) & mask)];
      assert(x8982 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8983 = args[2][73 * steps + ((cycle - 4) & mask)];
      assert(x8983 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8984 = args[2][74 * steps + ((cycle - 4) & mask)];
      assert(x8984 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8985 = args[2][75 * steps + ((cycle - 4) & mask)];
      assert(x8985 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8986 = args[2][76 * steps + ((cycle - 4) & mask)];
      assert(x8986 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8987 = args[2][77 * steps + ((cycle - 4) & mask)];
      assert(x8987 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8988 = args[2][78 * steps + ((cycle - 4) & mask)];
      assert(x8988 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8989 = args[2][79 * steps + ((cycle - 4) & mask)];
      assert(x8989 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8990 = args[2][80 * steps + ((cycle - 4) & mask)];
      assert(x8990 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8991 = args[2][81 * steps + ((cycle - 4) & mask)];
      assert(x8991 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8992 = args[2][82 * steps + ((cycle - 4) & mask)];
      assert(x8992 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8993 = args[2][83 * steps + ((cycle - 4) & mask)];
      assert(x8993 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8994 = args[2][84 * steps + ((cycle - 4) & mask)];
      assert(x8994 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8995 = args[2][85 * steps + ((cycle - 4) & mask)];
      assert(x8995 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8996 = args[2][86 * steps + ((cycle - 4) & mask)];
      assert(x8996 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8997 = args[2][87 * steps + ((cycle - 4) & mask)];
      assert(x8997 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8998 = args[2][88 * steps + ((cycle - 4) & mask)];
      assert(x8998 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8999 = args[2][89 * steps + ((cycle - 4) & mask)];
      assert(x8999 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9000 = args[2][90 * steps + ((cycle - 4) & mask)];
      assert(x9000 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9001 = args[2][91 * steps + ((cycle - 4) & mask)];
      assert(x9001 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x9002 = args[2][17 * steps + ((cycle - 0) & mask)];
      assert(x9002 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x9003 = args[2][18 * steps + ((cycle - 0) & mask)];
      assert(x9003 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9004 = x8759 + x8768;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9005 = x8759 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9006 = x9005 * x8768;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9007 = x9004 - x9006;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9008 = x8760 + x8769;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9009 = x8760 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9010 = x9009 * x8769;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9011 = x9008 - x9010;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9012 = x8761 + x8770;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9013 = x8761 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9014 = x9013 * x8770;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9015 = x9012 - x9014;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9016 = x8762 + x8771;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9017 = x8762 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9018 = x9017 * x8771;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9019 = x9016 - x9018;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9020 = x8763 + x8772;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9021 = x8763 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9022 = x9021 * x8772;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9023 = x9020 - x9022;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9024 = x8764 + x8773;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9025 = x8764 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9026 = x9025 * x8773;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9027 = x9024 - x9026;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9028 = x8765 + x8774;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9029 = x8765 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9030 = x9029 * x8774;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9031 = x9028 - x9030;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9032 = x8766 + x8775;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9033 = x8766 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9034 = x9033 * x8775;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9035 = x9032 - x9034;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9036 = x8767 + x8776;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9037 = x8767 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9038 = x9037 * x8776;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9039 = x9036 - x9038;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9040 = x8768 + x8777;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9041 = x8768 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9042 = x9041 * x8777;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9043 = x9040 - x9042;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9044 = x8769 + x8746;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9045 = x8769 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9046 = x9045 * x8746;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9047 = x9044 - x9046;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9048 = x8770 + x8747;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9049 = x8770 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9050 = x9049 * x8747;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9051 = x9048 - x9050;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9052 = x8771 + x8748;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9053 = x8771 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9054 = x9053 * x8748;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9055 = x9052 - x9054;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9056 = x8772 + x8749;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9057 = x8772 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9058 = x9057 * x8749;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9059 = x9056 - x9058;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9060 = x8773 + x8750;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9061 = x8773 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9062 = x9061 * x8750;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9063 = x9060 - x9062;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9064 = x8774 + x8751;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9065 = x8774 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9066 = x9065 * x8751;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9067 = x9064 - x9066;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9068 = x8775 + x8752;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9069 = x8775 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9070 = x9069 * x8752;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9071 = x9068 - x9070;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9072 = x8776 + x8753;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9073 = x8776 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9074 = x9073 * x8753;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9075 = x9072 - x9074;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9076 = x8777 + x8754;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9077 = x8777 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9078 = x9077 * x8754;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9079 = x9076 - x9078;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9080 = x8746 + x8755;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9081 = x8746 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9082 = x9081 * x8755;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9083 = x9080 - x9082;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9084 = x8747 + x8756;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9085 = x8747 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9086 = x9085 * x8756;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9087 = x9084 - x9086;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9088 = x8748 + x8757;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9089 = x8748 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9090 = x9089 * x8757;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9091 = x9088 - x9090;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9092 = x8749 + x8758;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9093 = x8749 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9094 = x9093 * x8758;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9095 = x9092 - x9094;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9096 = x8750 + x8759;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9097 = x8750 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9098 = x9097 * x8759;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9099 = x9096 - x9098;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9100 = x8751 + x8760;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9101 = x8751 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9102 = x9101 * x8760;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9103 = x9100 - x9102;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9104 = x8752 + x8761;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9105 = x8752 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9106 = x9105 * x8761;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9107 = x9104 - x9106;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9108 = x8753 + x8762;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9109 = x8753 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9110 = x9109 * x8762;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9111 = x9108 - x9110;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9112 = x8754 + x8763;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9113 = x8754 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9114 = x9113 * x8763;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9115 = x9112 - x9114;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9116 = x8755 + x8764;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9117 = x8755 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9118 = x9117 * x8764;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9119 = x9116 - x9118;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9120 = x8756 + x8765;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9121 = x8756 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9122 = x9121 * x8765;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9123 = x9120 - x9122;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9124 = x8757 + x8766;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9125 = x8757 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9126 = x9125 * x8766;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9127 = x9124 - x9126;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9128 = x8758 + x8767;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9129 = x8758 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9130 = x9129 * x8767;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9131 = x9128 - x9130;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9132 = x8748 + x9007;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9133 = x9089 * x9007;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9134 = x9132 - x9133;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9135 = x8749 + x9011;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9136 = x9093 * x9011;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9137 = x9135 - x9136;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9138 = x8750 + x9015;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9139 = x9097 * x9015;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9140 = x9138 - x9139;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9141 = x8751 + x9019;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9142 = x9101 * x9019;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9143 = x9141 - x9142;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9144 = x8752 + x9023;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9145 = x9105 * x9023;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9146 = x9144 - x9145;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9147 = x8753 + x9027;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9148 = x9109 * x9027;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9149 = x9147 - x9148;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9150 = x8754 + x9031;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9151 = x9113 * x9031;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9152 = x9150 - x9151;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9153 = x8755 + x9035;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9154 = x9117 * x9035;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9155 = x9153 - x9154;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9156 = x8756 + x9039;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9157 = x9121 * x9039;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9158 = x9156 - x9157;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9159 = x8757 + x9043;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9160 = x9125 * x9043;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9161 = x9159 - x9160;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9162 = x8758 + x9047;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9163 = x9129 * x9047;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9164 = x9162 - x9163;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9165 = x8759 + x9051;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9166 = x9005 * x9051;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9167 = x9165 - x9166;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9168 = x8760 + x9055;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9169 = x9009 * x9055;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9170 = x9168 - x9169;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9171 = x8761 + x9059;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9172 = x9013 * x9059;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9173 = x9171 - x9172;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9174 = x8762 + x9063;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9175 = x9017 * x9063;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9176 = x9174 - x9175;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9177 = x8763 + x9067;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9178 = x9021 * x9067;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9179 = x9177 - x9178;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9180 = x8764 + x9071;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9181 = x9025 * x9071;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9182 = x9180 - x9181;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9183 = x8765 + x9075;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9184 = x9029 * x9075;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9185 = x9183 - x9184;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9186 = x8766 + x9079;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9187 = x9033 * x9079;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9188 = x9186 - x9187;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9189 = x8767 + x9083;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9190 = x9037 * x9083;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9191 = x9189 - x9190;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9192 = x8768 + x9087;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9193 = x9041 * x9087;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9194 = x9192 - x9193;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9195 = x8769 + x9091;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9196 = x9045 * x9091;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9197 = x9195 - x9196;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9198 = x8770 + x9095;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9199 = x9049 * x9095;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9200 = x9198 - x9199;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9201 = x8771 + x9099;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9202 = x9053 * x9099;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9203 = x9201 - x9202;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9204 = x8772 + x9103;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9205 = x9057 * x9103;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9206 = x9204 - x9205;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9207 = x8773 + x9107;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9208 = x9061 * x9107;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9209 = x9207 - x9208;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9210 = x8774 + x9111;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9211 = x9065 * x9111;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9212 = x9210 - x9211;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9213 = x8775 + x9115;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9214 = x9069 * x9115;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9215 = x9213 - x9214;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9216 = x8776 + x9119;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9217 = x9073 * x9119;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9218 = x9216 - x9217;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9219 = x8777 + x9123;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9220 = x9077 * x9123;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9221 = x9219 - x9220;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9222 = x8746 + x9127;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9223 = x9081 * x9127;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9224 = x9222 - x9223;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9225 = x8747 + x9131;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9226 = x9085 * x9131;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9227 = x9225 - x9226;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9228 = x8885 + x8899;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9229 = x8885 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9230 = x9229 * x8899;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9231 = x9228 - x9230;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9232 = x8886 + x8900;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9233 = x8886 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9234 = x9233 * x8900;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9235 = x9232 - x9234;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9236 = x8887 + x8901;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9237 = x8887 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9238 = x9237 * x8901;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9239 = x9236 - x9238;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9240 = x8888 + x8902;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9241 = x8888 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9242 = x9241 * x8902;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9243 = x9240 - x9242;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9244 = x8889 + x8903;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9245 = x8889 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9246 = x9245 * x8903;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9247 = x9244 - x9246;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9248 = x8890 + x8904;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9249 = x8890 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9250 = x9249 * x8904;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9251 = x9248 - x9250;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9252 = x8891 + x8905;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9253 = x8891 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9254 = x9253 * x8905;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9255 = x9252 - x9254;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9256 = x8892 + x8874;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9257 = x8892 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9258 = x9257 * x8874;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9259 = x9256 - x9258;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9260 = x8893 + x8875;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9261 = x8893 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9262 = x9261 * x8875;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9263 = x9260 - x9262;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9264 = x8894 + x8876;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9265 = x8894 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9266 = x9265 * x8876;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9267 = x9264 - x9266;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9268 = x8895 + x8877;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9269 = x8895 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9270 = x9269 * x8877;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9271 = x9268 - x9270;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9272 = x8896 + x8878;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9273 = x8896 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9274 = x9273 * x8878;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9275 = x9272 - x9274;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9276 = x8897 + x8879;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9277 = x8897 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9278 = x9277 * x8879;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9279 = x9276 - x9278;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9280 = x8898 + x8880;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9281 = x8898 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9282 = x9281 * x8880;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9283 = x9280 - x9282;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9284 = x8899 + x8881;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9285 = x8899 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9286 = x9285 * x8881;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9287 = x9284 - x9286;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9288 = x8900 + x8882;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9289 = x8900 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9290 = x9289 * x8882;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9291 = x9288 - x9290;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9292 = x8901 + x8883;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9293 = x8901 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9294 = x9293 * x8883;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9295 = x9292 - x9294;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9296 = x8902 + x8884;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9297 = x8902 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9298 = x9297 * x8884;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9299 = x9296 - x9298;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9300 = x8903 + x8885;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9301 = x8903 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9302 = x9301 * x8885;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9303 = x9300 - x9302;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9304 = x8904 + x8886;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9305 = x8904 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9306 = x9305 * x8886;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9307 = x9304 - x9306;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9308 = x8905 + x8887;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9309 = x8905 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9310 = x9309 * x8887;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9311 = x9308 - x9310;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9312 = x8874 + x8888;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9313 = x8874 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9314 = x9313 * x8888;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9315 = x9312 - x9314;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9316 = x8875 + x8889;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9317 = x8875 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9318 = x9317 * x8889;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9319 = x9316 - x9318;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9320 = x8876 + x8890;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9321 = x8876 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9322 = x9321 * x8890;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9323 = x9320 - x9322;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9324 = x8877 + x8891;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9325 = x8877 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9326 = x9325 * x8891;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9327 = x9324 - x9326;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9328 = x8878 + x8892;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9329 = x8878 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9330 = x9329 * x8892;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9331 = x9328 - x9330;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9332 = x8879 + x8893;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9333 = x8879 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9334 = x9333 * x8893;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9335 = x9332 - x9334;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9336 = x8880 + x8894;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9337 = x8880 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9338 = x9337 * x8894;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9339 = x9336 - x9338;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9340 = x8881 + x8895;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9341 = x8881 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9342 = x9341 * x8895;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9343 = x9340 - x9342;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9344 = x8882 + x8896;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9345 = x8882 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9346 = x9345 * x8896;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9347 = x9344 - x9346;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9348 = x8883 + x8897;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9349 = x8883 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9350 = x9349 * x8897;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9351 = x9348 - x9350;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9352 = x8884 + x8898;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9353 = x8884 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9354 = x9353 * x8898;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9355 = x9352 - x9354;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9356 = x8880 + x9231;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9357 = x9337 * x9231;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9358 = x9356 - x9357;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9359 = x8881 + x9235;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9360 = x9341 * x9235;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9361 = x9359 - x9360;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9362 = x8882 + x9239;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9363 = x9345 * x9239;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9364 = x9362 - x9363;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9365 = x8883 + x9243;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9366 = x9349 * x9243;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9367 = x9365 - x9366;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9368 = x8884 + x9247;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9369 = x9353 * x9247;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9370 = x9368 - x9369;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9371 = x8885 + x9251;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9372 = x9229 * x9251;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9373 = x9371 - x9372;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9374 = x8886 + x9255;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9375 = x9233 * x9255;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9376 = x9374 - x9375;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9377 = x8887 + x9259;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9378 = x9237 * x9259;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9379 = x9377 - x9378;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9380 = x8888 + x9263;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9381 = x9241 * x9263;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9382 = x9380 - x9381;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9383 = x8889 + x9267;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9384 = x9245 * x9267;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9385 = x9383 - x9384;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9386 = x8890 + x9271;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9387 = x9249 * x9271;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9388 = x9386 - x9387;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9389 = x8891 + x9275;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9390 = x9253 * x9275;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9391 = x9389 - x9390;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9392 = x8892 + x9279;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9393 = x9257 * x9279;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9394 = x9392 - x9393;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9395 = x8893 + x9283;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9396 = x9261 * x9283;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9397 = x9395 - x9396;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9398 = x8894 + x9287;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9399 = x9265 * x9287;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9400 = x9398 - x9399;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9401 = x8895 + x9291;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9402 = x9269 * x9291;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9403 = x9401 - x9402;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9404 = x8896 + x9295;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9405 = x9273 * x9295;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9406 = x9404 - x9405;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9407 = x8897 + x9299;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9408 = x9277 * x9299;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9409 = x9407 - x9408;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9410 = x8898 + x9303;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9411 = x9281 * x9303;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9412 = x9410 - x9411;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9413 = x8899 + x9307;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9414 = x9285 * x9307;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9415 = x9413 - x9414;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9416 = x8900 + x9311;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9417 = x9289 * x9311;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9418 = x9416 - x9417;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9419 = x8901 + x9315;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9420 = x9293 * x9315;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9421 = x9419 - x9420;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9422 = x8902 + x9319;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9423 = x9297 * x9319;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9424 = x9422 - x9423;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9425 = x8903 + x9323;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9426 = x9301 * x9323;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9427 = x9425 - x9426;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9428 = x8904 + x9327;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9429 = x9305 * x9327;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9430 = x9428 - x9429;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9431 = x8905 + x9331;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9432 = x9309 * x9331;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9433 = x9431 - x9432;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9434 = x8874 + x9335;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9435 = x9313 * x9335;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9436 = x9434 - x9435;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9437 = x8875 + x9339;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9438 = x9317 * x9339;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9439 = x9437 - x9438;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9440 = x8876 + x9343;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9441 = x9321 * x9343;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9442 = x9440 - x9441;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9443 = x8877 + x9347;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9444 = x9325 * x9347;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9445 = x9443 - x9444;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9446 = x8878 + x9351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9447 = x9329 * x9351;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9448 = x9446 - x9447;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9449 = x8879 + x9355;
      // loc("zirgen/circuit/recursion/sha.cpp":47:28)
      auto x9450 = x9333 * x9355;
      // loc("zirgen/circuit/recursion/sha.cpp":47:14)
      auto x9451 = x9449 - x9450;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9452 = x8971 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9453 = x8970 + x9452;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9454 = x8972 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9455 = x9453 + x9454;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9456 = x8973 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9457 = x9455 + x9456;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9458 = x8974 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9459 = x9457 + x9458;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9460 = x8975 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9461 = x9459 + x9460;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9462 = x8976 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9463 = x9461 + x9462;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9464 = x8977 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9465 = x9463 + x9464;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9466 = x8978 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9467 = x9465 + x9466;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9468 = x8979 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9469 = x9467 + x9468;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9470 = x8980 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9471 = x9469 + x9470;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9472 = x8981 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9473 = x9471 + x9472;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9474 = x8982 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9475 = x9473 + x9474;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9476 = x8983 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9477 = x9475 + x9476;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9478 = x8984 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9479 = x9477 + x9478;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9480 = x8985 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9481 = x9479 + x9480;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9482 = x8987 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9483 = x8986 + x9482;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9484 = x8988 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9485 = x9483 + x9484;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9486 = x8989 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9487 = x9485 + x9486;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9488 = x8990 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9489 = x9487 + x9488;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9490 = x8991 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9491 = x9489 + x9490;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9492 = x8992 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9493 = x9491 + x9492;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9494 = x8993 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9495 = x9493 + x9494;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9496 = x8994 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9497 = x9495 + x9496;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9498 = x8995 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9499 = x9497 + x9498;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9500 = x8996 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9501 = x9499 + x9500;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9502 = x8997 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9503 = x9501 + x9502;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9504 = x8998 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9505 = x9503 + x9504;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9506 = x8999 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9507 = x9505 + x9506;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9508 = x9000 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9509 = x9507 + x9508;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9510 = x9001 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9511 = x9509 + x9510;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9512 = x8874 * x8906;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9513 = x2352 - x8874;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9514 = x9513 * x8938;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9515 = x9512 + x9514;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9516 = x8875 * x8907;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9517 = x2352 - x8875;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9518 = x9517 * x8939;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9519 = x9516 + x9518;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9520 = x8876 * x8908;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9521 = x2352 - x8876;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9522 = x9521 * x8940;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9523 = x9520 + x9522;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9524 = x8877 * x8909;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9525 = x2352 - x8877;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9526 = x9525 * x8941;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9527 = x9524 + x9526;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9528 = x8878 * x8910;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9529 = x2352 - x8878;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9530 = x9529 * x8942;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9531 = x9528 + x9530;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9532 = x8879 * x8911;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9533 = x2352 - x8879;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9534 = x9533 * x8943;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9535 = x9532 + x9534;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9536 = x8880 * x8912;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9537 = x2352 - x8880;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9538 = x9537 * x8944;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9539 = x9536 + x9538;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9540 = x8881 * x8913;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9541 = x2352 - x8881;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9542 = x9541 * x8945;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9543 = x9540 + x9542;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9544 = x8882 * x8914;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9545 = x2352 - x8882;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9546 = x9545 * x8946;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9547 = x9544 + x9546;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9548 = x8883 * x8915;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9549 = x2352 - x8883;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9550 = x9549 * x8947;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9551 = x9548 + x9550;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9552 = x8884 * x8916;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9553 = x2352 - x8884;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9554 = x9553 * x8948;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9555 = x9552 + x9554;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9556 = x8885 * x8917;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9557 = x2352 - x8885;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9558 = x9557 * x8949;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9559 = x9556 + x9558;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9560 = x8886 * x8918;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9561 = x2352 - x8886;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9562 = x9561 * x8950;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9563 = x9560 + x9562;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9564 = x8887 * x8919;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9565 = x2352 - x8887;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9566 = x9565 * x8951;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9567 = x9564 + x9566;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9568 = x8888 * x8920;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9569 = x2352 - x8888;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9570 = x9569 * x8952;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9571 = x9568 + x9570;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9572 = x8889 * x8921;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9573 = x2352 - x8889;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9574 = x9573 * x8953;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9575 = x9572 + x9574;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9576 = x8890 * x8922;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9577 = x2352 - x8890;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9578 = x9577 * x8954;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9579 = x9576 + x9578;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9580 = x8891 * x8923;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9581 = x2352 - x8891;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9582 = x9581 * x8955;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9583 = x9580 + x9582;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9584 = x8892 * x8924;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9585 = x2352 - x8892;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9586 = x9585 * x8956;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9587 = x9584 + x9586;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9588 = x8893 * x8925;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9589 = x2352 - x8893;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9590 = x9589 * x8957;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9591 = x9588 + x9590;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9592 = x8894 * x8926;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9593 = x2352 - x8894;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9594 = x9593 * x8958;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9595 = x9592 + x9594;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9596 = x8895 * x8927;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9597 = x2352 - x8895;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9598 = x9597 * x8959;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9599 = x9596 + x9598;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9600 = x8896 * x8928;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9601 = x2352 - x8896;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9602 = x9601 * x8960;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9603 = x9600 + x9602;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9604 = x8897 * x8929;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9605 = x2352 - x8897;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9606 = x9605 * x8961;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9607 = x9604 + x9606;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9608 = x8898 * x8930;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9609 = x2352 - x8898;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9610 = x9609 * x8962;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9611 = x9608 + x9610;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9612 = x8899 * x8931;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9613 = x2352 - x8899;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9614 = x9613 * x8963;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9615 = x9612 + x9614;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9616 = x8900 * x8932;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9617 = x2352 - x8900;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9618 = x9617 * x8964;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9619 = x9616 + x9618;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9620 = x8901 * x8933;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9621 = x2352 - x8901;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9622 = x9621 * x8965;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9623 = x9620 + x9622;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9624 = x8902 * x8934;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9625 = x2352 - x8902;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9626 = x9625 * x8966;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9627 = x9624 + x9626;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9628 = x8903 * x8935;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9629 = x2352 - x8903;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9630 = x9629 * x8967;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9631 = x9628 + x9630;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9632 = x8904 * x8936;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9633 = x2352 - x8904;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9634 = x9633 * x8968;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9635 = x9632 + x9634;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9636 = x8905 * x8937;
      // loc("zirgen/circuit/recursion/sha.cpp":64:29)
      auto x9637 = x2352 - x8905;
      // loc("zirgen/circuit/recursion/sha.cpp":64:28)
      auto x9638 = x9637 * x8969;
      // loc("zirgen/circuit/recursion/sha.cpp":64:14)
      auto x9639 = x9636 + x9638;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9640 = x9519 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9641 = x9515 + x9640;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9642 = x9523 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9643 = x9641 + x9642;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9644 = x9527 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9645 = x9643 + x9644;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9646 = x9531 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9647 = x9645 + x9646;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9648 = x9535 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9649 = x9647 + x9648;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9650 = x9539 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9651 = x9649 + x9650;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9652 = x9543 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9653 = x9651 + x9652;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9654 = x9547 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9655 = x9653 + x9654;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9656 = x9551 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9657 = x9655 + x9656;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9658 = x9555 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9659 = x9657 + x9658;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9660 = x9559 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9661 = x9659 + x9660;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9662 = x9563 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9663 = x9661 + x9662;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9664 = x9567 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9665 = x9663 + x9664;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9666 = x9571 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9667 = x9665 + x9666;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9668 = x9575 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9669 = x9667 + x9668;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9670 = x9583 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9671 = x9579 + x9670;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9672 = x9587 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9673 = x9671 + x9672;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9674 = x9591 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9675 = x9673 + x9674;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9676 = x9595 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9677 = x9675 + x9676;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9678 = x9599 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9679 = x9677 + x9678;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9680 = x9603 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9681 = x9679 + x9680;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9682 = x9607 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9683 = x9681 + x9682;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9684 = x9611 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9685 = x9683 + x9684;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9686 = x9615 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9687 = x9685 + x9686;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9688 = x9619 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9689 = x9687 + x9688;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9690 = x9623 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9691 = x9689 + x9690;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9692 = x9627 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9693 = x9691 + x9692;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9694 = x9631 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9695 = x9693 + x9694;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9696 = x9635 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9697 = x9695 + x9696;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9698 = x9639 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9699 = x9697 + x9698;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9700 = x9361 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9701 = x9358 + x9700;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9702 = x9364 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9703 = x9701 + x9702;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9704 = x9367 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9705 = x9703 + x9704;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9706 = x9370 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9707 = x9705 + x9706;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9708 = x9373 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9709 = x9707 + x9708;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9710 = x9376 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9711 = x9709 + x9710;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9712 = x9379 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9713 = x9711 + x9712;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9714 = x9382 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9715 = x9713 + x9714;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9716 = x9385 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9717 = x9715 + x9716;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9718 = x9388 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9719 = x9717 + x9718;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9720 = x9391 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9721 = x9719 + x9720;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9722 = x9394 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9723 = x9721 + x9722;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9724 = x9397 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9725 = x9723 + x9724;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9726 = x9400 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9727 = x9725 + x9726;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9728 = x9403 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9729 = x9727 + x9728;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9730 = x9409 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9731 = x9406 + x9730;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9732 = x9412 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9733 = x9731 + x9732;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9734 = x9415 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9735 = x9733 + x9734;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9736 = x9418 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9737 = x9735 + x9736;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9738 = x9421 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9739 = x9737 + x9738;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9740 = x9424 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9741 = x9739 + x9740;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9742 = x9427 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9743 = x9741 + x9742;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9744 = x9430 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9745 = x9743 + x9744;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9746 = x9433 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9747 = x9745 + x9746;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9748 = x9436 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9749 = x9747 + x9748;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9750 = x9439 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9751 = x9749 + x9750;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9752 = x9442 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9753 = x9751 + x9752;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9754 = x9445 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9755 = x9753 + x9754;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9756 = x9448 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9757 = x9755 + x9756;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x9758 = x9451 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x9759 = x9757 + x9758;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x9760 = x9669 + x9729;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x9761 = x9699 + x9759;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x9762 = x9481 + x9760;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x9763 = x9511 + x9761;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x9764 = x9002 + x9762;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x9765 = x9003 + x9763;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x9766 = x8661 + x9764;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x9767 = x8742 + x9765;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9768 = x8746 * x8778;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9769 = x2352 - x8810;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9770 = x9768 * x9769;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9771 = x2352 - x8778;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9772 = x8746 * x9771;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9773 = x9772 * x8810;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9774 = x9770 + x9773;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9775 = x2352 - x8746;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9776 = x9775 * x8778;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9777 = x9776 * x8810;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9778 = x9774 + x9777;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9779 = x9768 * x8810;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9780 = x9778 + x9779;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9781 = x8747 * x8779;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9782 = x2352 - x8811;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9783 = x9781 * x9782;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9784 = x2352 - x8779;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9785 = x8747 * x9784;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9786 = x9785 * x8811;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9787 = x9783 + x9786;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9788 = x2352 - x8747;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9789 = x9788 * x8779;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9790 = x9789 * x8811;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9791 = x9787 + x9790;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9792 = x9781 * x8811;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9793 = x9791 + x9792;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9794 = x8748 * x8780;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9795 = x2352 - x8812;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9796 = x9794 * x9795;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9797 = x2352 - x8780;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9798 = x8748 * x9797;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9799 = x9798 * x8812;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9800 = x9796 + x9799;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9801 = x2352 - x8748;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9802 = x9801 * x8780;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9803 = x9802 * x8812;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9804 = x9800 + x9803;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9805 = x9794 * x8812;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9806 = x9804 + x9805;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9807 = x8749 * x8781;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9808 = x2352 - x8813;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9809 = x9807 * x9808;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9810 = x2352 - x8781;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9811 = x8749 * x9810;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9812 = x9811 * x8813;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9813 = x9809 + x9812;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9814 = x2352 - x8749;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9815 = x9814 * x8781;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9816 = x9815 * x8813;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9817 = x9813 + x9816;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9818 = x9807 * x8813;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9819 = x9817 + x9818;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9820 = x8750 * x8782;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9821 = x2352 - x8814;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9822 = x9820 * x9821;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9823 = x2352 - x8782;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9824 = x8750 * x9823;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9825 = x9824 * x8814;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9826 = x9822 + x9825;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9827 = x2352 - x8750;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9828 = x9827 * x8782;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9829 = x9828 * x8814;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9830 = x9826 + x9829;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9831 = x9820 * x8814;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9832 = x9830 + x9831;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9833 = x8751 * x8783;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9834 = x2352 - x8815;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9835 = x9833 * x9834;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9836 = x2352 - x8783;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9837 = x8751 * x9836;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9838 = x9837 * x8815;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9839 = x9835 + x9838;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9840 = x2352 - x8751;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9841 = x9840 * x8783;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9842 = x9841 * x8815;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9843 = x9839 + x9842;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9844 = x9833 * x8815;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9845 = x9843 + x9844;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9846 = x8752 * x8784;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9847 = x2352 - x8816;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9848 = x9846 * x9847;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9849 = x2352 - x8784;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9850 = x8752 * x9849;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9851 = x9850 * x8816;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9852 = x9848 + x9851;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9853 = x2352 - x8752;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9854 = x9853 * x8784;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9855 = x9854 * x8816;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9856 = x9852 + x9855;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9857 = x9846 * x8816;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9858 = x9856 + x9857;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9859 = x8753 * x8785;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9860 = x2352 - x8817;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9861 = x9859 * x9860;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9862 = x2352 - x8785;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9863 = x8753 * x9862;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9864 = x9863 * x8817;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9865 = x9861 + x9864;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9866 = x2352 - x8753;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9867 = x9866 * x8785;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9868 = x9867 * x8817;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9869 = x9865 + x9868;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9870 = x9859 * x8817;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9871 = x9869 + x9870;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9872 = x8754 * x8786;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9873 = x2352 - x8818;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9874 = x9872 * x9873;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9875 = x2352 - x8786;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9876 = x8754 * x9875;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9877 = x9876 * x8818;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9878 = x9874 + x9877;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9879 = x2352 - x8754;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9880 = x9879 * x8786;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9881 = x9880 * x8818;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9882 = x9878 + x9881;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9883 = x9872 * x8818;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9884 = x9882 + x9883;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9885 = x8755 * x8787;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9886 = x2352 - x8819;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9887 = x9885 * x9886;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9888 = x2352 - x8787;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9889 = x8755 * x9888;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9890 = x9889 * x8819;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9891 = x9887 + x9890;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9892 = x2352 - x8755;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9893 = x9892 * x8787;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9894 = x9893 * x8819;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9895 = x9891 + x9894;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9896 = x9885 * x8819;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9897 = x9895 + x9896;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9898 = x8756 * x8788;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9899 = x2352 - x8820;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9900 = x9898 * x9899;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9901 = x2352 - x8788;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9902 = x8756 * x9901;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9903 = x9902 * x8820;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9904 = x9900 + x9903;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9905 = x2352 - x8756;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9906 = x9905 * x8788;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9907 = x9906 * x8820;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9908 = x9904 + x9907;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9909 = x9898 * x8820;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9910 = x9908 + x9909;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9911 = x8757 * x8789;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9912 = x2352 - x8821;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9913 = x9911 * x9912;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9914 = x2352 - x8789;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9915 = x8757 * x9914;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9916 = x9915 * x8821;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9917 = x9913 + x9916;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9918 = x2352 - x8757;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9919 = x9918 * x8789;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9920 = x9919 * x8821;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9921 = x9917 + x9920;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9922 = x9911 * x8821;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9923 = x9921 + x9922;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9924 = x8758 * x8790;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9925 = x2352 - x8822;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9926 = x9924 * x9925;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9927 = x2352 - x8790;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9928 = x8758 * x9927;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9929 = x9928 * x8822;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9930 = x9926 + x9929;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9931 = x2352 - x8758;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9932 = x9931 * x8790;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9933 = x9932 * x8822;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9934 = x9930 + x9933;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9935 = x9924 * x8822;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9936 = x9934 + x9935;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9937 = x8759 * x8791;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9938 = x2352 - x8823;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9939 = x9937 * x9938;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9940 = x2352 - x8791;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9941 = x8759 * x9940;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9942 = x9941 * x8823;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9943 = x9939 + x9942;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9944 = x2352 - x8759;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9945 = x9944 * x8791;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9946 = x9945 * x8823;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9947 = x9943 + x9946;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9948 = x9937 * x8823;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9949 = x9947 + x9948;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9950 = x8760 * x8792;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9951 = x2352 - x8824;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9952 = x9950 * x9951;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9953 = x2352 - x8792;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9954 = x8760 * x9953;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9955 = x9954 * x8824;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9956 = x9952 + x9955;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9957 = x2352 - x8760;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9958 = x9957 * x8792;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9959 = x9958 * x8824;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9960 = x9956 + x9959;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9961 = x9950 * x8824;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9962 = x9960 + x9961;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9963 = x8761 * x8793;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9964 = x2352 - x8825;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9965 = x9963 * x9964;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9966 = x2352 - x8793;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9967 = x8761 * x9966;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9968 = x9967 * x8825;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9969 = x9965 + x9968;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9970 = x2352 - x8761;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9971 = x9970 * x8793;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9972 = x9971 * x8825;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9973 = x9969 + x9972;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9974 = x9963 * x8825;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9975 = x9973 + x9974;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9976 = x8762 * x8794;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9977 = x2352 - x8826;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9978 = x9976 * x9977;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9979 = x2352 - x8794;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9980 = x8762 * x9979;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9981 = x9980 * x8826;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9982 = x9978 + x9981;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9983 = x2352 - x8762;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9984 = x9983 * x8794;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9985 = x9984 * x8826;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9986 = x9982 + x9985;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x9987 = x9976 * x8826;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9988 = x9986 + x9987;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9989 = x8763 * x8795;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x9990 = x2352 - x8827;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9991 = x9989 * x9990;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x9992 = x2352 - x8795;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9993 = x8763 * x9992;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x9994 = x9993 * x8827;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9995 = x9991 + x9994;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x9996 = x2352 - x8763;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9997 = x9996 * x8795;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x9998 = x9997 * x8827;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x9999 = x9995 + x9998;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x10000 = x9989 * x8827;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10001 = x9999 + x10000;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10002 = x8764 * x8796;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x10003 = x2352 - x8828;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10004 = x10002 * x10003;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x10005 = x2352 - x8796;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10006 = x8764 * x10005;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10007 = x10006 * x8828;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10008 = x10004 + x10007;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x10009 = x2352 - x8764;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10010 = x10009 * x8796;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10011 = x10010 * x8828;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10012 = x10008 + x10011;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x10013 = x10002 * x8828;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10014 = x10012 + x10013;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10015 = x8765 * x8797;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x10016 = x2352 - x8829;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10017 = x10015 * x10016;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x10018 = x2352 - x8797;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10019 = x8765 * x10018;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10020 = x10019 * x8829;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10021 = x10017 + x10020;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x10022 = x2352 - x8765;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10023 = x10022 * x8797;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10024 = x10023 * x8829;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10025 = x10021 + x10024;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x10026 = x10015 * x8829;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10027 = x10025 + x10026;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10028 = x8766 * x8798;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x10029 = x2352 - x8830;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10030 = x10028 * x10029;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x10031 = x2352 - x8798;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10032 = x8766 * x10031;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10033 = x10032 * x8830;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10034 = x10030 + x10033;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x10035 = x2352 - x8766;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10036 = x10035 * x8798;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10037 = x10036 * x8830;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10038 = x10034 + x10037;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x10039 = x10028 * x8830;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10040 = x10038 + x10039;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10041 = x8767 * x8799;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x10042 = x2352 - x8831;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10043 = x10041 * x10042;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x10044 = x2352 - x8799;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10045 = x8767 * x10044;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10046 = x10045 * x8831;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10047 = x10043 + x10046;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x10048 = x2352 - x8767;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10049 = x10048 * x8799;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10050 = x10049 * x8831;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10051 = x10047 + x10050;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x10052 = x10041 * x8831;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10053 = x10051 + x10052;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10054 = x8768 * x8800;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x10055 = x2352 - x8832;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10056 = x10054 * x10055;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x10057 = x2352 - x8800;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10058 = x8768 * x10057;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10059 = x10058 * x8832;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10060 = x10056 + x10059;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x10061 = x2352 - x8768;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10062 = x10061 * x8800;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10063 = x10062 * x8832;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10064 = x10060 + x10063;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x10065 = x10054 * x8832;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10066 = x10064 + x10065;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10067 = x8769 * x8801;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x10068 = x2352 - x8833;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10069 = x10067 * x10068;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x10070 = x2352 - x8801;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10071 = x8769 * x10070;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10072 = x10071 * x8833;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10073 = x10069 + x10072;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x10074 = x2352 - x8769;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10075 = x10074 * x8801;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10076 = x10075 * x8833;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10077 = x10073 + x10076;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x10078 = x10067 * x8833;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10079 = x10077 + x10078;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10080 = x8770 * x8802;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x10081 = x2352 - x8834;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10082 = x10080 * x10081;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x10083 = x2352 - x8802;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10084 = x8770 * x10083;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10085 = x10084 * x8834;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10086 = x10082 + x10085;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x10087 = x2352 - x8770;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10088 = x10087 * x8802;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10089 = x10088 * x8834;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10090 = x10086 + x10089;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x10091 = x10080 * x8834;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10092 = x10090 + x10091;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10093 = x8771 * x8803;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x10094 = x2352 - x8835;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10095 = x10093 * x10094;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x10096 = x2352 - x8803;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10097 = x8771 * x10096;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10098 = x10097 * x8835;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10099 = x10095 + x10098;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x10100 = x2352 - x8771;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10101 = x10100 * x8803;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10102 = x10101 * x8835;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10103 = x10099 + x10102;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x10104 = x10093 * x8835;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10105 = x10103 + x10104;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10106 = x8772 * x8804;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x10107 = x2352 - x8836;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10108 = x10106 * x10107;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x10109 = x2352 - x8804;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10110 = x8772 * x10109;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10111 = x10110 * x8836;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10112 = x10108 + x10111;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x10113 = x2352 - x8772;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10114 = x10113 * x8804;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10115 = x10114 * x8836;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10116 = x10112 + x10115;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x10117 = x10106 * x8836;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10118 = x10116 + x10117;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10119 = x8773 * x8805;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x10120 = x2352 - x8837;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10121 = x10119 * x10120;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x10122 = x2352 - x8805;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10123 = x8773 * x10122;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10124 = x10123 * x8837;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10125 = x10121 + x10124;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x10126 = x2352 - x8773;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10127 = x10126 * x8805;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10128 = x10127 * x8837;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10129 = x10125 + x10128;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x10130 = x10119 * x8837;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10131 = x10129 + x10130;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10132 = x8774 * x8806;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x10133 = x2352 - x8838;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10134 = x10132 * x10133;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x10135 = x2352 - x8806;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10136 = x8774 * x10135;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10137 = x10136 * x8838;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10138 = x10134 + x10137;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x10139 = x2352 - x8774;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10140 = x10139 * x8806;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10141 = x10140 * x8838;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10142 = x10138 + x10141;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x10143 = x10132 * x8838;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10144 = x10142 + x10143;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10145 = x8775 * x8807;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x10146 = x2352 - x8839;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10147 = x10145 * x10146;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x10148 = x2352 - x8807;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10149 = x8775 * x10148;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10150 = x10149 * x8839;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10151 = x10147 + x10150;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x10152 = x2352 - x8775;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10153 = x10152 * x8807;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10154 = x10153 * x8839;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10155 = x10151 + x10154;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x10156 = x10145 * x8839;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10157 = x10155 + x10156;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10158 = x8776 * x8808;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x10159 = x2352 - x8840;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10160 = x10158 * x10159;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x10161 = x2352 - x8808;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10162 = x8776 * x10161;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10163 = x10162 * x8840;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10164 = x10160 + x10163;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x10165 = x2352 - x8776;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10166 = x10165 * x8808;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10167 = x10166 * x8840;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10168 = x10164 + x10167;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x10169 = x10158 * x8840;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10170 = x10168 + x10169;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10171 = x8777 * x8809;
      // loc("zirgen/circuit/recursion/sha.cpp":55:29)
      auto x10172 = x2352 - x8841;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10173 = x10171 * x10172;
      // loc("zirgen/circuit/recursion/sha.cpp":55:49)
      auto x10174 = x2352 - x8809;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10175 = x8777 * x10174;
      // loc("zirgen/circuit/recursion/sha.cpp":55:41)
      auto x10176 = x10175 * x8841;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10177 = x10173 + x10176;
      // loc("zirgen/circuit/recursion/sha.cpp":55:69)
      auto x10178 = x2352 - x8777;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10179 = x10178 * x8809;
      // loc("zirgen/circuit/recursion/sha.cpp":55:68)
      auto x10180 = x10179 * x8841;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10181 = x10177 + x10180;
      // loc("zirgen/circuit/recursion/sha.cpp":56:14)
      auto x10182 = x10171 * x8841;
      // loc("zirgen/circuit/recursion/sha.cpp":55:14)
      auto x10183 = x10181 + x10182;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10184 = x9793 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10185 = x9780 + x10184;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10186 = x9806 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10187 = x10185 + x10186;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10188 = x9819 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10189 = x10187 + x10188;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10190 = x9832 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10191 = x10189 + x10190;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10192 = x9845 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10193 = x10191 + x10192;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10194 = x9858 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10195 = x10193 + x10194;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10196 = x9871 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10197 = x10195 + x10196;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10198 = x9884 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10199 = x10197 + x10198;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10200 = x9897 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10201 = x10199 + x10200;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10202 = x9910 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10203 = x10201 + x10202;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10204 = x9923 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10205 = x10203 + x10204;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10206 = x9936 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10207 = x10205 + x10206;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10208 = x9949 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10209 = x10207 + x10208;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10210 = x9962 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10211 = x10209 + x10210;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10212 = x9975 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10213 = x10211 + x10212;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10214 = x10001 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10215 = x9988 + x10214;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10216 = x10014 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10217 = x10215 + x10216;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10218 = x10027 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10219 = x10217 + x10218;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10220 = x10040 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10221 = x10219 + x10220;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10222 = x10053 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10223 = x10221 + x10222;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10224 = x10066 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10225 = x10223 + x10224;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10226 = x10079 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10227 = x10225 + x10226;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10228 = x10092 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10229 = x10227 + x10228;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10230 = x10105 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10231 = x10229 + x10230;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10232 = x10118 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10233 = x10231 + x10232;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10234 = x10131 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10235 = x10233 + x10234;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10236 = x10144 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10237 = x10235 + x10236;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10238 = x10157 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10239 = x10237 + x10238;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10240 = x10170 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10241 = x10239 + x10240;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10242 = x10183 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10243 = x10241 + x10242;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10244 = x9137 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10245 = x9134 + x10244;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10246 = x9140 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10247 = x10245 + x10246;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10248 = x9143 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10249 = x10247 + x10248;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10250 = x9146 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10251 = x10249 + x10250;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10252 = x9149 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10253 = x10251 + x10252;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10254 = x9152 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10255 = x10253 + x10254;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10256 = x9155 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10257 = x10255 + x10256;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10258 = x9158 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10259 = x10257 + x10258;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10260 = x9161 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10261 = x10259 + x10260;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10262 = x9164 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10263 = x10261 + x10262;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10264 = x9167 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10265 = x10263 + x10264;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10266 = x9170 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10267 = x10265 + x10266;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10268 = x9173 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10269 = x10267 + x10268;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10270 = x9176 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10271 = x10269 + x10270;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10272 = x9179 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10273 = x10271 + x10272;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10274 = x9185 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10275 = x9182 + x10274;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10276 = x9188 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10277 = x10275 + x10276;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10278 = x9191 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10279 = x10277 + x10278;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10280 = x9194 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10281 = x10279 + x10280;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10282 = x9197 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10283 = x10281 + x10282;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10284 = x9200 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10285 = x10283 + x10284;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10286 = x9203 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10287 = x10285 + x10286;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10288 = x9206 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10289 = x10287 + x10288;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10290 = x9209 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10291 = x10289 + x10290;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10292 = x9212 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10293 = x10291 + x10292;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10294 = x9215 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10295 = x10293 + x10294;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10296 = x9218 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10297 = x10295 + x10296;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10298 = x9221 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10299 = x10297 + x10298;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10300 = x9224 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10301 = x10299 + x10300;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10302 = x9227 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10303 = x10301 + x10302;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x10304 = x10213 + x10273;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x10305 = x10243 + x10303;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x10306 = x9766 + x10304;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x10307 = x9767 + x10305;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10308 = x8843 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10309 = x8842 + x10308;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10310 = x8844 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10311 = x10309 + x10310;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10312 = x8845 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10313 = x10311 + x10312;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10314 = x8846 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10315 = x10313 + x10314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10316 = x8847 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10317 = x10315 + x10316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10318 = x8848 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10319 = x10317 + x10318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10320 = x8849 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10321 = x10319 + x10320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10322 = x8850 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10323 = x10321 + x10322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10324 = x8851 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10325 = x10323 + x10324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10326 = x8852 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10327 = x10325 + x10326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10328 = x8853 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10329 = x10327 + x10328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10330 = x8854 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10331 = x10329 + x10330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10332 = x8855 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10333 = x10331 + x10332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10334 = x8856 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10335 = x10333 + x10334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10336 = x8857 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10337 = x10335 + x10336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10338 = x8859 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10339 = x8858 + x10338;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10340 = x8860 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10341 = x10339 + x10340;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10342 = x8861 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10343 = x10341 + x10342;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10344 = x8862 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10345 = x10343 + x10344;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10346 = x8863 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10347 = x10345 + x10346;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10348 = x8864 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10349 = x10347 + x10348;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10350 = x8865 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10351 = x10349 + x10350;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10352 = x8866 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10353 = x10351 + x10352;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10354 = x8867 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10355 = x10353 + x10354;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10356 = x8868 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10357 = x10355 + x10356;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10358 = x8869 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10359 = x10357 + x10358;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10360 = x8870 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10361 = x10359 + x10360;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10362 = x8871 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10363 = x10361 + x10362;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10364 = x8872 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10365 = x10363 + x10364;
      // loc("zirgen/circuit/recursion/sha.cpp":74:25)
      auto x10366 = x8873 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":74:16)
      auto x10367 = x10365 + x10366;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x10368 = x9766 + x10337;
      // loc("zirgen/circuit/recursion/sha.cpp":83:14)
      auto x10369 = x9767 + x10367;
      // loc("zirgen/circuit/recursion/sha.cpp":290:5)
      {
        auto& reg = args[2][58 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10306);
        reg = x10306;
      }
      // loc("zirgen/circuit/recursion/sha.cpp":291:5)
      {
        auto& reg = args[2][92 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10368);
        reg = x10368;
      }
      // loc("zirgen/circuit/recursion/sha.cpp":290:5)
      {
        auto& reg = args[2][59 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10307);
        reg = x10307;
      }
      // loc("zirgen/circuit/recursion/sha.cpp":291:5)
      {
        auto& reg = args[2][93 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10369);
        reg = x10369;
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a_raw[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10370 = args[2][58 * steps + ((cycle - 0) & mask)];
      assert(x10370 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a_raw[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10371 = args[2][59 * steps + ((cycle - 0) & mask)];
      assert(x10371 != Fp::invalid());
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10372 = Fp(x10370.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10372);
          reg = x10372;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10373 = Fp(x10370.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10374 = x10373 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10374);
          reg = x10374;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10375 = Fp(x10370.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10376 = x10375 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10376);
          reg = x10376;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10377 = Fp(x10370.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10378 = x10377 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10378);
          reg = x10378;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10379 = Fp(x10370.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10380 = x10379 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10380);
          reg = x10380;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10381 = Fp(x10370.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10382 = x10381 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10382);
          reg = x10382;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10383 = Fp(x10370.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10384 = x10383 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10384);
          reg = x10384;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10385 = Fp(x10370.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10386 = x10385 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10386);
          reg = x10386;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10387 = Fp(x10370.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10388 = x10387 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10388);
          reg = x10388;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10389 = Fp(x10370.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10390 = x10389 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10390);
          reg = x10390;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10391 = Fp(x10370.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10392 = x10391 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10392);
          reg = x10392;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10393 = Fp(x10370.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10394 = x10393 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][37 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10394);
          reg = x10394;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10395 = Fp(x10370.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10396 = x10395 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][38 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10396);
          reg = x10396;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10397 = Fp(x10370.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10398 = x10397 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][39 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10398);
          reg = x10398;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10399 = Fp(x10370.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10400 = x10399 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][40 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10400);
          reg = x10400;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10401 = Fp(x10370.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10402 = x10401 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][41 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10402);
          reg = x10402;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10403 = args[2][26 * steps + ((cycle - 0) & mask)];
      assert(x10403 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10404 = args[2][27 * steps + ((cycle - 0) & mask)];
      assert(x10404 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10405 = x10404 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10406 = x10403 + x10405;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10407 = args[2][28 * steps + ((cycle - 0) & mask)];
      assert(x10407 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10408 = x10407 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10409 = x10406 + x10408;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10410 = args[2][29 * steps + ((cycle - 0) & mask)];
      assert(x10410 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10411 = x10410 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10412 = x10409 + x10411;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10413 = args[2][30 * steps + ((cycle - 0) & mask)];
      assert(x10413 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10414 = x10413 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10415 = x10412 + x10414;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10416 = args[2][31 * steps + ((cycle - 0) & mask)];
      assert(x10416 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10417 = x10416 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10418 = x10415 + x10417;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10419 = args[2][32 * steps + ((cycle - 0) & mask)];
      assert(x10419 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10420 = x10419 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10421 = x10418 + x10420;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10422 = args[2][33 * steps + ((cycle - 0) & mask)];
      assert(x10422 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10423 = x10422 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10424 = x10421 + x10423;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10425 = args[2][34 * steps + ((cycle - 0) & mask)];
      assert(x10425 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10426 = x10425 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10427 = x10424 + x10426;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10428 = args[2][35 * steps + ((cycle - 0) & mask)];
      assert(x10428 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10429 = x10428 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10430 = x10427 + x10429;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10431 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x10431 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10432 = x10431 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10433 = x10430 + x10432;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10434 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x10434 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10435 = x10434 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10436 = x10433 + x10435;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10437 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x10437 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10438 = x10437 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10439 = x10436 + x10438;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10440 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x10440 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10441 = x10440 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10442 = x10439 + x10441;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10443 = args[2][40 * steps + ((cycle - 0) & mask)];
      assert(x10443 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10444 = x10443 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10445 = x10442 + x10444;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10446 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x10446 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10447 = x10446 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10448 = x10445 + x10447;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x10449 = x10370 - x10448;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x10450 = x10449 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":124:26)
        auto x10451 = Fp(x10450.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][5 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10451);
          reg = x10451;
        }
      }
      // loc("zirgen/circuit/recursion/sha.cpp":127:32)
      auto x10452 = x10371 + x10450;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10453 = Fp(x10452.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][42 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10453);
          reg = x10453;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10454 = Fp(x10452.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10455 = x10454 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][43 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10455);
          reg = x10455;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10456 = Fp(x10452.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10457 = x10456 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][44 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10457);
          reg = x10457;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10458 = Fp(x10452.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10459 = x10458 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][45 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10459);
          reg = x10459;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10460 = Fp(x10452.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10461 = x10460 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][46 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10461);
          reg = x10461;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10462 = Fp(x10452.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10463 = x10462 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][47 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10463);
          reg = x10463;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10464 = Fp(x10452.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10465 = x10464 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][48 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10465);
          reg = x10465;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10466 = Fp(x10452.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10467 = x10466 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][49 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10467);
          reg = x10467;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10468 = Fp(x10452.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10469 = x10468 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][50 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10469);
          reg = x10469;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10470 = Fp(x10452.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10471 = x10470 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][51 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10471);
          reg = x10471;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10472 = Fp(x10452.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10473 = x10472 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][52 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10473);
          reg = x10473;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10474 = Fp(x10452.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10475 = x10474 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][53 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10475);
          reg = x10475;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10476 = Fp(x10452.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10477 = x10476 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][54 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10477);
          reg = x10477;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10478 = Fp(x10452.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10479 = x10478 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][55 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10479);
          reg = x10479;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10480 = Fp(x10452.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10481 = x10480 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][56 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10481);
          reg = x10481;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10482 = Fp(x10452.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10483 = x10482 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][57 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10483);
          reg = x10483;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10484 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x10484 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10485 = args[2][43 * steps + ((cycle - 0) & mask)];
      assert(x10485 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10486 = x10485 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10487 = x10484 + x10486;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10488 = args[2][44 * steps + ((cycle - 0) & mask)];
      assert(x10488 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10489 = x10488 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10490 = x10487 + x10489;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10491 = args[2][45 * steps + ((cycle - 0) & mask)];
      assert(x10491 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10492 = x10491 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10493 = x10490 + x10492;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10494 = args[2][46 * steps + ((cycle - 0) & mask)];
      assert(x10494 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10495 = x10494 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10496 = x10493 + x10495;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10497 = args[2][47 * steps + ((cycle - 0) & mask)];
      assert(x10497 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10498 = x10497 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10499 = x10496 + x10498;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10500 = args[2][48 * steps + ((cycle - 0) & mask)];
      assert(x10500 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10501 = x10500 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10502 = x10499 + x10501;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10503 = args[2][49 * steps + ((cycle - 0) & mask)];
      assert(x10503 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10504 = x10503 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10505 = x10502 + x10504;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10506 = args[2][50 * steps + ((cycle - 0) & mask)];
      assert(x10506 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10507 = x10506 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10508 = x10505 + x10507;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10509 = args[2][51 * steps + ((cycle - 0) & mask)];
      assert(x10509 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10510 = x10509 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10511 = x10508 + x10510;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10512 = args[2][52 * steps + ((cycle - 0) & mask)];
      assert(x10512 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10513 = x10512 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10514 = x10511 + x10513;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10515 = args[2][53 * steps + ((cycle - 0) & mask)];
      assert(x10515 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10516 = x10515 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10517 = x10514 + x10516;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10518 = args[2][54 * steps + ((cycle - 0) & mask)];
      assert(x10518 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10519 = x10518 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10520 = x10517 + x10519;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10521 = args[2][55 * steps + ((cycle - 0) & mask)];
      assert(x10521 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10522 = x10521 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10523 = x10520 + x10522;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10524 = args[2][56 * steps + ((cycle - 0) & mask)];
      assert(x10524 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10525 = x10524 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10526 = x10523 + x10525;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/a[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10527 = args[2][57 * steps + ((cycle - 0) & mask)];
      assert(x10527 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10528 = x10527 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10529 = x10526 + x10528;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x10530 = x10452 - x10529;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x10531 = x10530 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":128:27)
        auto x10532 = Fp(x10531.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10532);
          reg = x10532;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e_raw[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10533 = args[2][92 * steps + ((cycle - 0) & mask)];
      assert(x10533 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e_raw[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10534 = args[2][93 * steps + ((cycle - 0) & mask)];
      assert(x10534 != Fp::invalid());
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10535 = Fp(x10533.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][60 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10535);
          reg = x10535;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10536 = Fp(x10533.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10537 = x10536 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][61 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10537);
          reg = x10537;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10538 = Fp(x10533.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10539 = x10538 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][62 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10539);
          reg = x10539;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10540 = Fp(x10533.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10541 = x10540 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][63 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10541);
          reg = x10541;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10542 = Fp(x10533.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10543 = x10542 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][64 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10543);
          reg = x10543;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10544 = Fp(x10533.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10545 = x10544 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][65 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10545);
          reg = x10545;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10546 = Fp(x10533.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10547 = x10546 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][66 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10547);
          reg = x10547;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10548 = Fp(x10533.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10549 = x10548 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][67 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10549);
          reg = x10549;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10550 = Fp(x10533.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10551 = x10550 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][68 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10551);
          reg = x10551;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10552 = Fp(x10533.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10553 = x10552 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][69 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10553);
          reg = x10553;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10554 = Fp(x10533.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10555 = x10554 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10555);
          reg = x10555;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10556 = Fp(x10533.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10557 = x10556 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10557);
          reg = x10557;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10558 = Fp(x10533.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10559 = x10558 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][72 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10559);
          reg = x10559;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10560 = Fp(x10533.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10561 = x10560 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10561);
          reg = x10561;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10562 = Fp(x10533.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10563 = x10562 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10563);
          reg = x10563;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10564 = Fp(x10533.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10565 = x10564 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10565);
          reg = x10565;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[0](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10566 = args[2][60 * steps + ((cycle - 0) & mask)];
      assert(x10566 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[1](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10567 = args[2][61 * steps + ((cycle - 0) & mask)];
      assert(x10567 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10568 = x10567 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10569 = x10566 + x10568;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[2](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10570 = args[2][62 * steps + ((cycle - 0) & mask)];
      assert(x10570 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10571 = x10570 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10572 = x10569 + x10571;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[3](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10573 = args[2][63 * steps + ((cycle - 0) & mask)];
      assert(x10573 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10574 = x10573 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10575 = x10572 + x10574;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[4](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10576 = args[2][64 * steps + ((cycle - 0) & mask)];
      assert(x10576 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10577 = x10576 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10578 = x10575 + x10577;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[5](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10579 = args[2][65 * steps + ((cycle - 0) & mask)];
      assert(x10579 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10580 = x10579 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10581 = x10578 + x10580;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[6](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10582 = args[2][66 * steps + ((cycle - 0) & mask)];
      assert(x10582 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10583 = x10582 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10584 = x10581 + x10583;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[7](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10585 = args[2][67 * steps + ((cycle - 0) & mask)];
      assert(x10585 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10586 = x10585 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10587 = x10584 + x10586;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[8](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10588 = args[2][68 * steps + ((cycle - 0) & mask)];
      assert(x10588 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10589 = x10588 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10590 = x10587 + x10589;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[9](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10591 = args[2][69 * steps + ((cycle - 0) & mask)];
      assert(x10591 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10592 = x10591 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10593 = x10590 + x10592;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[10](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10594 = args[2][70 * steps + ((cycle - 0) & mask)];
      assert(x10594 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10595 = x10594 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10596 = x10593 + x10595;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[11](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10597 = args[2][71 * steps + ((cycle - 0) & mask)];
      assert(x10597 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10598 = x10597 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10599 = x10596 + x10598;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[12](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10600 = args[2][72 * steps + ((cycle - 0) & mask)];
      assert(x10600 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10601 = x10600 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10602 = x10599 + x10601;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[13](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10603 = args[2][73 * steps + ((cycle - 0) & mask)];
      assert(x10603 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10604 = x10603 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10605 = x10602 + x10604;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[14](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10606 = args[2][74 * steps + ((cycle - 0) & mask)];
      assert(x10606 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10607 = x10606 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10608 = x10605 + x10607;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[15](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10609 = args[2][75 * steps + ((cycle - 0) & mask)];
      assert(x10609 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10610 = x10609 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10611 = x10608 + x10610;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x10612 = x10533 - x10611;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x10613 = x10612 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":124:26)
        auto x10614 = Fp(x10613.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10614);
          reg = x10614;
        }
      }
      // loc("zirgen/circuit/recursion/sha.cpp":127:32)
      auto x10615 = x10534 + x10613;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10616 = Fp(x10615.asUInt32() & x2352.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10616);
          reg = x10616;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10617 = Fp(x10615.asUInt32() & x2351.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10618 = x10617 * x2339;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10618);
          reg = x10618;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10619 = Fp(x10615.asUInt32() & x2349.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10620 = x10619 * x2338;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10620);
          reg = x10620;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10621 = Fp(x10615.asUInt32() & x2345.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10622 = x10621 * x2337;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10622);
          reg = x10622;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10623 = Fp(x10615.asUInt32() & x2336.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10624 = x10623 * x2335;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10624);
          reg = x10624;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10625 = Fp(x10615.asUInt32() & x2334.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10626 = x10625 * x2333;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10626);
          reg = x10626;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10627 = Fp(x10615.asUInt32() & x2332.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10628 = x10627 * x2331;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10628);
          reg = x10628;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10629 = Fp(x10615.asUInt32() & x2330.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10630 = x10629 * x2329;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10630);
          reg = x10630;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10631 = Fp(x10615.asUInt32() & x2328.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10632 = x10631 * x2327;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10632);
          reg = x10632;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10633 = Fp(x10615.asUInt32() & x2326.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10634 = x10633 * x2325;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10634);
          reg = x10634;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10635 = Fp(x10615.asUInt32() & x2324.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10636 = x10635 * x2323;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10636);
          reg = x10636;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10637 = Fp(x10615.asUInt32() & x2322.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10638 = x10637 * x2321;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10638);
          reg = x10638;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10639 = Fp(x10615.asUInt32() & x2320.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10640 = x10639 * x2319;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10640);
          reg = x10640;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10641 = Fp(x10615.asUInt32() & x2318.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10642 = x10641 * x2317;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][89 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10642);
          reg = x10642;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10643 = Fp(x10615.asUInt32() & x2316.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10644 = x10643 * x2315;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][90 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10644);
          reg = x10644;
        }
        // loc("zirgen/circuit/recursion/sha.cpp":99:29)
        auto x10645 = Fp(x10615.asUInt32() & x2314.asUInt32());
        // loc("zirgen/circuit/recursion/sha.cpp":99:28)
        auto x10646 = x10645 * x2313;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = args[2][91 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10646);
          reg = x10646;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[16](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10647 = args[2][76 * steps + ((cycle - 0) & mask)];
      assert(x10647 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[17](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10648 = args[2][77 * steps + ((cycle - 0) & mask)];
      assert(x10648 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10649 = x10648 * x2351;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10650 = x10647 + x10649;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[18](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10651 = args[2][78 * steps + ((cycle - 0) & mask)];
      assert(x10651 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10652 = x10651 * x2349;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10653 = x10650 + x10652;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[19](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10654 = args[2][79 * steps + ((cycle - 0) & mask)];
      assert(x10654 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10655 = x10654 * x2345;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10656 = x10653 + x10655;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[20](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10657 = args[2][80 * steps + ((cycle - 0) & mask)];
      assert(x10657 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10658 = x10657 * x2336;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10659 = x10656 + x10658;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[21](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10660 = args[2][81 * steps + ((cycle - 0) & mask)];
      assert(x10660 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10661 = x10660 * x2334;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10662 = x10659 + x10661;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[22](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10663 = args[2][82 * steps + ((cycle - 0) & mask)];
      assert(x10663 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10664 = x10663 * x2332;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10665 = x10662 + x10664;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[23](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10666 = args[2][83 * steps + ((cycle - 0) & mask)];
      assert(x10666 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10667 = x10666 * x2330;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10668 = x10665 + x10667;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[24](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10669 = args[2][84 * steps + ((cycle - 0) & mask)];
      assert(x10669 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10670 = x10669 * x2328;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10671 = x10668 + x10670;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[25](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10672 = args[2][85 * steps + ((cycle - 0) & mask)];
      assert(x10672 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10673 = x10672 * x2326;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10674 = x10671 + x10673;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[26](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10675 = args[2][86 * steps + ((cycle - 0) & mask)];
      assert(x10675 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10676 = x10675 * x2324;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10677 = x10674 + x10676;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[27](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10678 = args[2][87 * steps + ((cycle - 0) & mask)];
      assert(x10678 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10679 = x10678 * x2322;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10680 = x10677 + x10679;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[28](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10681 = args[2][88 * steps + ((cycle - 0) & mask)];
      assert(x10681 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10682 = x10681 * x2320;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10683 = x10680 + x10682;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[29](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10684 = args[2][89 * steps + ((cycle - 0) & mask)];
      assert(x10684 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10685 = x10684 * x2318;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10686 = x10683 + x10685;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[30](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10687 = args[2][90 * steps + ((cycle - 0) & mask)];
      assert(x10687 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10688 = x10687 * x2316;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10689 = x10686 + x10688;
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/e[31](Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10690 = args[2][91 * steps + ((cycle - 0) & mask)];
      assert(x10690 != Fp::invalid());
      // loc("zirgen/circuit/recursion/sha.cpp":104:17)
      auto x10691 = x10690 * x2314;
      // loc("zirgen/circuit/recursion/sha.cpp":104:11)
      auto x10692 = x10689 + x10691;
      // loc("zirgen/circuit/recursion/sha.cpp":106:16)
      auto x10693 = x10615 - x10692;
      // loc("zirgen/circuit/recursion/sha.cpp":106:15)
      auto x10694 = x10693 * x2312;
      {
        // loc("zirgen/circuit/recursion/sha.cpp":128:27)
        auto x10695 = Fp(x10694.asUInt32() & x2350.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10695);
          reg = x10695;
        }
      }
    }
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/opcode(OneHot)/set_global(Reg)"("./zirgen/components/mux.h":49:25))
    auto x10696 = args[0][16 * steps + ((cycle - 0) & mask)];
    assert(x10696 != Fp::invalid());
    if (x10696 != 0) {
      // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10697 = args[0][18 * steps + ((cycle - 0) & mask)];
      assert(x10697 != Fp::invalid());
      host_args.at(0) = x10697;
      host_args.at(1) = x10697;
      host(ctx, "log", "SET_GLOBAL, writing to digest %u//2, part %u%%2", host_args.data(), 2, host_outs.data(), 0);
      {
        // loc("./zirgen/components/onehot.h":37:26)
        auto x10698 = (x10697 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = args[2][11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10698);
          reg = x10698;
        }
        // loc("./zirgen/components/onehot.h":37:26)
        auto x10699 = x10697 - x2352;
        // loc("./zirgen/components/onehot.h":37:26)
        auto x10700 = (x10699 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = args[2][12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10700);
          reg = x10700;
        }
        // loc("./zirgen/components/onehot.h":37:26)
        auto x10701 = x10697 - x2351;
        // loc("./zirgen/components/onehot.h":37:26)
        auto x10702 = (x10701 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = args[2][13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10702);
          reg = x10702;
        }
        // loc("./zirgen/components/onehot.h":37:26)
        auto x10703 = x10697 - x2350;
        // loc("./zirgen/components/onehot.h":37:26)
        auto x10704 = (x10703 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = args[2][14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10704);
          reg = x10704;
        }
      }
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/select(OneHot)/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
      auto x10705 = args[2][12 * steps + ((cycle - 0) & mask)];
      assert(x10705 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/select(OneHot)/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
      auto x10706 = args[2][13 * steps + ((cycle - 0) & mask)];
      assert(x10706 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/select(OneHot)/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
      auto x10707 = args[2][14 * steps + ((cycle - 0) & mask)];
      assert(x10707 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/select(OneHot)/hot[0](Reg)"("zirgen/circuit/recursion/macro.cpp":35:25))
      auto x10708 = args[2][11 * steps + ((cycle - 0) & mask)];
      assert(x10708 != Fp::invalid());
      if (x10708 != 0) {
        // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[0](Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
        auto x10709 = args[0][17 * steps + ((cycle - 0) & mask)];
        assert(x10709 != Fp::invalid());
        {
          host_args.at(0) = x10709;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10710 = host_outs.at(0);
          auto x10711 = host_outs.at(1);
          auto x10712 = host_outs.at(2);
          auto x10713 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][16 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10710);
            reg = x10710;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][17 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10711);
            reg = x10711;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][18 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10712);
            reg = x10712;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][19 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10713);
            reg = x10713;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10709);
          reg = x10709;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10714 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x10714 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10715 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x10715 != Fp::invalid());
        host_args.at(0) = x2353;
        host_args.at(1) = x2353;
        host_args.at(2) = x2353;
        host_args.at(3) = x10714;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][0] = x10714;
        host_args.at(0) = x2353;
        host_args.at(1) = x2353;
        host_args.at(2) = x2352;
        host_args.at(3) = x10715;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][1] = x10715;
        // loc("zirgen/circuit/recursion/macro.cpp":37:37)
        auto x10716 = x10709 + x2352;
        {
          host_args.at(0) = x10716;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10717 = host_outs.at(0);
          auto x10718 = host_outs.at(1);
          auto x10719 = host_outs.at(2);
          auto x10720 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10717);
            reg = x10717;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10718);
            reg = x10718;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10719);
            reg = x10719;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10720);
            reg = x10720;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10716);
          reg = x10716;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10721 = args[2][21 * steps + ((cycle - 0) & mask)];
        assert(x10721 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10722 = args[2][22 * steps + ((cycle - 0) & mask)];
        assert(x10722 != Fp::invalid());
        host_args.at(0) = x2353;
        host_args.at(1) = x2352;
        host_args.at(2) = x2353;
        host_args.at(3) = x10721;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][2] = x10721;
        host_args.at(0) = x2353;
        host_args.at(1) = x2352;
        host_args.at(2) = x2352;
        host_args.at(3) = x10722;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][3] = x10722;
        // loc("zirgen/circuit/recursion/macro.cpp":37:37)
        auto x10723 = x10709 + x2351;
        {
          host_args.at(0) = x10723;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10724 = host_outs.at(0);
          auto x10725 = host_outs.at(1);
          auto x10726 = host_outs.at(2);
          auto x10727 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10724);
            reg = x10724;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10725);
            reg = x10725;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10726);
            reg = x10726;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10727);
            reg = x10727;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10723);
          reg = x10723;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10728 = args[2][26 * steps + ((cycle - 0) & mask)];
        assert(x10728 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10729 = args[2][27 * steps + ((cycle - 0) & mask)];
        assert(x10729 != Fp::invalid());
        host_args.at(0) = x2353;
        host_args.at(1) = x2351;
        host_args.at(2) = x2353;
        host_args.at(3) = x10728;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][4] = x10728;
        host_args.at(0) = x2353;
        host_args.at(1) = x2351;
        host_args.at(2) = x2352;
        host_args.at(3) = x10729;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][5] = x10729;
        // loc("zirgen/circuit/recursion/macro.cpp":37:37)
        auto x10730 = x10709 + x2350;
        {
          host_args.at(0) = x10730;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10731 = host_outs.at(0);
          auto x10732 = host_outs.at(1);
          auto x10733 = host_outs.at(2);
          auto x10734 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10731);
            reg = x10731;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10732);
            reg = x10732;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10733);
            reg = x10733;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10734);
            reg = x10734;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10730);
          reg = x10730;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10735 = args[2][31 * steps + ((cycle - 0) & mask)];
        assert(x10735 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10736 = args[2][32 * steps + ((cycle - 0) & mask)];
        assert(x10736 != Fp::invalid());
        host_args.at(0) = x2353;
        host_args.at(1) = x2350;
        host_args.at(2) = x2353;
        host_args.at(3) = x10735;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][6] = x10735;
        host_args.at(0) = x2353;
        host_args.at(1) = x2350;
        host_args.at(2) = x2352;
        host_args.at(3) = x10736;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][7] = x10736;
      }
      if (x10705 != 0) {
        // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[0](Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
        auto x10737 = args[0][17 * steps + ((cycle - 0) & mask)];
        assert(x10737 != Fp::invalid());
        {
          host_args.at(0) = x10737;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10738 = host_outs.at(0);
          auto x10739 = host_outs.at(1);
          auto x10740 = host_outs.at(2);
          auto x10741 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][16 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10738);
            reg = x10738;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][17 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10739);
            reg = x10739;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][18 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10740);
            reg = x10740;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][19 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10741);
            reg = x10741;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10737);
          reg = x10737;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10742 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x10742 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10743 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x10743 != Fp::invalid());
        host_args.at(0) = x2352;
        host_args.at(1) = x2353;
        host_args.at(2) = x2353;
        host_args.at(3) = x10742;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][8] = x10742;
        host_args.at(0) = x2352;
        host_args.at(1) = x2353;
        host_args.at(2) = x2352;
        host_args.at(3) = x10743;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][9] = x10743;
        // loc("zirgen/circuit/recursion/macro.cpp":37:37)
        auto x10744 = x10737 + x2352;
        {
          host_args.at(0) = x10744;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10745 = host_outs.at(0);
          auto x10746 = host_outs.at(1);
          auto x10747 = host_outs.at(2);
          auto x10748 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10745);
            reg = x10745;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10746);
            reg = x10746;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10747);
            reg = x10747;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10748);
            reg = x10748;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10744);
          reg = x10744;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10749 = args[2][21 * steps + ((cycle - 0) & mask)];
        assert(x10749 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10750 = args[2][22 * steps + ((cycle - 0) & mask)];
        assert(x10750 != Fp::invalid());
        host_args.at(0) = x2352;
        host_args.at(1) = x2352;
        host_args.at(2) = x2353;
        host_args.at(3) = x10749;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][10] = x10749;
        host_args.at(0) = x2352;
        host_args.at(1) = x2352;
        host_args.at(2) = x2352;
        host_args.at(3) = x10750;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][11] = x10750;
        // loc("zirgen/circuit/recursion/macro.cpp":37:37)
        auto x10751 = x10737 + x2351;
        {
          host_args.at(0) = x10751;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10752 = host_outs.at(0);
          auto x10753 = host_outs.at(1);
          auto x10754 = host_outs.at(2);
          auto x10755 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10752);
            reg = x10752;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10753);
            reg = x10753;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10754);
            reg = x10754;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10755);
            reg = x10755;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10751);
          reg = x10751;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10756 = args[2][26 * steps + ((cycle - 0) & mask)];
        assert(x10756 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10757 = args[2][27 * steps + ((cycle - 0) & mask)];
        assert(x10757 != Fp::invalid());
        host_args.at(0) = x2352;
        host_args.at(1) = x2351;
        host_args.at(2) = x2353;
        host_args.at(3) = x10756;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][12] = x10756;
        host_args.at(0) = x2352;
        host_args.at(1) = x2351;
        host_args.at(2) = x2352;
        host_args.at(3) = x10757;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][13] = x10757;
        // loc("zirgen/circuit/recursion/macro.cpp":37:37)
        auto x10758 = x10737 + x2350;
        {
          host_args.at(0) = x10758;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10759 = host_outs.at(0);
          auto x10760 = host_outs.at(1);
          auto x10761 = host_outs.at(2);
          auto x10762 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10759);
            reg = x10759;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10760);
            reg = x10760;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10761);
            reg = x10761;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10762);
            reg = x10762;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10758);
          reg = x10758;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10763 = args[2][31 * steps + ((cycle - 0) & mask)];
        assert(x10763 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10764 = args[2][32 * steps + ((cycle - 0) & mask)];
        assert(x10764 != Fp::invalid());
        host_args.at(0) = x2352;
        host_args.at(1) = x2350;
        host_args.at(2) = x2353;
        host_args.at(3) = x10763;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][14] = x10763;
        host_args.at(0) = x2352;
        host_args.at(1) = x2350;
        host_args.at(2) = x2352;
        host_args.at(3) = x10764;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][15] = x10764;
      }
      if (x10706 != 0) {
        // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[0](Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
        auto x10765 = args[0][17 * steps + ((cycle - 0) & mask)];
        assert(x10765 != Fp::invalid());
        {
          host_args.at(0) = x10765;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10766 = host_outs.at(0);
          auto x10767 = host_outs.at(1);
          auto x10768 = host_outs.at(2);
          auto x10769 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][16 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10766);
            reg = x10766;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][17 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10767);
            reg = x10767;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][18 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10768);
            reg = x10768;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][19 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10769);
            reg = x10769;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10765);
          reg = x10765;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10770 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x10770 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10771 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x10771 != Fp::invalid());
        host_args.at(0) = x2351;
        host_args.at(1) = x2353;
        host_args.at(2) = x2353;
        host_args.at(3) = x10770;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][16] = x10770;
        host_args.at(0) = x2351;
        host_args.at(1) = x2353;
        host_args.at(2) = x2352;
        host_args.at(3) = x10771;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][17] = x10771;
        // loc("zirgen/circuit/recursion/macro.cpp":37:37)
        auto x10772 = x10765 + x2352;
        {
          host_args.at(0) = x10772;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10773 = host_outs.at(0);
          auto x10774 = host_outs.at(1);
          auto x10775 = host_outs.at(2);
          auto x10776 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10773);
            reg = x10773;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10774);
            reg = x10774;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10775);
            reg = x10775;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10776);
            reg = x10776;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10772);
          reg = x10772;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10777 = args[2][21 * steps + ((cycle - 0) & mask)];
        assert(x10777 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10778 = args[2][22 * steps + ((cycle - 0) & mask)];
        assert(x10778 != Fp::invalid());
        host_args.at(0) = x2351;
        host_args.at(1) = x2352;
        host_args.at(2) = x2353;
        host_args.at(3) = x10777;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][18] = x10777;
        host_args.at(0) = x2351;
        host_args.at(1) = x2352;
        host_args.at(2) = x2352;
        host_args.at(3) = x10778;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][19] = x10778;
        // loc("zirgen/circuit/recursion/macro.cpp":37:37)
        auto x10779 = x10765 + x2351;
        {
          host_args.at(0) = x10779;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10780 = host_outs.at(0);
          auto x10781 = host_outs.at(1);
          auto x10782 = host_outs.at(2);
          auto x10783 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10780);
            reg = x10780;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10781);
            reg = x10781;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10782);
            reg = x10782;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10783);
            reg = x10783;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10779);
          reg = x10779;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10784 = args[2][26 * steps + ((cycle - 0) & mask)];
        assert(x10784 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10785 = args[2][27 * steps + ((cycle - 0) & mask)];
        assert(x10785 != Fp::invalid());
        host_args.at(0) = x2351;
        host_args.at(1) = x2351;
        host_args.at(2) = x2353;
        host_args.at(3) = x10784;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][20] = x10784;
        host_args.at(0) = x2351;
        host_args.at(1) = x2351;
        host_args.at(2) = x2352;
        host_args.at(3) = x10785;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][21] = x10785;
        // loc("zirgen/circuit/recursion/macro.cpp":37:37)
        auto x10786 = x10765 + x2350;
        {
          host_args.at(0) = x10786;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10787 = host_outs.at(0);
          auto x10788 = host_outs.at(1);
          auto x10789 = host_outs.at(2);
          auto x10790 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10787);
            reg = x10787;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10788);
            reg = x10788;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10789);
            reg = x10789;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10790);
            reg = x10790;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10786);
          reg = x10786;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10791 = args[2][31 * steps + ((cycle - 0) & mask)];
        assert(x10791 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10792 = args[2][32 * steps + ((cycle - 0) & mask)];
        assert(x10792 != Fp::invalid());
        host_args.at(0) = x2351;
        host_args.at(1) = x2350;
        host_args.at(2) = x2353;
        host_args.at(3) = x10791;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][22] = x10791;
        host_args.at(0) = x2351;
        host_args.at(1) = x2350;
        host_args.at(2) = x2352;
        host_args.at(3) = x10792;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][23] = x10792;
      }
      if (x10707 != 0) {
        // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/macro_ops(recursion::MacroInst)/operand[0](Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
        auto x10793 = args[0][17 * steps + ((cycle - 0) & mask)];
        assert(x10793 != Fp::invalid());
        {
          host_args.at(0) = x10793;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10794 = host_outs.at(0);
          auto x10795 = host_outs.at(1);
          auto x10796 = host_outs.at(2);
          auto x10797 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][16 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10794);
            reg = x10794;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][17 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10795);
            reg = x10795;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][18 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10796);
            reg = x10796;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][19 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10797);
            reg = x10797;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10793);
          reg = x10793;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10798 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x10798 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10799 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x10799 != Fp::invalid());
        host_args.at(0) = x2350;
        host_args.at(1) = x2353;
        host_args.at(2) = x2353;
        host_args.at(3) = x10798;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][24] = x10798;
        host_args.at(0) = x2350;
        host_args.at(1) = x2353;
        host_args.at(2) = x2352;
        host_args.at(3) = x10799;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][25] = x10799;
        // loc("zirgen/circuit/recursion/macro.cpp":37:37)
        auto x10800 = x10793 + x2352;
        {
          host_args.at(0) = x10800;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10801 = host_outs.at(0);
          auto x10802 = host_outs.at(1);
          auto x10803 = host_outs.at(2);
          auto x10804 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10801);
            reg = x10801;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10802);
            reg = x10802;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10803);
            reg = x10803;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10804);
            reg = x10804;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10800);
          reg = x10800;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10805 = args[2][21 * steps + ((cycle - 0) & mask)];
        assert(x10805 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10806 = args[2][22 * steps + ((cycle - 0) & mask)];
        assert(x10806 != Fp::invalid());
        host_args.at(0) = x2350;
        host_args.at(1) = x2352;
        host_args.at(2) = x2353;
        host_args.at(3) = x10805;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][26] = x10805;
        host_args.at(0) = x2350;
        host_args.at(1) = x2352;
        host_args.at(2) = x2352;
        host_args.at(3) = x10806;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][27] = x10806;
        // loc("zirgen/circuit/recursion/macro.cpp":37:37)
        auto x10807 = x10793 + x2351;
        {
          host_args.at(0) = x10807;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10808 = host_outs.at(0);
          auto x10809 = host_outs.at(1);
          auto x10810 = host_outs.at(2);
          auto x10811 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10808);
            reg = x10808;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10809);
            reg = x10809;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10810);
            reg = x10810;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10811);
            reg = x10811;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10807);
          reg = x10807;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10812 = args[2][26 * steps + ((cycle - 0) & mask)];
        assert(x10812 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10813 = args[2][27 * steps + ((cycle - 0) & mask)];
        assert(x10813 != Fp::invalid());
        host_args.at(0) = x2350;
        host_args.at(1) = x2351;
        host_args.at(2) = x2353;
        host_args.at(3) = x10812;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][28] = x10812;
        host_args.at(0) = x2350;
        host_args.at(1) = x2351;
        host_args.at(2) = x2352;
        host_args.at(3) = x10813;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][29] = x10813;
        // loc("zirgen/circuit/recursion/macro.cpp":37:37)
        auto x10814 = x10793 + x2350;
        {
          host_args.at(0) = x10814;
          host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
          auto x10815 = host_outs.at(0);
          auto x10816 = host_outs.at(1);
          auto x10817 = host_outs.at(2);
          auto x10818 = host_outs.at(3);
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10815);
            reg = x10815;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10816);
            reg = x10816;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10817);
            reg = x10817;
          }
          // loc("zirgen/circuit/recursion/wom.cpp":49:5)
          {
            auto& reg = args[2][34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10818);
            reg = x10818;
          }
        }
        // loc("zirgen/circuit/recursion/wom.cpp":80:3)
        {
          auto& reg = args[2][30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10814);
          reg = x10814;
        }
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10819 = args[2][31 * steps + ((cycle - 0) & mask)];
        assert(x10819 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x10820 = args[2][32 * steps + ((cycle - 0) & mask)];
        assert(x10820 != Fp::invalid());
        host_args.at(0) = x2350;
        host_args.at(1) = x2350;
        host_args.at(2) = x2353;
        host_args.at(3) = x10819;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][30] = x10819;
        host_args.at(0) = x2350;
        host_args.at(1) = x2350;
        host_args.at(2) = x2352;
        host_args.at(3) = x10820;
        host(ctx, "log", "SET_GLOBAL(%u+%u,%u)->%x", host_args.data(), 4, host_outs.data(), 0);
        // loc("zirgen/circuit/recursion/macro.cpp":40:11)
        args[1][31] = x10820;
      }
    }
  }
  // loc("top(recursion::Top)/code(recursion::Code)/select(OneHot)/poseidon_load(Reg)"("./zirgen/components/mux.h":49:25))
  auto x10821 = args[0][3 * steps + ((cycle - 0) & mask)];
  assert(x10821 != Fp::invalid());
  if (x10821 != 0) {
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_load(recursion::PoseidonMemInst)/do_mont(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x10822 = args[0][7 * steps + ((cycle - 0) & mask)];
    assert(x10822 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":22:13)
    auto x10823 = x10822 * x2282;
    // loc("zirgen/circuit/recursion/poseidon.cpp":22:63)
    auto x10824 = x2352 - x10822;
    // loc("zirgen/circuit/recursion/poseidon.cpp":22:13)
    auto x10825 = x10823 + x10824;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_load(recursion::PoseidonMemInst)/inputs[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x10826 = args[0][13 * steps + ((cycle - 0) & mask)];
    assert(x10826 != Fp::invalid());
    {
      host_args.at(0) = x10826;
      host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
      auto x10827 = host_outs.at(0);
      auto x10828 = host_outs.at(1);
      auto x10829 = host_outs.at(2);
      auto x10830 = host_outs.at(3);
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][6 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10827);
        reg = x10827;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][7 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10828);
        reg = x10828;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][8 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10829);
        reg = x10829;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][9 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10830);
        reg = x10830;
      }
    }
    // loc("zirgen/circuit/recursion/wom.cpp":80:3)
    {
      auto& reg = args[2][5 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10826);
      reg = x10826;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
    auto x10831 = args[2][6 * steps + ((cycle - 0) & mask)];
    assert(x10831 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":24:24)
    auto x10832 = x10831 * x10825;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_load(recursion::PoseidonMemInst)/inputs[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x10833 = args[0][14 * steps + ((cycle - 0) & mask)];
    assert(x10833 != Fp::invalid());
    {
      host_args.at(0) = x10833;
      host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
      auto x10834 = host_outs.at(0);
      auto x10835 = host_outs.at(1);
      auto x10836 = host_outs.at(2);
      auto x10837 = host_outs.at(3);
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10834);
        reg = x10834;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][12 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10835);
        reg = x10835;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][13 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10836);
        reg = x10836;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][14 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10837);
        reg = x10837;
      }
    }
    // loc("zirgen/circuit/recursion/wom.cpp":80:3)
    {
      auto& reg = args[2][10 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10833);
      reg = x10833;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
    auto x10838 = args[2][11 * steps + ((cycle - 0) & mask)];
    assert(x10838 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":24:24)
    auto x10839 = x10838 * x10825;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_load(recursion::PoseidonMemInst)/inputs[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x10840 = args[0][15 * steps + ((cycle - 0) & mask)];
    assert(x10840 != Fp::invalid());
    {
      host_args.at(0) = x10840;
      host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
      auto x10841 = host_outs.at(0);
      auto x10842 = host_outs.at(1);
      auto x10843 = host_outs.at(2);
      auto x10844 = host_outs.at(3);
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10841);
        reg = x10841;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10842);
        reg = x10842;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10843);
        reg = x10843;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10844);
        reg = x10844;
      }
    }
    // loc("zirgen/circuit/recursion/wom.cpp":80:3)
    {
      auto& reg = args[2][15 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10840);
      reg = x10840;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
    auto x10845 = args[2][16 * steps + ((cycle - 0) & mask)];
    assert(x10845 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":24:24)
    auto x10846 = x10845 * x10825;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_load(recursion::PoseidonMemInst)/inputs[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x10847 = args[0][16 * steps + ((cycle - 0) & mask)];
    assert(x10847 != Fp::invalid());
    {
      host_args.at(0) = x10847;
      host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
      auto x10848 = host_outs.at(0);
      auto x10849 = host_outs.at(1);
      auto x10850 = host_outs.at(2);
      auto x10851 = host_outs.at(3);
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10848);
        reg = x10848;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][22 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10849);
        reg = x10849;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][23 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10850);
        reg = x10850;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][24 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10851);
        reg = x10851;
      }
    }
    // loc("zirgen/circuit/recursion/wom.cpp":80:3)
    {
      auto& reg = args[2][20 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10847);
      reg = x10847;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
    auto x10852 = args[2][21 * steps + ((cycle - 0) & mask)];
    assert(x10852 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":24:24)
    auto x10853 = x10852 * x10825;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_load(recursion::PoseidonMemInst)/inputs[4](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x10854 = args[0][17 * steps + ((cycle - 0) & mask)];
    assert(x10854 != Fp::invalid());
    {
      host_args.at(0) = x10854;
      host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
      auto x10855 = host_outs.at(0);
      auto x10856 = host_outs.at(1);
      auto x10857 = host_outs.at(2);
      auto x10858 = host_outs.at(3);
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][26 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10855);
        reg = x10855;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10856);
        reg = x10856;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10857);
        reg = x10857;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10858);
        reg = x10858;
      }
    }
    // loc("zirgen/circuit/recursion/wom.cpp":80:3)
    {
      auto& reg = args[2][25 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10854);
      reg = x10854;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
    auto x10859 = args[2][26 * steps + ((cycle - 0) & mask)];
    assert(x10859 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":24:24)
    auto x10860 = x10859 * x10825;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_load(recursion::PoseidonMemInst)/inputs[5](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x10861 = args[0][18 * steps + ((cycle - 0) & mask)];
    assert(x10861 != Fp::invalid());
    {
      host_args.at(0) = x10861;
      host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
      auto x10862 = host_outs.at(0);
      auto x10863 = host_outs.at(1);
      auto x10864 = host_outs.at(2);
      auto x10865 = host_outs.at(3);
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10862);
        reg = x10862;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10863);
        reg = x10863;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10864);
        reg = x10864;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10865);
        reg = x10865;
      }
    }
    // loc("zirgen/circuit/recursion/wom.cpp":80:3)
    {
      auto& reg = args[2][30 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10861);
      reg = x10861;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
    auto x10866 = args[2][31 * steps + ((cycle - 0) & mask)];
    assert(x10866 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":24:24)
    auto x10867 = x10866 * x10825;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_load(recursion::PoseidonMemInst)/inputs[6](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x10868 = args[0][19 * steps + ((cycle - 0) & mask)];
    assert(x10868 != Fp::invalid());
    {
      host_args.at(0) = x10868;
      host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
      auto x10869 = host_outs.at(0);
      auto x10870 = host_outs.at(1);
      auto x10871 = host_outs.at(2);
      auto x10872 = host_outs.at(3);
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][36 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10869);
        reg = x10869;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][37 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10870);
        reg = x10870;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][38 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10871);
        reg = x10871;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][39 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10872);
        reg = x10872;
      }
    }
    // loc("zirgen/circuit/recursion/wom.cpp":80:3)
    {
      auto& reg = args[2][35 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10868);
      reg = x10868;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
    auto x10873 = args[2][36 * steps + ((cycle - 0) & mask)];
    assert(x10873 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":24:24)
    auto x10874 = x10873 * x10825;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_load(recursion::PoseidonMemInst)/inputs[7](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x10875 = args[0][20 * steps + ((cycle - 0) & mask)];
    assert(x10875 != Fp::invalid());
    {
      host_args.at(0) = x10875;
      host(ctx, "womRead", "", host_args.data(), 1, host_outs.data(), 4);
      auto x10876 = host_outs.at(0);
      auto x10877 = host_outs.at(1);
      auto x10878 = host_outs.at(2);
      auto x10879 = host_outs.at(3);
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][41 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10876);
        reg = x10876;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][42 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10877);
        reg = x10877;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][43 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10878);
        reg = x10878;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][44 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10879);
        reg = x10879;
      }
    }
    // loc("zirgen/circuit/recursion/wom.cpp":80:3)
    {
      auto& reg = args[2][40 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10875);
      reg = x10875;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
    auto x10880 = args[2][41 * steps + ((cycle - 0) & mask)];
    assert(x10880 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":24:24)
    auto x10881 = x10880 * x10825;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_load(recursion::PoseidonMemInst)/keep_state(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x10882 = args[0][8 * steps + ((cycle - 0) & mask)];
    assert(x10882 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10883 = args[2][90 * steps + ((cycle - 1) & mask)];
    if (x10883 == Fp::invalid()) x10883 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10884 = x10882 * x10883;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_load(recursion::PoseidonMemInst)/group(OneHot)/g0(Reg)"("zirgen/circuit/recursion/poseidon.cpp":29:20))
    auto x10885 = args[0][10 * steps + ((cycle - 0) & mask)];
    assert(x10885 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10886 = x10885 * x10832;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10887 = x10884 + x10886;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_load(recursion::PoseidonMemInst)/add_consts(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x10888 = args[0][9 * steps + ((cycle - 0) & mask)];
    assert(x10888 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10889 = x10888 * x2281;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10890 = x10887 + x10889;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][90 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10890);
      reg = x10890;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10891 = args[2][91 * steps + ((cycle - 1) & mask)];
    if (x10891 == Fp::invalid()) x10891 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10892 = x10882 * x10891;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10893 = x10885 * x10839;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10894 = x10892 + x10893;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10895 = x10888 * x2280;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10896 = x10894 + x10895;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][91 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10896);
      reg = x10896;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10897 = args[2][92 * steps + ((cycle - 1) & mask)];
    if (x10897 == Fp::invalid()) x10897 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10898 = x10882 * x10897;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10899 = x10885 * x10846;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10900 = x10898 + x10899;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10901 = x10888 * x2279;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10902 = x10900 + x10901;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][92 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10902);
      reg = x10902;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10903 = args[2][93 * steps + ((cycle - 1) & mask)];
    if (x10903 == Fp::invalid()) x10903 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10904 = x10882 * x10903;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10905 = x10885 * x10853;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10906 = x10904 + x10905;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10907 = x10888 * x2278;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10908 = x10906 + x10907;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][93 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10908);
      reg = x10908;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10909 = args[2][94 * steps + ((cycle - 1) & mask)];
    if (x10909 == Fp::invalid()) x10909 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10910 = x10882 * x10909;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10911 = x10885 * x10860;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10912 = x10910 + x10911;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10913 = x10888 * x2277;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10914 = x10912 + x10913;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][94 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10914);
      reg = x10914;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10915 = args[2][95 * steps + ((cycle - 1) & mask)];
    if (x10915 == Fp::invalid()) x10915 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10916 = x10882 * x10915;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10917 = x10885 * x10867;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10918 = x10916 + x10917;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10919 = x10888 * x2276;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10920 = x10918 + x10919;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][95 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10920);
      reg = x10920;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10921 = args[2][96 * steps + ((cycle - 1) & mask)];
    if (x10921 == Fp::invalid()) x10921 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10922 = x10882 * x10921;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10923 = x10885 * x10874;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10924 = x10922 + x10923;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10925 = x10888 * x2275;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10926 = x10924 + x10925;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][96 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10926);
      reg = x10926;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10927 = args[2][97 * steps + ((cycle - 1) & mask)];
    if (x10927 == Fp::invalid()) x10927 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10928 = x10882 * x10927;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10929 = x10885 * x10881;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10930 = x10928 + x10929;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10931 = x10888 * x2274;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10932 = x10930 + x10931;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][97 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10932);
      reg = x10932;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10933 = args[2][98 * steps + ((cycle - 1) & mask)];
    if (x10933 == Fp::invalid()) x10933 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10934 = x10882 * x10933;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_load(recursion::PoseidonMemInst)/group(OneHot)/g1(Reg)"("zirgen/circuit/recursion/poseidon.cpp":29:20))
    auto x10935 = args[0][11 * steps + ((cycle - 0) & mask)];
    assert(x10935 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10936 = x10935 * x10832;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10937 = x10934 + x10936;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10938 = x10888 * x2273;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10939 = x10937 + x10938;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][98 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10939);
      reg = x10939;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10940 = args[2][99 * steps + ((cycle - 1) & mask)];
    if (x10940 == Fp::invalid()) x10940 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10941 = x10882 * x10940;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10942 = x10935 * x10839;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10943 = x10941 + x10942;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10944 = x10888 * x2272;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10945 = x10943 + x10944;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][99 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10945);
      reg = x10945;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10946 = args[2][100 * steps + ((cycle - 1) & mask)];
    if (x10946 == Fp::invalid()) x10946 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10947 = x10882 * x10946;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10948 = x10935 * x10846;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10949 = x10947 + x10948;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10950 = x10888 * x2271;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10951 = x10949 + x10950;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][100 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10951);
      reg = x10951;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10952 = args[2][101 * steps + ((cycle - 1) & mask)];
    if (x10952 == Fp::invalid()) x10952 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10953 = x10882 * x10952;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10954 = x10935 * x10853;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10955 = x10953 + x10954;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10956 = x10888 * x2270;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10957 = x10955 + x10956;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][101 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10957);
      reg = x10957;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10958 = args[2][102 * steps + ((cycle - 1) & mask)];
    if (x10958 == Fp::invalid()) x10958 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10959 = x10882 * x10958;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10960 = x10935 * x10860;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10961 = x10959 + x10960;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10962 = x10888 * x2269;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10963 = x10961 + x10962;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][102 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10963);
      reg = x10963;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10964 = args[2][103 * steps + ((cycle - 1) & mask)];
    if (x10964 == Fp::invalid()) x10964 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10965 = x10882 * x10964;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10966 = x10935 * x10867;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10967 = x10965 + x10966;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10968 = x10888 * x2268;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10969 = x10967 + x10968;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][103 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10969);
      reg = x10969;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10970 = args[2][104 * steps + ((cycle - 1) & mask)];
    if (x10970 == Fp::invalid()) x10970 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10971 = x10882 * x10970;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10972 = x10935 * x10874;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10973 = x10971 + x10972;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10974 = x10888 * x2267;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10975 = x10973 + x10974;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][104 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10975);
      reg = x10975;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10976 = args[2][105 * steps + ((cycle - 1) & mask)];
    if (x10976 == Fp::invalid()) x10976 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10977 = x10882 * x10976;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10978 = x10935 * x10881;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10979 = x10977 + x10978;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10980 = x10888 * x2266;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10981 = x10979 + x10980;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][105 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10981);
      reg = x10981;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10982 = args[2][106 * steps + ((cycle - 1) & mask)];
    if (x10982 == Fp::invalid()) x10982 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10983 = x10882 * x10982;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_load(recursion::PoseidonMemInst)/group(OneHot)/g2(Reg)"("zirgen/circuit/recursion/poseidon.cpp":29:20))
    auto x10984 = args[0][12 * steps + ((cycle - 0) & mask)];
    assert(x10984 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10985 = x10984 * x10832;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10986 = x10983 + x10985;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10987 = x10888 * x2265;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10988 = x10986 + x10987;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][106 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10988);
      reg = x10988;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10989 = args[2][107 * steps + ((cycle - 1) & mask)];
    if (x10989 == Fp::invalid()) x10989 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10990 = x10882 * x10989;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10991 = x10984 * x10839;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10992 = x10990 + x10991;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10993 = x10888 * x2264;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10994 = x10992 + x10993;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][107 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x10994);
      reg = x10994;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x10995 = args[2][108 * steps + ((cycle - 1) & mask)];
    if (x10995 == Fp::invalid()) x10995 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10996 = x10882 * x10995;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x10997 = x10984 * x10846;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x10998 = x10996 + x10997;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x10999 = x10888 * x2263;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11000 = x10998 + x10999;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][108 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11000);
      reg = x11000;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x11001 = args[2][109 * steps + ((cycle - 1) & mask)];
    if (x11001 == Fp::invalid()) x11001 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11002 = x10882 * x11001;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x11003 = x10984 * x10853;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11004 = x11002 + x11003;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x11005 = x10888 * x2262;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11006 = x11004 + x11005;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][109 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11006);
      reg = x11006;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x11007 = args[2][110 * steps + ((cycle - 1) & mask)];
    if (x11007 == Fp::invalid()) x11007 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11008 = x10882 * x11007;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x11009 = x10984 * x10860;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11010 = x11008 + x11009;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x11011 = x10888 * x2261;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11012 = x11010 + x11011;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][110 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11012);
      reg = x11012;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x11013 = args[2][111 * steps + ((cycle - 1) & mask)];
    if (x11013 == Fp::invalid()) x11013 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11014 = x10882 * x11013;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x11015 = x10984 * x10867;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11016 = x11014 + x11015;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x11017 = x10888 * x2260;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11018 = x11016 + x11017;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][111 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11018);
      reg = x11018;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x11019 = args[2][112 * steps + ((cycle - 1) & mask)];
    if (x11019 == Fp::invalid()) x11019 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11020 = x10882 * x11019;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x11021 = x10984 * x10874;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11022 = x11020 + x11021;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x11023 = x10888 * x2259;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11024 = x11022 + x11023;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][112 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11024);
      reg = x11024;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/Reg"("zirgen/circuit/recursion/poseidon.cpp":28:72))
    auto x11025 = args[2][113 * steps + ((cycle - 1) & mask)];
    if (x11025 == Fp::invalid()) x11025 = 0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11026 = x10882 * x11025;
    // loc("zirgen/circuit/recursion/poseidon.cpp":29:20)
    auto x11027 = x10984 * x10881;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11028 = x11026 + x11027;
    // loc("zirgen/circuit/recursion/poseidon.cpp":30:20)
    auto x11029 = x10888 * x2258;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:20)
    auto x11030 = x11028 + x11029;
    // loc("zirgen/circuit/recursion/poseidon.cpp":28:5)
    {
      auto& reg = args[2][113 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11030);
      reg = x11030;
    }
    // loc("./zirgen/components/onehot.h":46:19)
    auto x11031 = x10984 * x2351;
    // loc("./zirgen/components/onehot.h":46:13)
    auto x11032 = x10935 + x11031;
    host_args.at(0) = x10882;
    host_args.at(1) = x10888;
    host_args.at(2) = x11032;
    host(ctx, "log", "POSEIDON_LOAD: %u, %u, %u", host_args.data(), 3, host_outs.data(), 0);
  }
  // loc("top(recursion::Top)/code(recursion::Code)/select(OneHot)/poseidon_full(Reg)"("./zirgen/components/mux.h":49:25))
  auto x11033 = args[0][4 * steps + ((cycle - 0) & mask)];
  assert(x11033 != Fp::invalid());
  if (x11033 != 0) {
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11034 = args[2][90 * steps + ((cycle - 1) & mask)];
    assert(x11034 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11035 = x11034 * x11034;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11036 = x11035 * x11035;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][5 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11036);
      reg = x11036;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11037 = args[2][5 * steps + ((cycle - 0) & mask)];
    assert(x11037 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11038 = x11037 * x11035;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11039 = x11038 * x11034;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11040 = args[2][91 * steps + ((cycle - 1) & mask)];
    assert(x11040 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11041 = x11040 * x11040;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11042 = x11041 * x11041;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][6 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11042);
      reg = x11042;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11043 = args[2][6 * steps + ((cycle - 0) & mask)];
    assert(x11043 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11044 = x11043 * x11041;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11045 = x11044 * x11040;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11046 = args[2][92 * steps + ((cycle - 1) & mask)];
    assert(x11046 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11047 = x11046 * x11046;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11048 = x11047 * x11047;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][7 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11048);
      reg = x11048;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11049 = args[2][7 * steps + ((cycle - 0) & mask)];
    assert(x11049 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11050 = x11049 * x11047;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11051 = x11050 * x11046;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11052 = args[2][93 * steps + ((cycle - 1) & mask)];
    assert(x11052 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11053 = x11052 * x11052;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11054 = x11053 * x11053;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][8 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11054);
      reg = x11054;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11055 = args[2][8 * steps + ((cycle - 0) & mask)];
    assert(x11055 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11056 = x11055 * x11053;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11057 = x11056 * x11052;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11058 = args[2][94 * steps + ((cycle - 1) & mask)];
    assert(x11058 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11059 = x11058 * x11058;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11060 = x11059 * x11059;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][9 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11060);
      reg = x11060;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11061 = args[2][9 * steps + ((cycle - 0) & mask)];
    assert(x11061 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11062 = x11061 * x11059;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11063 = x11062 * x11058;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11064 = args[2][95 * steps + ((cycle - 1) & mask)];
    assert(x11064 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11065 = x11064 * x11064;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11066 = x11065 * x11065;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][10 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11066);
      reg = x11066;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11067 = args[2][10 * steps + ((cycle - 0) & mask)];
    assert(x11067 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11068 = x11067 * x11065;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11069 = x11068 * x11064;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11070 = args[2][96 * steps + ((cycle - 1) & mask)];
    assert(x11070 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11071 = x11070 * x11070;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11072 = x11071 * x11071;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][11 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11072);
      reg = x11072;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11073 = args[2][11 * steps + ((cycle - 0) & mask)];
    assert(x11073 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11074 = x11073 * x11071;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11075 = x11074 * x11070;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11076 = args[2][97 * steps + ((cycle - 1) & mask)];
    assert(x11076 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11077 = x11076 * x11076;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11078 = x11077 * x11077;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][12 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11078);
      reg = x11078;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11079 = args[2][12 * steps + ((cycle - 0) & mask)];
    assert(x11079 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11080 = x11079 * x11077;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11081 = x11080 * x11076;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11082 = args[2][98 * steps + ((cycle - 1) & mask)];
    assert(x11082 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11083 = x11082 * x11082;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11084 = x11083 * x11083;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][13 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11084);
      reg = x11084;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11085 = args[2][13 * steps + ((cycle - 0) & mask)];
    assert(x11085 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11086 = x11085 * x11083;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11087 = x11086 * x11082;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11088 = args[2][99 * steps + ((cycle - 1) & mask)];
    assert(x11088 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11089 = x11088 * x11088;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11090 = x11089 * x11089;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][14 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11090);
      reg = x11090;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11091 = args[2][14 * steps + ((cycle - 0) & mask)];
    assert(x11091 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11092 = x11091 * x11089;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11093 = x11092 * x11088;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11094 = args[2][100 * steps + ((cycle - 1) & mask)];
    assert(x11094 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11095 = x11094 * x11094;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11096 = x11095 * x11095;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][15 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11096);
      reg = x11096;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11097 = args[2][15 * steps + ((cycle - 0) & mask)];
    assert(x11097 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11098 = x11097 * x11095;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11099 = x11098 * x11094;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11100 = args[2][101 * steps + ((cycle - 1) & mask)];
    assert(x11100 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11101 = x11100 * x11100;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11102 = x11101 * x11101;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][16 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11102);
      reg = x11102;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11103 = args[2][16 * steps + ((cycle - 0) & mask)];
    assert(x11103 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11104 = x11103 * x11101;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11105 = x11104 * x11100;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11106 = args[2][102 * steps + ((cycle - 1) & mask)];
    assert(x11106 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11107 = x11106 * x11106;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11108 = x11107 * x11107;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][17 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11108);
      reg = x11108;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11109 = args[2][17 * steps + ((cycle - 0) & mask)];
    assert(x11109 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11110 = x11109 * x11107;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11111 = x11110 * x11106;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11112 = args[2][103 * steps + ((cycle - 1) & mask)];
    assert(x11112 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11113 = x11112 * x11112;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11114 = x11113 * x11113;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][18 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11114);
      reg = x11114;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11115 = args[2][18 * steps + ((cycle - 0) & mask)];
    assert(x11115 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11116 = x11115 * x11113;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11117 = x11116 * x11112;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11118 = args[2][104 * steps + ((cycle - 1) & mask)];
    assert(x11118 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11119 = x11118 * x11118;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11120 = x11119 * x11119;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][19 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11120);
      reg = x11120;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11121 = args[2][19 * steps + ((cycle - 0) & mask)];
    assert(x11121 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11122 = x11121 * x11119;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11123 = x11122 * x11118;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11124 = args[2][105 * steps + ((cycle - 1) & mask)];
    assert(x11124 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11125 = x11124 * x11124;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11126 = x11125 * x11125;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][20 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11126);
      reg = x11126;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11127 = args[2][20 * steps + ((cycle - 0) & mask)];
    assert(x11127 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11128 = x11127 * x11125;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11129 = x11128 * x11124;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11130 = args[2][106 * steps + ((cycle - 1) & mask)];
    assert(x11130 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11131 = x11130 * x11130;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11132 = x11131 * x11131;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][21 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11132);
      reg = x11132;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11133 = args[2][21 * steps + ((cycle - 0) & mask)];
    assert(x11133 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11134 = x11133 * x11131;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11135 = x11134 * x11130;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11136 = args[2][107 * steps + ((cycle - 1) & mask)];
    assert(x11136 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11137 = x11136 * x11136;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11138 = x11137 * x11137;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][22 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11138);
      reg = x11138;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11139 = args[2][22 * steps + ((cycle - 0) & mask)];
    assert(x11139 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11140 = x11139 * x11137;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11141 = x11140 * x11136;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11142 = args[2][108 * steps + ((cycle - 1) & mask)];
    assert(x11142 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11143 = x11142 * x11142;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11144 = x11143 * x11143;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][23 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11144);
      reg = x11144;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11145 = args[2][23 * steps + ((cycle - 0) & mask)];
    assert(x11145 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11146 = x11145 * x11143;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11147 = x11146 * x11142;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11148 = args[2][109 * steps + ((cycle - 1) & mask)];
    assert(x11148 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11149 = x11148 * x11148;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11150 = x11149 * x11149;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][24 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11150);
      reg = x11150;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11151 = args[2][24 * steps + ((cycle - 0) & mask)];
    assert(x11151 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11152 = x11151 * x11149;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11153 = x11152 * x11148;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11154 = args[2][110 * steps + ((cycle - 1) & mask)];
    assert(x11154 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11155 = x11154 * x11154;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11156 = x11155 * x11155;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][25 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11156);
      reg = x11156;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11157 = args[2][25 * steps + ((cycle - 0) & mask)];
    assert(x11157 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11158 = x11157 * x11155;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11159 = x11158 * x11154;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11160 = args[2][111 * steps + ((cycle - 1) & mask)];
    assert(x11160 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11161 = x11160 * x11160;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11162 = x11161 * x11161;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][26 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11162);
      reg = x11162;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11163 = args[2][26 * steps + ((cycle - 0) & mask)];
    assert(x11163 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11164 = x11163 * x11161;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11165 = x11164 * x11160;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11166 = args[2][112 * steps + ((cycle - 1) & mask)];
    assert(x11166 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11167 = x11166 * x11166;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11168 = x11167 * x11167;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][27 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11168);
      reg = x11168;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11169 = args[2][27 * steps + ((cycle - 0) & mask)];
    assert(x11169 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11170 = x11169 * x11167;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11171 = x11170 * x11166;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x11172 = args[2][113 * steps + ((cycle - 1) & mask)];
    assert(x11172 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x11173 = x11172 * x11172;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x11174 = x11173 * x11173;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][28 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x11174);
      reg = x11174;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x11175 = args[2][28 * steps + ((cycle - 0) & mask)];
    assert(x11175 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11176 = x11175 * x11173;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x11177 = x11176 * x11172;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11178 = x11039 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11179 = x11045 * x2256;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11180 = x11178 + x11179;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11181 = x11051 * x2255;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11182 = x11180 + x11181;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11183 = x11057 * x2254;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11184 = x11182 + x11183;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11185 = x11063 * x2253;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11186 = x11184 + x11185;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11187 = x11069 * x2252;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11188 = x11186 + x11187;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11189 = x11075 * x2251;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11190 = x11188 + x11189;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11191 = x11081 * x2250;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11192 = x11190 + x11191;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11193 = x11087 * x2249;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11194 = x11192 + x11193;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11195 = x11093 * x2248;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11196 = x11194 + x11195;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11197 = x11099 * x2247;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11198 = x11196 + x11197;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11199 = x11105 * x2246;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11200 = x11198 + x11199;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11201 = x11111 * x2245;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11202 = x11200 + x11201;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11203 = x11117 * x2244;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11204 = x11202 + x11203;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11205 = x11123 * x2243;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11206 = x11204 + x11205;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11207 = x11129 * x2242;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11208 = x11206 + x11207;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11209 = x11135 * x2241;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11210 = x11208 + x11209;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11211 = x11141 * x2240;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11212 = x11210 + x11211;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11213 = x11147 * x2239;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11214 = x11212 + x11213;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11215 = x11153 * x2238;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11216 = x11214 + x11215;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11217 = x11159 * x2237;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11218 = x11216 + x11217;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11219 = x11165 * x2236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11220 = x11218 + x11219;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11221 = x11171 * x2235;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11222 = x11220 + x11221;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11223 = x11177 * x2234;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11224 = x11222 + x11223;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11225 = x11039 * x2233;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11226 = x11045 * x2232;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11227 = x11225 + x11226;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11228 = x11051 * x2231;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11229 = x11227 + x11228;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11230 = x11057 * x2230;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11231 = x11229 + x11230;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11232 = x11063 * x2229;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11233 = x11231 + x11232;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11234 = x11069 * x2228;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11235 = x11233 + x11234;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11236 = x11075 * x2227;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11237 = x11235 + x11236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11238 = x11081 * x2226;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11239 = x11237 + x11238;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11240 = x11087 * x2225;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11241 = x11239 + x11240;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11242 = x11093 * x2224;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11243 = x11241 + x11242;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11244 = x11099 * x2223;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11245 = x11243 + x11244;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11246 = x11105 * x2222;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11247 = x11245 + x11246;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11248 = x11111 * x2221;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11249 = x11247 + x11248;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11250 = x11117 * x2220;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11251 = x11249 + x11250;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11252 = x11123 * x2219;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11253 = x11251 + x11252;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11254 = x11129 * x2218;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11255 = x11253 + x11254;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11256 = x11135 * x2217;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11257 = x11255 + x11256;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11258 = x11141 * x2216;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11259 = x11257 + x11258;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11260 = x11147 * x2215;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11261 = x11259 + x11260;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11262 = x11153 * x2214;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11263 = x11261 + x11262;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11264 = x11159 * x2213;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11265 = x11263 + x11264;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11266 = x11165 * x2212;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11267 = x11265 + x11266;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11268 = x11171 * x2211;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11269 = x11267 + x11268;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11270 = x11177 * x2210;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11271 = x11269 + x11270;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11272 = x11039 * x2209;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11273 = x11045 * x2208;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11274 = x11272 + x11273;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11275 = x11051 * x2207;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11276 = x11274 + x11275;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11277 = x11057 * x2206;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11278 = x11276 + x11277;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11279 = x11063 * x2205;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11280 = x11278 + x11279;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11281 = x11069 * x2204;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11282 = x11280 + x11281;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11283 = x11075 * x2203;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11284 = x11282 + x11283;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11285 = x11081 * x2202;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11286 = x11284 + x11285;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11287 = x11087 * x2201;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11288 = x11286 + x11287;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11289 = x11093 * x2200;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11290 = x11288 + x11289;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11291 = x11099 * x2199;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11292 = x11290 + x11291;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11293 = x11105 * x2198;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11294 = x11292 + x11293;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11295 = x11111 * x2197;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11296 = x11294 + x11295;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11297 = x11117 * x2196;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11298 = x11296 + x11297;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11299 = x11123 * x2195;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11300 = x11298 + x11299;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11301 = x11129 * x2194;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11302 = x11300 + x11301;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11303 = x11135 * x2193;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11304 = x11302 + x11303;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11305 = x11141 * x2192;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11306 = x11304 + x11305;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11307 = x11147 * x2191;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11308 = x11306 + x11307;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11309 = x11153 * x2190;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11310 = x11308 + x11309;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11311 = x11159 * x2189;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11312 = x11310 + x11311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11313 = x11165 * x2188;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11314 = x11312 + x11313;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11315 = x11171 * x2187;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11316 = x11314 + x11315;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11317 = x11177 * x2186;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11318 = x11316 + x11317;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11319 = x11039 * x2185;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11320 = x11045 * x2184;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11321 = x11319 + x11320;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11322 = x11051 * x2183;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11323 = x11321 + x11322;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11324 = x11057 * x2182;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11325 = x11323 + x11324;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11326 = x11063 * x2181;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11327 = x11325 + x11326;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11328 = x11069 * x2180;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11329 = x11327 + x11328;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11330 = x11075 * x2179;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11331 = x11329 + x11330;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11332 = x11081 * x2178;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11333 = x11331 + x11332;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11334 = x11087 * x2177;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11335 = x11333 + x11334;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11336 = x11093 * x2176;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11337 = x11335 + x11336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11338 = x11099 * x2175;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11339 = x11337 + x11338;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11340 = x11105 * x2174;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11341 = x11339 + x11340;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11342 = x11111 * x2173;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11343 = x11341 + x11342;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11344 = x11117 * x2172;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11345 = x11343 + x11344;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11346 = x11123 * x2171;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11347 = x11345 + x11346;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11348 = x11129 * x2170;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11349 = x11347 + x11348;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11350 = x11135 * x2169;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11351 = x11349 + x11350;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11352 = x11141 * x2168;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11353 = x11351 + x11352;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11354 = x11147 * x2167;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11355 = x11353 + x11354;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11356 = x11153 * x2166;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11357 = x11355 + x11356;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11358 = x11159 * x2165;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11359 = x11357 + x11358;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11360 = x11165 * x2164;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11361 = x11359 + x11360;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11362 = x11171 * x2163;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11363 = x11361 + x11362;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11364 = x11177 * x2162;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11365 = x11363 + x11364;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11366 = x11039 * x2161;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11367 = x11045 * x2160;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11368 = x11366 + x11367;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11369 = x11051 * x2159;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11370 = x11368 + x11369;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11371 = x11057 * x2158;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11372 = x11370 + x11371;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11373 = x11063 * x2157;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11374 = x11372 + x11373;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11375 = x11069 * x2156;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11376 = x11374 + x11375;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11377 = x11075 * x2155;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11378 = x11376 + x11377;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11379 = x11081 * x2154;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11380 = x11378 + x11379;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11381 = x11087 * x2153;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11382 = x11380 + x11381;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11383 = x11093 * x2152;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11384 = x11382 + x11383;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11385 = x11099 * x2151;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11386 = x11384 + x11385;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11387 = x11105 * x2150;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11388 = x11386 + x11387;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11389 = x11111 * x2149;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11390 = x11388 + x11389;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11391 = x11117 * x2148;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11392 = x11390 + x11391;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11393 = x11123 * x2147;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11394 = x11392 + x11393;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11395 = x11129 * x2146;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11396 = x11394 + x11395;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11397 = x11135 * x2145;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11398 = x11396 + x11397;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11399 = x11141 * x2144;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11400 = x11398 + x11399;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11401 = x11147 * x2143;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11402 = x11400 + x11401;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11403 = x11153 * x2142;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11404 = x11402 + x11403;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11405 = x11159 * x2141;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11406 = x11404 + x11405;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11407 = x11165 * x2140;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11408 = x11406 + x11407;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11409 = x11171 * x2139;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11410 = x11408 + x11409;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11411 = x11177 * x2138;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11412 = x11410 + x11411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11413 = x11039 * x2137;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11414 = x11045 * x2136;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11415 = x11413 + x11414;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11416 = x11051 * x2135;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11417 = x11415 + x11416;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11418 = x11057 * x2134;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11419 = x11417 + x11418;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11420 = x11063 * x2133;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11421 = x11419 + x11420;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11422 = x11069 * x2132;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11423 = x11421 + x11422;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11424 = x11075 * x2131;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11425 = x11423 + x11424;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11426 = x11081 * x2130;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11427 = x11425 + x11426;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11428 = x11087 * x2129;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11429 = x11427 + x11428;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11430 = x11093 * x2128;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11431 = x11429 + x11430;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11432 = x11099 * x2127;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11433 = x11431 + x11432;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11434 = x11105 * x2126;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11435 = x11433 + x11434;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11436 = x11111 * x2125;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11437 = x11435 + x11436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11438 = x11117 * x2124;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11439 = x11437 + x11438;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11440 = x11123 * x2123;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11441 = x11439 + x11440;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11442 = x11129 * x2122;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11443 = x11441 + x11442;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11444 = x11135 * x2121;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11445 = x11443 + x11444;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11446 = x11141 * x2120;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11447 = x11445 + x11446;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11448 = x11147 * x2119;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11449 = x11447 + x11448;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11450 = x11153 * x2118;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11451 = x11449 + x11450;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11452 = x11159 * x2117;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11453 = x11451 + x11452;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11454 = x11165 * x2116;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11455 = x11453 + x11454;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11456 = x11171 * x2115;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11457 = x11455 + x11456;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11458 = x11177 * x2114;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11459 = x11457 + x11458;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11460 = x11039 * x2113;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11461 = x11045 * x2112;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11462 = x11460 + x11461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11463 = x11051 * x2111;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11464 = x11462 + x11463;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11465 = x11057 * x2110;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11466 = x11464 + x11465;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11467 = x11063 * x2109;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11468 = x11466 + x11467;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11469 = x11069 * x2108;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11470 = x11468 + x11469;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11471 = x11075 * x2107;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11472 = x11470 + x11471;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11473 = x11081 * x2106;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11474 = x11472 + x11473;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11475 = x11087 * x2105;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11476 = x11474 + x11475;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11477 = x11093 * x2104;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11478 = x11476 + x11477;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11479 = x11099 * x2103;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11480 = x11478 + x11479;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11481 = x11105 * x2102;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11482 = x11480 + x11481;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11483 = x11111 * x2101;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11484 = x11482 + x11483;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11485 = x11117 * x2100;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11486 = x11484 + x11485;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11487 = x11123 * x2099;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11488 = x11486 + x11487;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11489 = x11129 * x2098;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11490 = x11488 + x11489;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11491 = x11135 * x2097;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11492 = x11490 + x11491;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11493 = x11141 * x2096;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11494 = x11492 + x11493;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11495 = x11147 * x2095;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11496 = x11494 + x11495;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11497 = x11153 * x2094;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11498 = x11496 + x11497;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11499 = x11159 * x2093;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11500 = x11498 + x11499;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11501 = x11165 * x2092;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11502 = x11500 + x11501;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11503 = x11171 * x2091;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11504 = x11502 + x11503;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11505 = x11177 * x2090;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11506 = x11504 + x11505;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11507 = x11039 * x2089;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11508 = x11045 * x2088;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11509 = x11507 + x11508;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11510 = x11051 * x2087;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11511 = x11509 + x11510;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11512 = x11057 * x2086;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11513 = x11511 + x11512;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11514 = x11063 * x2085;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11515 = x11513 + x11514;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11516 = x11069 * x2084;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11517 = x11515 + x11516;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11518 = x11075 * x2083;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11519 = x11517 + x11518;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11520 = x11081 * x2082;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11521 = x11519 + x11520;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11522 = x11087 * x2081;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11523 = x11521 + x11522;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11524 = x11093 * x2080;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11525 = x11523 + x11524;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11526 = x11099 * x2079;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11527 = x11525 + x11526;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11528 = x11105 * x2078;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11529 = x11527 + x11528;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11530 = x11111 * x2077;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11531 = x11529 + x11530;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11532 = x11117 * x2076;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11533 = x11531 + x11532;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11534 = x11123 * x2075;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11535 = x11533 + x11534;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11536 = x11129 * x2074;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11537 = x11535 + x11536;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11538 = x11135 * x2073;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11539 = x11537 + x11538;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11540 = x11141 * x2072;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11541 = x11539 + x11540;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11542 = x11147 * x2071;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11543 = x11541 + x11542;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11544 = x11153 * x2070;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11545 = x11543 + x11544;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11546 = x11159 * x2069;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11547 = x11545 + x11546;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11548 = x11165 * x2068;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11549 = x11547 + x11548;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11550 = x11171 * x2067;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11551 = x11549 + x11550;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11552 = x11177 * x2066;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11553 = x11551 + x11552;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11554 = x11039 * x2065;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11555 = x11045 * x2064;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11556 = x11554 + x11555;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11557 = x11051 * x2063;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11558 = x11556 + x11557;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11559 = x11057 * x2062;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11560 = x11558 + x11559;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11561 = x11063 * x2061;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11562 = x11560 + x11561;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11563 = x11069 * x2060;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11564 = x11562 + x11563;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11565 = x11075 * x2059;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11566 = x11564 + x11565;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11567 = x11081 * x2058;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11568 = x11566 + x11567;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11569 = x11087 * x2057;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11570 = x11568 + x11569;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11571 = x11093 * x2056;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11572 = x11570 + x11571;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11573 = x11099 * x2055;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11574 = x11572 + x11573;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11575 = x11105 * x2054;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11576 = x11574 + x11575;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11577 = x11111 * x2053;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11578 = x11576 + x11577;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11579 = x11117 * x2052;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11580 = x11578 + x11579;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11581 = x11123 * x2051;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11582 = x11580 + x11581;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11583 = x11129 * x2050;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11584 = x11582 + x11583;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11585 = x11135 * x2049;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11586 = x11584 + x11585;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11587 = x11141 * x2048;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11588 = x11586 + x11587;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11589 = x11147 * x2047;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11590 = x11588 + x11589;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11591 = x11153 * x2046;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11592 = x11590 + x11591;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11593 = x11159 * x2045;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11594 = x11592 + x11593;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11595 = x11165 * x2044;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11596 = x11594 + x11595;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11597 = x11171 * x2043;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11598 = x11596 + x11597;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11599 = x11177 * x2042;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11600 = x11598 + x11599;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11601 = x11039 * x2041;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11602 = x11045 * x2040;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11603 = x11601 + x11602;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11604 = x11051 * x2039;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11605 = x11603 + x11604;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11606 = x11057 * x2038;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11607 = x11605 + x11606;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11608 = x11063 * x2037;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11609 = x11607 + x11608;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11610 = x11069 * x2036;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11611 = x11609 + x11610;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11612 = x11075 * x2035;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11613 = x11611 + x11612;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11614 = x11081 * x2034;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11615 = x11613 + x11614;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11616 = x11087 * x2033;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11617 = x11615 + x11616;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11618 = x11093 * x2032;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11619 = x11617 + x11618;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11620 = x11099 * x2031;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11621 = x11619 + x11620;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11622 = x11105 * x2030;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11623 = x11621 + x11622;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11624 = x11111 * x2029;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11625 = x11623 + x11624;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11626 = x11117 * x2028;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11627 = x11625 + x11626;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11628 = x11123 * x2027;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11629 = x11627 + x11628;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11630 = x11129 * x2026;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11631 = x11629 + x11630;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11632 = x11135 * x2025;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11633 = x11631 + x11632;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11634 = x11141 * x2024;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11635 = x11633 + x11634;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11636 = x11147 * x2023;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11637 = x11635 + x11636;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11638 = x11153 * x2022;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11639 = x11637 + x11638;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11640 = x11159 * x2021;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11641 = x11639 + x11640;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11642 = x11165 * x2020;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11643 = x11641 + x11642;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11644 = x11171 * x2019;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11645 = x11643 + x11644;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11646 = x11177 * x2018;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11647 = x11645 + x11646;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11648 = x11039 * x2017;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11649 = x11045 * x2016;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11650 = x11648 + x11649;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11651 = x11051 * x2015;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11652 = x11650 + x11651;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11653 = x11057 * x2014;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11654 = x11652 + x11653;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11655 = x11063 * x2013;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11656 = x11654 + x11655;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11657 = x11069 * x2012;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11658 = x11656 + x11657;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11659 = x11075 * x2011;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11660 = x11658 + x11659;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11661 = x11081 * x2010;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11662 = x11660 + x11661;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11663 = x11087 * x2009;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11664 = x11662 + x11663;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11665 = x11093 * x2008;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11666 = x11664 + x11665;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11667 = x11099 * x2007;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11668 = x11666 + x11667;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11669 = x11105 * x2006;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11670 = x11668 + x11669;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11671 = x11111 * x2005;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11672 = x11670 + x11671;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11673 = x11117 * x2004;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11674 = x11672 + x11673;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11675 = x11123 * x2003;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11676 = x11674 + x11675;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11677 = x11129 * x2002;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11678 = x11676 + x11677;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11679 = x11135 * x2001;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11680 = x11678 + x11679;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11681 = x11141 * x2000;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11682 = x11680 + x11681;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11683 = x11147 * x1999;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11684 = x11682 + x11683;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11685 = x11153 * x1998;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11686 = x11684 + x11685;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11687 = x11159 * x1997;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11688 = x11686 + x11687;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11689 = x11165 * x1996;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11690 = x11688 + x11689;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11691 = x11171 * x1995;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11692 = x11690 + x11691;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11693 = x11177 * x1994;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11694 = x11692 + x11693;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11695 = x11039 * x1993;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11696 = x11045 * x1992;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11697 = x11695 + x11696;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11698 = x11051 * x1991;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11699 = x11697 + x11698;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11700 = x11057 * x1990;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11701 = x11699 + x11700;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11702 = x11063 * x1989;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11703 = x11701 + x11702;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11704 = x11069 * x1988;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11705 = x11703 + x11704;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11706 = x11075 * x1987;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11707 = x11705 + x11706;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11708 = x11081 * x1986;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11709 = x11707 + x11708;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11710 = x11087 * x1985;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11711 = x11709 + x11710;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11712 = x11093 * x1984;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11713 = x11711 + x11712;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11714 = x11099 * x1983;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11715 = x11713 + x11714;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11716 = x11105 * x1982;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11717 = x11715 + x11716;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11718 = x11111 * x1981;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11719 = x11717 + x11718;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11720 = x11117 * x1980;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11721 = x11719 + x11720;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11722 = x11123 * x1979;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11723 = x11721 + x11722;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11724 = x11129 * x1978;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11725 = x11723 + x11724;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11726 = x11135 * x1977;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11727 = x11725 + x11726;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11728 = x11141 * x1976;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11729 = x11727 + x11728;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11730 = x11147 * x1975;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11731 = x11729 + x11730;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11732 = x11153 * x1974;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11733 = x11731 + x11732;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11734 = x11159 * x1973;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11735 = x11733 + x11734;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11736 = x11165 * x1972;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11737 = x11735 + x11736;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11738 = x11171 * x1971;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11739 = x11737 + x11738;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11740 = x11177 * x1970;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11741 = x11739 + x11740;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11742 = x11039 * x1969;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11743 = x11045 * x1968;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11744 = x11742 + x11743;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11745 = x11051 * x1967;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11746 = x11744 + x11745;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11747 = x11057 * x1966;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11748 = x11746 + x11747;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11749 = x11063 * x1965;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11750 = x11748 + x11749;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11751 = x11069 * x1964;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11752 = x11750 + x11751;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11753 = x11075 * x1963;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11754 = x11752 + x11753;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11755 = x11081 * x1962;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11756 = x11754 + x11755;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11757 = x11087 * x1961;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11758 = x11756 + x11757;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11759 = x11093 * x1960;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11760 = x11758 + x11759;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11761 = x11099 * x1959;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11762 = x11760 + x11761;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11763 = x11105 * x1958;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11764 = x11762 + x11763;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11765 = x11111 * x1957;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11766 = x11764 + x11765;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11767 = x11117 * x1956;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11768 = x11766 + x11767;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11769 = x11123 * x1955;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11770 = x11768 + x11769;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11771 = x11129 * x1954;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11772 = x11770 + x11771;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11773 = x11135 * x1953;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11774 = x11772 + x11773;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11775 = x11141 * x1952;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11776 = x11774 + x11775;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11777 = x11147 * x1951;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11778 = x11776 + x11777;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11779 = x11153 * x1950;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11780 = x11778 + x11779;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11781 = x11159 * x1949;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11782 = x11780 + x11781;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11783 = x11165 * x1948;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11784 = x11782 + x11783;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11785 = x11171 * x1947;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11786 = x11784 + x11785;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11787 = x11177 * x1946;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11788 = x11786 + x11787;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11789 = x11039 * x1945;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11790 = x11045 * x1944;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11791 = x11789 + x11790;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11792 = x11051 * x1943;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11793 = x11791 + x11792;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11794 = x11057 * x1942;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11795 = x11793 + x11794;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11796 = x11063 * x1941;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11797 = x11795 + x11796;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11798 = x11069 * x1940;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11799 = x11797 + x11798;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11800 = x11075 * x1939;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11801 = x11799 + x11800;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11802 = x11081 * x1938;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11803 = x11801 + x11802;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11804 = x11087 * x1937;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11805 = x11803 + x11804;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11806 = x11093 * x1936;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11807 = x11805 + x11806;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11808 = x11099 * x1935;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11809 = x11807 + x11808;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11810 = x11105 * x1934;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11811 = x11809 + x11810;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11812 = x11111 * x1933;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11813 = x11811 + x11812;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11814 = x11117 * x1932;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11815 = x11813 + x11814;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11816 = x11123 * x1931;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11817 = x11815 + x11816;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11818 = x11129 * x1930;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11819 = x11817 + x11818;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11820 = x11135 * x1929;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11821 = x11819 + x11820;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11822 = x11141 * x1928;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11823 = x11821 + x11822;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11824 = x11147 * x1927;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11825 = x11823 + x11824;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11826 = x11153 * x1926;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11827 = x11825 + x11826;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11828 = x11159 * x1925;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11829 = x11827 + x11828;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11830 = x11165 * x1924;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11831 = x11829 + x11830;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11832 = x11171 * x1923;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11833 = x11831 + x11832;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11834 = x11177 * x1922;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11835 = x11833 + x11834;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11836 = x11039 * x1921;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11837 = x11045 * x1920;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11838 = x11836 + x11837;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11839 = x11051 * x1919;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11840 = x11838 + x11839;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11841 = x11057 * x1918;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11842 = x11840 + x11841;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11843 = x11063 * x1917;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11844 = x11842 + x11843;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11845 = x11069 * x1916;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11846 = x11844 + x11845;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11847 = x11075 * x1915;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11848 = x11846 + x11847;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11849 = x11081 * x1914;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11850 = x11848 + x11849;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11851 = x11087 * x1913;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11852 = x11850 + x11851;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11853 = x11093 * x1912;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11854 = x11852 + x11853;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11855 = x11099 * x1911;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11856 = x11854 + x11855;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11857 = x11105 * x1910;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11858 = x11856 + x11857;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11859 = x11111 * x1909;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11860 = x11858 + x11859;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11861 = x11117 * x1908;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11862 = x11860 + x11861;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11863 = x11123 * x1907;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11864 = x11862 + x11863;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11865 = x11129 * x1906;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11866 = x11864 + x11865;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11867 = x11135 * x1905;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11868 = x11866 + x11867;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11869 = x11141 * x1904;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11870 = x11868 + x11869;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11871 = x11147 * x1903;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11872 = x11870 + x11871;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11873 = x11153 * x1902;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11874 = x11872 + x11873;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11875 = x11159 * x1901;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11876 = x11874 + x11875;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11877 = x11165 * x1900;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11878 = x11876 + x11877;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11879 = x11171 * x1899;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11880 = x11878 + x11879;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11881 = x11177 * x1898;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11882 = x11880 + x11881;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11883 = x11039 * x1897;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11884 = x11045 * x1896;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11885 = x11883 + x11884;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11886 = x11051 * x1895;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11887 = x11885 + x11886;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11888 = x11057 * x1894;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11889 = x11887 + x11888;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11890 = x11063 * x1893;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11891 = x11889 + x11890;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11892 = x11069 * x1892;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11893 = x11891 + x11892;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11894 = x11075 * x1891;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11895 = x11893 + x11894;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11896 = x11081 * x1890;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11897 = x11895 + x11896;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11898 = x11087 * x1889;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11899 = x11897 + x11898;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11900 = x11093 * x1888;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11901 = x11899 + x11900;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11902 = x11099 * x1887;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11903 = x11901 + x11902;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11904 = x11105 * x1886;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11905 = x11903 + x11904;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11906 = x11111 * x1885;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11907 = x11905 + x11906;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11908 = x11117 * x1884;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11909 = x11907 + x11908;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11910 = x11123 * x1883;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11911 = x11909 + x11910;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11912 = x11129 * x1882;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11913 = x11911 + x11912;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11914 = x11135 * x1881;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11915 = x11913 + x11914;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11916 = x11141 * x1880;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11917 = x11915 + x11916;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11918 = x11147 * x1879;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11919 = x11917 + x11918;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11920 = x11153 * x1878;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11921 = x11919 + x11920;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11922 = x11159 * x1877;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11923 = x11921 + x11922;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11924 = x11165 * x1876;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11925 = x11923 + x11924;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11926 = x11171 * x1875;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11927 = x11925 + x11926;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11928 = x11177 * x1874;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11929 = x11927 + x11928;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11930 = x11039 * x1873;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11931 = x11045 * x1872;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11932 = x11930 + x11931;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11933 = x11051 * x1871;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11934 = x11932 + x11933;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11935 = x11057 * x1870;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11936 = x11934 + x11935;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11937 = x11063 * x1869;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11938 = x11936 + x11937;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11939 = x11069 * x1868;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11940 = x11938 + x11939;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11941 = x11075 * x1867;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11942 = x11940 + x11941;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11943 = x11081 * x1866;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11944 = x11942 + x11943;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11945 = x11087 * x1865;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11946 = x11944 + x11945;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11947 = x11093 * x1864;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11948 = x11946 + x11947;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11949 = x11099 * x1863;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11950 = x11948 + x11949;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11951 = x11105 * x1862;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11952 = x11950 + x11951;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11953 = x11111 * x1861;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11954 = x11952 + x11953;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11955 = x11117 * x1860;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11956 = x11954 + x11955;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11957 = x11123 * x1859;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11958 = x11956 + x11957;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11959 = x11129 * x1858;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11960 = x11958 + x11959;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11961 = x11135 * x1857;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11962 = x11960 + x11961;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11963 = x11141 * x1856;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11964 = x11962 + x11963;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11965 = x11147 * x1855;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11966 = x11964 + x11965;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11967 = x11153 * x1854;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11968 = x11966 + x11967;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11969 = x11159 * x1853;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11970 = x11968 + x11969;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11971 = x11165 * x1852;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11972 = x11970 + x11971;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11973 = x11171 * x1851;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11974 = x11972 + x11973;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11975 = x11177 * x1850;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11976 = x11974 + x11975;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11977 = x11039 * x1849;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11978 = x11045 * x1848;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11979 = x11977 + x11978;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11980 = x11051 * x1847;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11981 = x11979 + x11980;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11982 = x11057 * x1846;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11983 = x11981 + x11982;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11984 = x11063 * x1845;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11985 = x11983 + x11984;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11986 = x11069 * x1844;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11987 = x11985 + x11986;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11988 = x11075 * x1843;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11989 = x11987 + x11988;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11990 = x11081 * x1842;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11991 = x11989 + x11990;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11992 = x11087 * x1841;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11993 = x11991 + x11992;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11994 = x11093 * x1840;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11995 = x11993 + x11994;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11996 = x11099 * x1839;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11997 = x11995 + x11996;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x11998 = x11105 * x1838;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x11999 = x11997 + x11998;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12000 = x11111 * x1837;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12001 = x11999 + x12000;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12002 = x11117 * x1836;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12003 = x12001 + x12002;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12004 = x11123 * x1835;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12005 = x12003 + x12004;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12006 = x11129 * x1834;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12007 = x12005 + x12006;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12008 = x11135 * x1833;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12009 = x12007 + x12008;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12010 = x11141 * x1832;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12011 = x12009 + x12010;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12012 = x11147 * x1831;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12013 = x12011 + x12012;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12014 = x11153 * x1830;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12015 = x12013 + x12014;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12016 = x11159 * x1829;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12017 = x12015 + x12016;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12018 = x11165 * x1828;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12019 = x12017 + x12018;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12020 = x11171 * x1827;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12021 = x12019 + x12020;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12022 = x11177 * x1826;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12023 = x12021 + x12022;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12024 = x11039 * x1825;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12025 = x11045 * x1824;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12026 = x12024 + x12025;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12027 = x11051 * x1823;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12028 = x12026 + x12027;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12029 = x11057 * x1822;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12030 = x12028 + x12029;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12031 = x11063 * x1821;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12032 = x12030 + x12031;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12033 = x11069 * x1820;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12034 = x12032 + x12033;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12035 = x11075 * x1819;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12036 = x12034 + x12035;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12037 = x11081 * x1818;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12038 = x12036 + x12037;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12039 = x11087 * x1817;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12040 = x12038 + x12039;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12041 = x11093 * x1816;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12042 = x12040 + x12041;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12043 = x11099 * x1815;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12044 = x12042 + x12043;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12045 = x11105 * x1814;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12046 = x12044 + x12045;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12047 = x11111 * x1813;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12048 = x12046 + x12047;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12049 = x11117 * x1812;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12050 = x12048 + x12049;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12051 = x11123 * x1811;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12052 = x12050 + x12051;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12053 = x11129 * x1810;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12054 = x12052 + x12053;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12055 = x11135 * x1809;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12056 = x12054 + x12055;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12057 = x11141 * x1808;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12058 = x12056 + x12057;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12059 = x11147 * x1807;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12060 = x12058 + x12059;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12061 = x11153 * x1806;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12062 = x12060 + x12061;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12063 = x11159 * x1805;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12064 = x12062 + x12063;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12065 = x11165 * x1804;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12066 = x12064 + x12065;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12067 = x11171 * x1803;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12068 = x12066 + x12067;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12069 = x11177 * x1802;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12070 = x12068 + x12069;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12071 = x11039 * x1801;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12072 = x11045 * x1800;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12073 = x12071 + x12072;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12074 = x11051 * x1799;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12075 = x12073 + x12074;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12076 = x11057 * x1798;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12077 = x12075 + x12076;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12078 = x11063 * x1797;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12079 = x12077 + x12078;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12080 = x11069 * x1796;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12081 = x12079 + x12080;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12082 = x11075 * x1795;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12083 = x12081 + x12082;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12084 = x11081 * x1794;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12085 = x12083 + x12084;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12086 = x11087 * x1793;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12087 = x12085 + x12086;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12088 = x11093 * x1792;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12089 = x12087 + x12088;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12090 = x11099 * x1791;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12091 = x12089 + x12090;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12092 = x11105 * x1790;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12093 = x12091 + x12092;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12094 = x11111 * x1789;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12095 = x12093 + x12094;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12096 = x11117 * x1788;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12097 = x12095 + x12096;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12098 = x11123 * x1787;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12099 = x12097 + x12098;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12100 = x11129 * x1786;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12101 = x12099 + x12100;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12102 = x11135 * x1785;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12103 = x12101 + x12102;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12104 = x11141 * x1784;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12105 = x12103 + x12104;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12106 = x11147 * x1783;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12107 = x12105 + x12106;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12108 = x11153 * x1782;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12109 = x12107 + x12108;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12110 = x11159 * x1781;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12111 = x12109 + x12110;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12112 = x11165 * x1780;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12113 = x12111 + x12112;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12114 = x11171 * x1779;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12115 = x12113 + x12114;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12116 = x11177 * x1778;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12117 = x12115 + x12116;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12118 = x11039 * x1777;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12119 = x11045 * x1776;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12120 = x12118 + x12119;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12121 = x11051 * x1775;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12122 = x12120 + x12121;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12123 = x11057 * x1774;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12124 = x12122 + x12123;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12125 = x11063 * x1773;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12126 = x12124 + x12125;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12127 = x11069 * x1772;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12128 = x12126 + x12127;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12129 = x11075 * x1771;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12130 = x12128 + x12129;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12131 = x11081 * x1770;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12132 = x12130 + x12131;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12133 = x11087 * x1769;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12134 = x12132 + x12133;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12135 = x11093 * x1768;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12136 = x12134 + x12135;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12137 = x11099 * x1767;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12138 = x12136 + x12137;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12139 = x11105 * x1766;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12140 = x12138 + x12139;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12141 = x11111 * x1765;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12142 = x12140 + x12141;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12143 = x11117 * x1764;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12144 = x12142 + x12143;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12145 = x11123 * x1763;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12146 = x12144 + x12145;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12147 = x11129 * x1762;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12148 = x12146 + x12147;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12149 = x11135 * x1761;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12150 = x12148 + x12149;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12151 = x11141 * x1760;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12152 = x12150 + x12151;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12153 = x11147 * x1759;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12154 = x12152 + x12153;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12155 = x11153 * x1758;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12156 = x12154 + x12155;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12157 = x11159 * x1757;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12158 = x12156 + x12157;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12159 = x11165 * x1756;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12160 = x12158 + x12159;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12161 = x11171 * x1755;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12162 = x12160 + x12161;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12163 = x11177 * x1754;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12164 = x12162 + x12163;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12165 = x11039 * x1753;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12166 = x11045 * x1752;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12167 = x12165 + x12166;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12168 = x11051 * x1751;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12169 = x12167 + x12168;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12170 = x11057 * x1750;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12171 = x12169 + x12170;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12172 = x11063 * x1749;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12173 = x12171 + x12172;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12174 = x11069 * x1748;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12175 = x12173 + x12174;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12176 = x11075 * x1747;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12177 = x12175 + x12176;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12178 = x11081 * x1746;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12179 = x12177 + x12178;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12180 = x11087 * x1745;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12181 = x12179 + x12180;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12182 = x11093 * x1744;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12183 = x12181 + x12182;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12184 = x11099 * x1743;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12185 = x12183 + x12184;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12186 = x11105 * x1742;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12187 = x12185 + x12186;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12188 = x11111 * x1741;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12189 = x12187 + x12188;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12190 = x11117 * x1740;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12191 = x12189 + x12190;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12192 = x11123 * x1739;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12193 = x12191 + x12192;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12194 = x11129 * x1738;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12195 = x12193 + x12194;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12196 = x11135 * x1737;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12197 = x12195 + x12196;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12198 = x11141 * x1736;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12199 = x12197 + x12198;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12200 = x11147 * x1735;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12201 = x12199 + x12200;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12202 = x11153 * x1734;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12203 = x12201 + x12202;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12204 = x11159 * x1733;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12205 = x12203 + x12204;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12206 = x11165 * x1732;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12207 = x12205 + x12206;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12208 = x11171 * x1731;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12209 = x12207 + x12208;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12210 = x11177 * x1730;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12211 = x12209 + x12210;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12212 = x11039 * x1729;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12213 = x11045 * x1728;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12214 = x12212 + x12213;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12215 = x11051 * x1727;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12216 = x12214 + x12215;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12217 = x11057 * x1726;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12218 = x12216 + x12217;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12219 = x11063 * x1725;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12220 = x12218 + x12219;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12221 = x11069 * x1724;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12222 = x12220 + x12221;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12223 = x11075 * x1723;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12224 = x12222 + x12223;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12225 = x11081 * x1722;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12226 = x12224 + x12225;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12227 = x11087 * x1721;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12228 = x12226 + x12227;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12229 = x11093 * x1720;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12230 = x12228 + x12229;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12231 = x11099 * x1719;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12232 = x12230 + x12231;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12233 = x11105 * x1718;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12234 = x12232 + x12233;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12235 = x11111 * x1717;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12236 = x12234 + x12235;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12237 = x11117 * x1716;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12238 = x12236 + x12237;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12239 = x11123 * x1715;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12240 = x12238 + x12239;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12241 = x11129 * x1714;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12242 = x12240 + x12241;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12243 = x11135 * x1713;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12244 = x12242 + x12243;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12245 = x11141 * x1712;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12246 = x12244 + x12245;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12247 = x11147 * x1711;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12248 = x12246 + x12247;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12249 = x11153 * x1710;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12250 = x12248 + x12249;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12251 = x11159 * x1709;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12252 = x12250 + x12251;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12253 = x11165 * x1708;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12254 = x12252 + x12253;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12255 = x11171 * x1707;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12256 = x12254 + x12255;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12257 = x11177 * x1706;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12258 = x12256 + x12257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12259 = x11039 * x1705;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12260 = x11045 * x1704;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12261 = x12259 + x12260;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12262 = x11051 * x1703;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12263 = x12261 + x12262;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12264 = x11057 * x1702;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12265 = x12263 + x12264;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12266 = x11063 * x1701;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12267 = x12265 + x12266;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12268 = x11069 * x1700;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12269 = x12267 + x12268;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12270 = x11075 * x1699;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12271 = x12269 + x12270;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12272 = x11081 * x1698;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12273 = x12271 + x12272;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12274 = x11087 * x1697;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12275 = x12273 + x12274;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12276 = x11093 * x1696;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12277 = x12275 + x12276;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12278 = x11099 * x1695;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12279 = x12277 + x12278;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12280 = x11105 * x1694;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12281 = x12279 + x12280;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12282 = x11111 * x1693;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12283 = x12281 + x12282;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12284 = x11117 * x1692;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12285 = x12283 + x12284;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12286 = x11123 * x1691;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12287 = x12285 + x12286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12288 = x11129 * x1690;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12289 = x12287 + x12288;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12290 = x11135 * x1689;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12291 = x12289 + x12290;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12292 = x11141 * x1688;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12293 = x12291 + x12292;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12294 = x11147 * x1687;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12295 = x12293 + x12294;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12296 = x11153 * x1686;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12297 = x12295 + x12296;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12298 = x11159 * x1685;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12299 = x12297 + x12298;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12300 = x11165 * x1684;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12301 = x12299 + x12300;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12302 = x11171 * x1683;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12303 = x12301 + x12302;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12304 = x11177 * x1682;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12305 = x12303 + x12304;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_full(recursion::PoseidonFullInst)/cycle(OneHot)/c0(Reg)"("zirgen/circuit/recursion/poseidon.cpp":79:19))
    auto x12306 = args[0][7 * steps + ((cycle - 0) & mask)];
    assert(x12306 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12307 = x12306 * x1681;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_full(recursion::PoseidonFullInst)/cycle(OneHot)/c1(Reg)"("zirgen/circuit/recursion/poseidon.cpp":79:19))
    auto x12308 = args[0][8 * steps + ((cycle - 0) & mask)];
    assert(x12308 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12309 = x12308 * x1680;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12310 = x12307 + x12309;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_full(recursion::PoseidonFullInst)/cycle(OneHot)/c2(Reg)"("zirgen/circuit/recursion/poseidon.cpp":79:19))
    auto x12311 = args[0][9 * steps + ((cycle - 0) & mask)];
    assert(x12311 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12312 = x12311 * x1679;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12313 = x12310 + x12312;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_full(recursion::PoseidonFullInst)/cycle(OneHot)/c3(Reg)"("zirgen/circuit/recursion/poseidon.cpp":79:19))
    auto x12314 = args[0][10 * steps + ((cycle - 0) & mask)];
    assert(x12314 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12315 = x12314 * x1678;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12316 = x12313 + x12315;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12317 = x12306 * x1677;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12318 = x12308 * x1676;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12319 = x12317 + x12318;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12320 = x12311 * x1675;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12321 = x12319 + x12320;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12322 = x12314 * x1674;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12323 = x12321 + x12322;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12324 = x12306 * x1673;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12325 = x12308 * x1672;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12326 = x12324 + x12325;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12327 = x12311 * x1671;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12328 = x12326 + x12327;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12329 = x12314 * x1670;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12330 = x12328 + x12329;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12331 = x12306 * x1669;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12332 = x12308 * x1668;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12333 = x12331 + x12332;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12334 = x12311 * x1667;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12335 = x12333 + x12334;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12336 = x12314 * x1666;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12337 = x12335 + x12336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12338 = x12306 * x1665;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12339 = x12308 * x1664;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12340 = x12338 + x12339;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12341 = x12311 * x1663;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12342 = x12340 + x12341;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12343 = x12314 * x1662;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12344 = x12342 + x12343;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12345 = x12306 * x1661;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12346 = x12308 * x1660;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12347 = x12345 + x12346;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12348 = x12311 * x1659;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12349 = x12347 + x12348;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12350 = x12314 * x1658;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12351 = x12349 + x12350;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12352 = x12306 * x1657;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12353 = x12308 * x1656;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12354 = x12352 + x12353;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12355 = x12311 * x1655;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12356 = x12354 + x12355;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12357 = x12314 * x1654;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12358 = x12356 + x12357;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12359 = x12306 * x1653;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12360 = x12308 * x1652;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12361 = x12359 + x12360;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12362 = x12311 * x1651;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12363 = x12361 + x12362;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12364 = x12314 * x1650;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12365 = x12363 + x12364;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12366 = x12306 * x1649;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12367 = x12308 * x1648;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12368 = x12366 + x12367;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12369 = x12311 * x1647;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12370 = x12368 + x12369;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12371 = x12314 * x1646;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12372 = x12370 + x12371;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12373 = x12306 * x1645;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12374 = x12308 * x1644;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12375 = x12373 + x12374;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12376 = x12311 * x1643;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12377 = x12375 + x12376;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12378 = x12314 * x1642;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12379 = x12377 + x12378;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12380 = x12306 * x1641;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12381 = x12308 * x1640;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12382 = x12380 + x12381;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12383 = x12311 * x1639;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12384 = x12382 + x12383;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12385 = x12314 * x1638;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12386 = x12384 + x12385;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12387 = x12306 * x1637;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12388 = x12308 * x1636;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12389 = x12387 + x12388;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12390 = x12311 * x1635;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12391 = x12389 + x12390;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12392 = x12314 * x1634;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12393 = x12391 + x12392;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12394 = x12306 * x1633;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12395 = x12308 * x1632;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12396 = x12394 + x12395;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12397 = x12311 * x1631;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12398 = x12396 + x12397;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12399 = x12314 * x1630;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12400 = x12398 + x12399;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12401 = x12306 * x1629;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12402 = x12308 * x1628;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12403 = x12401 + x12402;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12404 = x12311 * x1627;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12405 = x12403 + x12404;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12406 = x12314 * x1626;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12407 = x12405 + x12406;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12408 = x12306 * x1625;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12409 = x12308 * x1624;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12410 = x12408 + x12409;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12411 = x12311 * x1623;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12412 = x12410 + x12411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12413 = x12314 * x1622;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12414 = x12412 + x12413;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12415 = x12306 * x1621;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12416 = x12308 * x1620;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12417 = x12415 + x12416;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12418 = x12311 * x1619;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12419 = x12417 + x12418;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12420 = x12314 * x1618;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12421 = x12419 + x12420;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12422 = x12306 * x1617;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12423 = x12308 * x1616;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12424 = x12422 + x12423;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12425 = x12311 * x1615;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12426 = x12424 + x12425;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12427 = x12314 * x1614;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12428 = x12426 + x12427;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12429 = x12306 * x1613;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12430 = x12308 * x1612;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12431 = x12429 + x12430;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12432 = x12311 * x1611;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12433 = x12431 + x12432;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12434 = x12314 * x1610;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12435 = x12433 + x12434;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12436 = x12306 * x1609;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12437 = x12308 * x1608;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12438 = x12436 + x12437;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12439 = x12311 * x1607;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12440 = x12438 + x12439;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12441 = x12314 * x1606;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12442 = x12440 + x12441;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12443 = x12306 * x1605;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12444 = x12308 * x1604;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12445 = x12443 + x12444;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12446 = x12311 * x1603;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12447 = x12445 + x12446;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12448 = x12314 * x1602;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12449 = x12447 + x12448;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12450 = x12306 * x1601;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12451 = x12308 * x1600;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12452 = x12450 + x12451;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12453 = x12311 * x1599;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12454 = x12452 + x12453;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12455 = x12314 * x1598;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12456 = x12454 + x12455;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12457 = x12306 * x1597;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12458 = x12308 * x1596;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12459 = x12457 + x12458;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12460 = x12311 * x1595;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12461 = x12459 + x12460;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12462 = x12314 * x1594;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12463 = x12461 + x12462;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12464 = x12306 * x1593;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12465 = x12308 * x1592;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12466 = x12464 + x12465;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12467 = x12311 * x1591;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12468 = x12466 + x12467;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12469 = x12314 * x1590;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12470 = x12468 + x12469;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12471 = x12306 * x1589;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12472 = x12308 * x1588;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12473 = x12471 + x12472;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12474 = x12311 * x1587;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12475 = x12473 + x12474;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x12476 = x12314 * x1586;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x12477 = x12475 + x12476;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12478 = x11224 + x12316;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][29 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12478);
      reg = x12478;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12479 = args[2][29 * steps + ((cycle - 0) & mask)];
    assert(x12479 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12480 = x12479 * x12479;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12481 = x12480 * x12480;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][53 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12481);
      reg = x12481;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12482 = args[2][53 * steps + ((cycle - 0) & mask)];
    assert(x12482 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12483 = x12482 * x12480;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12484 = x12483 * x12479;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12485 = x11271 + x12323;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][30 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12485);
      reg = x12485;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12486 = args[2][30 * steps + ((cycle - 0) & mask)];
    assert(x12486 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12487 = x12486 * x12486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12488 = x12487 * x12487;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][54 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12488);
      reg = x12488;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12489 = args[2][54 * steps + ((cycle - 0) & mask)];
    assert(x12489 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12490 = x12489 * x12487;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12491 = x12490 * x12486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12492 = x11318 + x12330;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][31 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12492);
      reg = x12492;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12493 = args[2][31 * steps + ((cycle - 0) & mask)];
    assert(x12493 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12494 = x12493 * x12493;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12495 = x12494 * x12494;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][55 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12495);
      reg = x12495;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12496 = args[2][55 * steps + ((cycle - 0) & mask)];
    assert(x12496 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12497 = x12496 * x12494;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12498 = x12497 * x12493;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12499 = x11365 + x12337;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][32 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12499);
      reg = x12499;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12500 = args[2][32 * steps + ((cycle - 0) & mask)];
    assert(x12500 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12501 = x12500 * x12500;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12502 = x12501 * x12501;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][56 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12502);
      reg = x12502;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12503 = args[2][56 * steps + ((cycle - 0) & mask)];
    assert(x12503 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12504 = x12503 * x12501;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12505 = x12504 * x12500;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12506 = x11412 + x12344;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][33 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12506);
      reg = x12506;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12507 = args[2][33 * steps + ((cycle - 0) & mask)];
    assert(x12507 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12508 = x12507 * x12507;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12509 = x12508 * x12508;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][57 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12509);
      reg = x12509;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12510 = args[2][57 * steps + ((cycle - 0) & mask)];
    assert(x12510 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12511 = x12510 * x12508;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12512 = x12511 * x12507;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12513 = x11459 + x12351;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][34 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12513);
      reg = x12513;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12514 = args[2][34 * steps + ((cycle - 0) & mask)];
    assert(x12514 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12515 = x12514 * x12514;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12516 = x12515 * x12515;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][58 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12516);
      reg = x12516;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12517 = args[2][58 * steps + ((cycle - 0) & mask)];
    assert(x12517 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12518 = x12517 * x12515;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12519 = x12518 * x12514;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12520 = x11506 + x12358;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][35 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12520);
      reg = x12520;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12521 = args[2][35 * steps + ((cycle - 0) & mask)];
    assert(x12521 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12522 = x12521 * x12521;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12523 = x12522 * x12522;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][59 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12523);
      reg = x12523;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12524 = args[2][59 * steps + ((cycle - 0) & mask)];
    assert(x12524 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12525 = x12524 * x12522;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12526 = x12525 * x12521;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12527 = x11553 + x12365;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][36 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12527);
      reg = x12527;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12528 = args[2][36 * steps + ((cycle - 0) & mask)];
    assert(x12528 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12529 = x12528 * x12528;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12530 = x12529 * x12529;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][60 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12530);
      reg = x12530;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12531 = args[2][60 * steps + ((cycle - 0) & mask)];
    assert(x12531 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12532 = x12531 * x12529;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12533 = x12532 * x12528;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12534 = x11600 + x12372;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][37 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12534);
      reg = x12534;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12535 = args[2][37 * steps + ((cycle - 0) & mask)];
    assert(x12535 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12536 = x12535 * x12535;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12537 = x12536 * x12536;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][61 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12537);
      reg = x12537;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12538 = args[2][61 * steps + ((cycle - 0) & mask)];
    assert(x12538 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12539 = x12538 * x12536;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12540 = x12539 * x12535;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12541 = x11647 + x12379;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][38 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12541);
      reg = x12541;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12542 = args[2][38 * steps + ((cycle - 0) & mask)];
    assert(x12542 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12543 = x12542 * x12542;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12544 = x12543 * x12543;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][62 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12544);
      reg = x12544;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12545 = args[2][62 * steps + ((cycle - 0) & mask)];
    assert(x12545 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12546 = x12545 * x12543;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12547 = x12546 * x12542;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12548 = x11694 + x12386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][39 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12548);
      reg = x12548;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12549 = args[2][39 * steps + ((cycle - 0) & mask)];
    assert(x12549 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12550 = x12549 * x12549;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12551 = x12550 * x12550;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][63 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12551);
      reg = x12551;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12552 = args[2][63 * steps + ((cycle - 0) & mask)];
    assert(x12552 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12553 = x12552 * x12550;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12554 = x12553 * x12549;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12555 = x11741 + x12393;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][40 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12555);
      reg = x12555;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12556 = args[2][40 * steps + ((cycle - 0) & mask)];
    assert(x12556 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12557 = x12556 * x12556;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12558 = x12557 * x12557;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][64 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12558);
      reg = x12558;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12559 = args[2][64 * steps + ((cycle - 0) & mask)];
    assert(x12559 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12560 = x12559 * x12557;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12561 = x12560 * x12556;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12562 = x11788 + x12400;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][41 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12562);
      reg = x12562;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12563 = args[2][41 * steps + ((cycle - 0) & mask)];
    assert(x12563 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12564 = x12563 * x12563;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12565 = x12564 * x12564;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][65 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12565);
      reg = x12565;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12566 = args[2][65 * steps + ((cycle - 0) & mask)];
    assert(x12566 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12567 = x12566 * x12564;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12568 = x12567 * x12563;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12569 = x11835 + x12407;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][42 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12569);
      reg = x12569;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12570 = args[2][42 * steps + ((cycle - 0) & mask)];
    assert(x12570 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12571 = x12570 * x12570;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12572 = x12571 * x12571;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][66 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12572);
      reg = x12572;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12573 = args[2][66 * steps + ((cycle - 0) & mask)];
    assert(x12573 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12574 = x12573 * x12571;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12575 = x12574 * x12570;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12576 = x11882 + x12414;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][43 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12576);
      reg = x12576;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12577 = args[2][43 * steps + ((cycle - 0) & mask)];
    assert(x12577 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12578 = x12577 * x12577;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12579 = x12578 * x12578;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][67 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12579);
      reg = x12579;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12580 = args[2][67 * steps + ((cycle - 0) & mask)];
    assert(x12580 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12581 = x12580 * x12578;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12582 = x12581 * x12577;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12583 = x11929 + x12421;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][44 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12583);
      reg = x12583;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12584 = args[2][44 * steps + ((cycle - 0) & mask)];
    assert(x12584 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12585 = x12584 * x12584;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12586 = x12585 * x12585;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][68 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12586);
      reg = x12586;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12587 = args[2][68 * steps + ((cycle - 0) & mask)];
    assert(x12587 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12588 = x12587 * x12585;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12589 = x12588 * x12584;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12590 = x11976 + x12428;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][45 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12590);
      reg = x12590;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12591 = args[2][45 * steps + ((cycle - 0) & mask)];
    assert(x12591 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12592 = x12591 * x12591;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12593 = x12592 * x12592;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][69 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12593);
      reg = x12593;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12594 = args[2][69 * steps + ((cycle - 0) & mask)];
    assert(x12594 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12595 = x12594 * x12592;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12596 = x12595 * x12591;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12597 = x12023 + x12435;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][46 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12597);
      reg = x12597;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12598 = args[2][46 * steps + ((cycle - 0) & mask)];
    assert(x12598 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12599 = x12598 * x12598;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12600 = x12599 * x12599;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][70 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12600);
      reg = x12600;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12601 = args[2][70 * steps + ((cycle - 0) & mask)];
    assert(x12601 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12602 = x12601 * x12599;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12603 = x12602 * x12598;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12604 = x12070 + x12442;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][47 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12604);
      reg = x12604;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12605 = args[2][47 * steps + ((cycle - 0) & mask)];
    assert(x12605 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12606 = x12605 * x12605;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12607 = x12606 * x12606;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][71 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12607);
      reg = x12607;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12608 = args[2][71 * steps + ((cycle - 0) & mask)];
    assert(x12608 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12609 = x12608 * x12606;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12610 = x12609 * x12605;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12611 = x12117 + x12449;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][48 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12611);
      reg = x12611;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12612 = args[2][48 * steps + ((cycle - 0) & mask)];
    assert(x12612 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12613 = x12612 * x12612;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12614 = x12613 * x12613;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][72 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12614);
      reg = x12614;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12615 = args[2][72 * steps + ((cycle - 0) & mask)];
    assert(x12615 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12616 = x12615 * x12613;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12617 = x12616 * x12612;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12618 = x12164 + x12456;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][49 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12618);
      reg = x12618;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12619 = args[2][49 * steps + ((cycle - 0) & mask)];
    assert(x12619 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12620 = x12619 * x12619;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12621 = x12620 * x12620;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][73 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12621);
      reg = x12621;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12622 = args[2][73 * steps + ((cycle - 0) & mask)];
    assert(x12622 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12623 = x12622 * x12620;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12624 = x12623 * x12619;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12625 = x12211 + x12463;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][50 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12625);
      reg = x12625;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12626 = args[2][50 * steps + ((cycle - 0) & mask)];
    assert(x12626 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12627 = x12626 * x12626;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12628 = x12627 * x12627;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][74 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12628);
      reg = x12628;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12629 = args[2][74 * steps + ((cycle - 0) & mask)];
    assert(x12629 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12630 = x12629 * x12627;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12631 = x12630 * x12626;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12632 = x12258 + x12470;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][51 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12632);
      reg = x12632;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12633 = args[2][51 * steps + ((cycle - 0) & mask)];
    assert(x12633 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12634 = x12633 * x12633;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12635 = x12634 * x12634;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][75 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12635);
      reg = x12635;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12636 = args[2][75 * steps + ((cycle - 0) & mask)];
    assert(x12636 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12637 = x12636 * x12634;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12638 = x12637 * x12633;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:19)
    auto x12639 = x12305 + x12477;
    // loc("zirgen/circuit/recursion/poseidon.cpp":95:5)
    {
      auto& reg = args[2][52 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12639);
      reg = x12639;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x12640 = args[2][52 * steps + ((cycle - 0) & mask)];
    assert(x12640 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x12641 = x12640 * x12640;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x12642 = x12641 * x12641;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][76 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x12642);
      reg = x12642;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_full(recursion::PoseidonFull)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x12643 = args[2][76 * steps + ((cycle - 0) & mask)];
    assert(x12643 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12644 = x12643 * x12641;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x12645 = x12644 * x12640;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12646 = x12484 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12647 = x12491 * x2256;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12648 = x12646 + x12647;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12649 = x12498 * x2255;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12650 = x12648 + x12649;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12651 = x12505 * x2254;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12652 = x12650 + x12651;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12653 = x12512 * x2253;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12654 = x12652 + x12653;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12655 = x12519 * x2252;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12656 = x12654 + x12655;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12657 = x12526 * x2251;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12658 = x12656 + x12657;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12659 = x12533 * x2250;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12660 = x12658 + x12659;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12661 = x12540 * x2249;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12662 = x12660 + x12661;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12663 = x12547 * x2248;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12664 = x12662 + x12663;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12665 = x12554 * x2247;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12666 = x12664 + x12665;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12667 = x12561 * x2246;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12668 = x12666 + x12667;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12669 = x12568 * x2245;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12670 = x12668 + x12669;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12671 = x12575 * x2244;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12672 = x12670 + x12671;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12673 = x12582 * x2243;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12674 = x12672 + x12673;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12675 = x12589 * x2242;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12676 = x12674 + x12675;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12677 = x12596 * x2241;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12678 = x12676 + x12677;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12679 = x12603 * x2240;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12680 = x12678 + x12679;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12681 = x12610 * x2239;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12682 = x12680 + x12681;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12683 = x12617 * x2238;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12684 = x12682 + x12683;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12685 = x12624 * x2237;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12686 = x12684 + x12685;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12687 = x12631 * x2236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12688 = x12686 + x12687;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12689 = x12638 * x2235;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12690 = x12688 + x12689;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12691 = x12645 * x2234;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12692 = x12690 + x12691;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12693 = x12484 * x2233;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12694 = x12491 * x2232;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12695 = x12693 + x12694;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12696 = x12498 * x2231;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12697 = x12695 + x12696;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12698 = x12505 * x2230;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12699 = x12697 + x12698;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12700 = x12512 * x2229;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12701 = x12699 + x12700;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12702 = x12519 * x2228;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12703 = x12701 + x12702;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12704 = x12526 * x2227;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12705 = x12703 + x12704;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12706 = x12533 * x2226;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12707 = x12705 + x12706;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12708 = x12540 * x2225;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12709 = x12707 + x12708;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12710 = x12547 * x2224;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12711 = x12709 + x12710;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12712 = x12554 * x2223;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12713 = x12711 + x12712;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12714 = x12561 * x2222;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12715 = x12713 + x12714;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12716 = x12568 * x2221;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12717 = x12715 + x12716;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12718 = x12575 * x2220;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12719 = x12717 + x12718;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12720 = x12582 * x2219;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12721 = x12719 + x12720;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12722 = x12589 * x2218;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12723 = x12721 + x12722;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12724 = x12596 * x2217;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12725 = x12723 + x12724;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12726 = x12603 * x2216;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12727 = x12725 + x12726;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12728 = x12610 * x2215;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12729 = x12727 + x12728;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12730 = x12617 * x2214;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12731 = x12729 + x12730;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12732 = x12624 * x2213;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12733 = x12731 + x12732;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12734 = x12631 * x2212;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12735 = x12733 + x12734;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12736 = x12638 * x2211;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12737 = x12735 + x12736;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12738 = x12645 * x2210;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12739 = x12737 + x12738;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12740 = x12484 * x2209;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12741 = x12491 * x2208;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12742 = x12740 + x12741;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12743 = x12498 * x2207;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12744 = x12742 + x12743;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12745 = x12505 * x2206;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12746 = x12744 + x12745;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12747 = x12512 * x2205;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12748 = x12746 + x12747;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12749 = x12519 * x2204;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12750 = x12748 + x12749;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12751 = x12526 * x2203;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12752 = x12750 + x12751;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12753 = x12533 * x2202;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12754 = x12752 + x12753;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12755 = x12540 * x2201;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12756 = x12754 + x12755;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12757 = x12547 * x2200;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12758 = x12756 + x12757;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12759 = x12554 * x2199;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12760 = x12758 + x12759;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12761 = x12561 * x2198;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12762 = x12760 + x12761;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12763 = x12568 * x2197;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12764 = x12762 + x12763;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12765 = x12575 * x2196;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12766 = x12764 + x12765;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12767 = x12582 * x2195;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12768 = x12766 + x12767;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12769 = x12589 * x2194;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12770 = x12768 + x12769;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12771 = x12596 * x2193;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12772 = x12770 + x12771;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12773 = x12603 * x2192;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12774 = x12772 + x12773;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12775 = x12610 * x2191;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12776 = x12774 + x12775;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12777 = x12617 * x2190;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12778 = x12776 + x12777;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12779 = x12624 * x2189;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12780 = x12778 + x12779;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12781 = x12631 * x2188;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12782 = x12780 + x12781;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12783 = x12638 * x2187;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12784 = x12782 + x12783;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12785 = x12645 * x2186;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12786 = x12784 + x12785;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12787 = x12484 * x2185;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12788 = x12491 * x2184;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12789 = x12787 + x12788;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12790 = x12498 * x2183;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12791 = x12789 + x12790;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12792 = x12505 * x2182;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12793 = x12791 + x12792;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12794 = x12512 * x2181;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12795 = x12793 + x12794;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12796 = x12519 * x2180;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12797 = x12795 + x12796;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12798 = x12526 * x2179;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12799 = x12797 + x12798;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12800 = x12533 * x2178;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12801 = x12799 + x12800;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12802 = x12540 * x2177;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12803 = x12801 + x12802;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12804 = x12547 * x2176;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12805 = x12803 + x12804;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12806 = x12554 * x2175;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12807 = x12805 + x12806;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12808 = x12561 * x2174;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12809 = x12807 + x12808;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12810 = x12568 * x2173;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12811 = x12809 + x12810;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12812 = x12575 * x2172;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12813 = x12811 + x12812;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12814 = x12582 * x2171;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12815 = x12813 + x12814;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12816 = x12589 * x2170;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12817 = x12815 + x12816;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12818 = x12596 * x2169;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12819 = x12817 + x12818;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12820 = x12603 * x2168;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12821 = x12819 + x12820;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12822 = x12610 * x2167;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12823 = x12821 + x12822;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12824 = x12617 * x2166;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12825 = x12823 + x12824;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12826 = x12624 * x2165;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12827 = x12825 + x12826;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12828 = x12631 * x2164;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12829 = x12827 + x12828;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12830 = x12638 * x2163;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12831 = x12829 + x12830;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12832 = x12645 * x2162;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12833 = x12831 + x12832;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12834 = x12484 * x2161;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12835 = x12491 * x2160;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12836 = x12834 + x12835;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12837 = x12498 * x2159;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12838 = x12836 + x12837;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12839 = x12505 * x2158;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12840 = x12838 + x12839;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12841 = x12512 * x2157;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12842 = x12840 + x12841;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12843 = x12519 * x2156;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12844 = x12842 + x12843;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12845 = x12526 * x2155;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12846 = x12844 + x12845;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12847 = x12533 * x2154;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12848 = x12846 + x12847;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12849 = x12540 * x2153;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12850 = x12848 + x12849;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12851 = x12547 * x2152;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12852 = x12850 + x12851;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12853 = x12554 * x2151;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12854 = x12852 + x12853;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12855 = x12561 * x2150;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12856 = x12854 + x12855;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12857 = x12568 * x2149;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12858 = x12856 + x12857;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12859 = x12575 * x2148;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12860 = x12858 + x12859;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12861 = x12582 * x2147;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12862 = x12860 + x12861;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12863 = x12589 * x2146;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12864 = x12862 + x12863;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12865 = x12596 * x2145;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12866 = x12864 + x12865;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12867 = x12603 * x2144;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12868 = x12866 + x12867;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12869 = x12610 * x2143;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12870 = x12868 + x12869;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12871 = x12617 * x2142;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12872 = x12870 + x12871;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12873 = x12624 * x2141;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12874 = x12872 + x12873;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12875 = x12631 * x2140;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12876 = x12874 + x12875;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12877 = x12638 * x2139;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12878 = x12876 + x12877;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12879 = x12645 * x2138;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12880 = x12878 + x12879;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12881 = x12484 * x2137;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12882 = x12491 * x2136;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12883 = x12881 + x12882;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12884 = x12498 * x2135;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12885 = x12883 + x12884;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12886 = x12505 * x2134;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12887 = x12885 + x12886;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12888 = x12512 * x2133;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12889 = x12887 + x12888;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12890 = x12519 * x2132;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12891 = x12889 + x12890;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12892 = x12526 * x2131;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12893 = x12891 + x12892;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12894 = x12533 * x2130;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12895 = x12893 + x12894;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12896 = x12540 * x2129;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12897 = x12895 + x12896;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12898 = x12547 * x2128;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12899 = x12897 + x12898;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12900 = x12554 * x2127;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12901 = x12899 + x12900;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12902 = x12561 * x2126;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12903 = x12901 + x12902;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12904 = x12568 * x2125;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12905 = x12903 + x12904;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12906 = x12575 * x2124;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12907 = x12905 + x12906;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12908 = x12582 * x2123;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12909 = x12907 + x12908;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12910 = x12589 * x2122;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12911 = x12909 + x12910;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12912 = x12596 * x2121;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12913 = x12911 + x12912;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12914 = x12603 * x2120;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12915 = x12913 + x12914;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12916 = x12610 * x2119;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12917 = x12915 + x12916;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12918 = x12617 * x2118;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12919 = x12917 + x12918;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12920 = x12624 * x2117;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12921 = x12919 + x12920;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12922 = x12631 * x2116;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12923 = x12921 + x12922;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12924 = x12638 * x2115;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12925 = x12923 + x12924;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12926 = x12645 * x2114;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12927 = x12925 + x12926;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12928 = x12484 * x2113;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12929 = x12491 * x2112;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12930 = x12928 + x12929;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12931 = x12498 * x2111;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12932 = x12930 + x12931;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12933 = x12505 * x2110;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12934 = x12932 + x12933;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12935 = x12512 * x2109;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12936 = x12934 + x12935;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12937 = x12519 * x2108;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12938 = x12936 + x12937;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12939 = x12526 * x2107;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12940 = x12938 + x12939;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12941 = x12533 * x2106;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12942 = x12940 + x12941;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12943 = x12540 * x2105;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12944 = x12942 + x12943;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12945 = x12547 * x2104;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12946 = x12944 + x12945;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12947 = x12554 * x2103;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12948 = x12946 + x12947;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12949 = x12561 * x2102;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12950 = x12948 + x12949;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12951 = x12568 * x2101;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12952 = x12950 + x12951;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12953 = x12575 * x2100;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12954 = x12952 + x12953;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12955 = x12582 * x2099;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12956 = x12954 + x12955;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12957 = x12589 * x2098;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12958 = x12956 + x12957;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12959 = x12596 * x2097;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12960 = x12958 + x12959;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12961 = x12603 * x2096;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12962 = x12960 + x12961;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12963 = x12610 * x2095;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12964 = x12962 + x12963;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12965 = x12617 * x2094;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12966 = x12964 + x12965;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12967 = x12624 * x2093;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12968 = x12966 + x12967;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12969 = x12631 * x2092;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12970 = x12968 + x12969;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12971 = x12638 * x2091;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12972 = x12970 + x12971;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12973 = x12645 * x2090;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12974 = x12972 + x12973;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12975 = x12484 * x2089;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12976 = x12491 * x2088;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12977 = x12975 + x12976;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12978 = x12498 * x2087;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12979 = x12977 + x12978;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12980 = x12505 * x2086;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12981 = x12979 + x12980;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12982 = x12512 * x2085;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12983 = x12981 + x12982;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12984 = x12519 * x2084;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12985 = x12983 + x12984;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12986 = x12526 * x2083;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12987 = x12985 + x12986;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12988 = x12533 * x2082;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12989 = x12987 + x12988;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12990 = x12540 * x2081;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12991 = x12989 + x12990;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12992 = x12547 * x2080;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12993 = x12991 + x12992;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12994 = x12554 * x2079;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12995 = x12993 + x12994;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12996 = x12561 * x2078;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12997 = x12995 + x12996;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x12998 = x12568 * x2077;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x12999 = x12997 + x12998;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13000 = x12575 * x2076;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13001 = x12999 + x13000;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13002 = x12582 * x2075;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13003 = x13001 + x13002;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13004 = x12589 * x2074;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13005 = x13003 + x13004;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13006 = x12596 * x2073;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13007 = x13005 + x13006;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13008 = x12603 * x2072;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13009 = x13007 + x13008;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13010 = x12610 * x2071;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13011 = x13009 + x13010;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13012 = x12617 * x2070;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13013 = x13011 + x13012;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13014 = x12624 * x2069;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13015 = x13013 + x13014;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13016 = x12631 * x2068;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13017 = x13015 + x13016;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13018 = x12638 * x2067;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13019 = x13017 + x13018;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13020 = x12645 * x2066;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13021 = x13019 + x13020;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13022 = x12484 * x2065;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13023 = x12491 * x2064;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13024 = x13022 + x13023;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13025 = x12498 * x2063;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13026 = x13024 + x13025;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13027 = x12505 * x2062;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13028 = x13026 + x13027;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13029 = x12512 * x2061;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13030 = x13028 + x13029;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13031 = x12519 * x2060;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13032 = x13030 + x13031;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13033 = x12526 * x2059;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13034 = x13032 + x13033;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13035 = x12533 * x2058;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13036 = x13034 + x13035;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13037 = x12540 * x2057;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13038 = x13036 + x13037;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13039 = x12547 * x2056;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13040 = x13038 + x13039;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13041 = x12554 * x2055;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13042 = x13040 + x13041;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13043 = x12561 * x2054;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13044 = x13042 + x13043;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13045 = x12568 * x2053;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13046 = x13044 + x13045;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13047 = x12575 * x2052;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13048 = x13046 + x13047;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13049 = x12582 * x2051;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13050 = x13048 + x13049;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13051 = x12589 * x2050;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13052 = x13050 + x13051;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13053 = x12596 * x2049;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13054 = x13052 + x13053;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13055 = x12603 * x2048;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13056 = x13054 + x13055;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13057 = x12610 * x2047;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13058 = x13056 + x13057;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13059 = x12617 * x2046;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13060 = x13058 + x13059;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13061 = x12624 * x2045;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13062 = x13060 + x13061;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13063 = x12631 * x2044;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13064 = x13062 + x13063;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13065 = x12638 * x2043;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13066 = x13064 + x13065;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13067 = x12645 * x2042;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13068 = x13066 + x13067;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13069 = x12484 * x2041;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13070 = x12491 * x2040;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13071 = x13069 + x13070;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13072 = x12498 * x2039;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13073 = x13071 + x13072;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13074 = x12505 * x2038;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13075 = x13073 + x13074;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13076 = x12512 * x2037;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13077 = x13075 + x13076;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13078 = x12519 * x2036;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13079 = x13077 + x13078;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13080 = x12526 * x2035;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13081 = x13079 + x13080;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13082 = x12533 * x2034;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13083 = x13081 + x13082;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13084 = x12540 * x2033;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13085 = x13083 + x13084;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13086 = x12547 * x2032;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13087 = x13085 + x13086;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13088 = x12554 * x2031;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13089 = x13087 + x13088;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13090 = x12561 * x2030;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13091 = x13089 + x13090;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13092 = x12568 * x2029;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13093 = x13091 + x13092;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13094 = x12575 * x2028;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13095 = x13093 + x13094;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13096 = x12582 * x2027;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13097 = x13095 + x13096;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13098 = x12589 * x2026;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13099 = x13097 + x13098;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13100 = x12596 * x2025;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13101 = x13099 + x13100;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13102 = x12603 * x2024;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13103 = x13101 + x13102;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13104 = x12610 * x2023;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13105 = x13103 + x13104;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13106 = x12617 * x2022;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13107 = x13105 + x13106;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13108 = x12624 * x2021;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13109 = x13107 + x13108;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13110 = x12631 * x2020;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13111 = x13109 + x13110;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13112 = x12638 * x2019;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13113 = x13111 + x13112;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13114 = x12645 * x2018;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13115 = x13113 + x13114;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13116 = x12484 * x2017;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13117 = x12491 * x2016;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13118 = x13116 + x13117;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13119 = x12498 * x2015;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13120 = x13118 + x13119;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13121 = x12505 * x2014;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13122 = x13120 + x13121;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13123 = x12512 * x2013;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13124 = x13122 + x13123;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13125 = x12519 * x2012;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13126 = x13124 + x13125;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13127 = x12526 * x2011;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13128 = x13126 + x13127;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13129 = x12533 * x2010;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13130 = x13128 + x13129;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13131 = x12540 * x2009;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13132 = x13130 + x13131;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13133 = x12547 * x2008;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13134 = x13132 + x13133;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13135 = x12554 * x2007;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13136 = x13134 + x13135;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13137 = x12561 * x2006;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13138 = x13136 + x13137;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13139 = x12568 * x2005;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13140 = x13138 + x13139;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13141 = x12575 * x2004;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13142 = x13140 + x13141;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13143 = x12582 * x2003;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13144 = x13142 + x13143;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13145 = x12589 * x2002;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13146 = x13144 + x13145;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13147 = x12596 * x2001;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13148 = x13146 + x13147;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13149 = x12603 * x2000;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13150 = x13148 + x13149;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13151 = x12610 * x1999;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13152 = x13150 + x13151;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13153 = x12617 * x1998;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13154 = x13152 + x13153;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13155 = x12624 * x1997;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13156 = x13154 + x13155;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13157 = x12631 * x1996;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13158 = x13156 + x13157;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13159 = x12638 * x1995;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13160 = x13158 + x13159;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13161 = x12645 * x1994;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13162 = x13160 + x13161;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13163 = x12484 * x1993;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13164 = x12491 * x1992;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13165 = x13163 + x13164;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13166 = x12498 * x1991;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13167 = x13165 + x13166;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13168 = x12505 * x1990;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13169 = x13167 + x13168;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13170 = x12512 * x1989;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13171 = x13169 + x13170;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13172 = x12519 * x1988;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13173 = x13171 + x13172;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13174 = x12526 * x1987;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13175 = x13173 + x13174;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13176 = x12533 * x1986;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13177 = x13175 + x13176;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13178 = x12540 * x1985;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13179 = x13177 + x13178;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13180 = x12547 * x1984;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13181 = x13179 + x13180;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13182 = x12554 * x1983;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13183 = x13181 + x13182;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13184 = x12561 * x1982;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13185 = x13183 + x13184;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13186 = x12568 * x1981;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13187 = x13185 + x13186;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13188 = x12575 * x1980;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13189 = x13187 + x13188;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13190 = x12582 * x1979;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13191 = x13189 + x13190;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13192 = x12589 * x1978;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13193 = x13191 + x13192;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13194 = x12596 * x1977;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13195 = x13193 + x13194;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13196 = x12603 * x1976;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13197 = x13195 + x13196;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13198 = x12610 * x1975;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13199 = x13197 + x13198;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13200 = x12617 * x1974;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13201 = x13199 + x13200;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13202 = x12624 * x1973;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13203 = x13201 + x13202;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13204 = x12631 * x1972;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13205 = x13203 + x13204;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13206 = x12638 * x1971;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13207 = x13205 + x13206;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13208 = x12645 * x1970;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13209 = x13207 + x13208;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13210 = x12484 * x1969;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13211 = x12491 * x1968;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13212 = x13210 + x13211;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13213 = x12498 * x1967;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13214 = x13212 + x13213;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13215 = x12505 * x1966;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13216 = x13214 + x13215;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13217 = x12512 * x1965;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13218 = x13216 + x13217;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13219 = x12519 * x1964;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13220 = x13218 + x13219;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13221 = x12526 * x1963;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13222 = x13220 + x13221;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13223 = x12533 * x1962;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13224 = x13222 + x13223;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13225 = x12540 * x1961;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13226 = x13224 + x13225;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13227 = x12547 * x1960;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13228 = x13226 + x13227;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13229 = x12554 * x1959;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13230 = x13228 + x13229;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13231 = x12561 * x1958;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13232 = x13230 + x13231;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13233 = x12568 * x1957;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13234 = x13232 + x13233;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13235 = x12575 * x1956;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13236 = x13234 + x13235;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13237 = x12582 * x1955;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13238 = x13236 + x13237;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13239 = x12589 * x1954;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13240 = x13238 + x13239;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13241 = x12596 * x1953;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13242 = x13240 + x13241;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13243 = x12603 * x1952;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13244 = x13242 + x13243;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13245 = x12610 * x1951;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13246 = x13244 + x13245;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13247 = x12617 * x1950;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13248 = x13246 + x13247;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13249 = x12624 * x1949;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13250 = x13248 + x13249;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13251 = x12631 * x1948;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13252 = x13250 + x13251;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13253 = x12638 * x1947;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13254 = x13252 + x13253;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13255 = x12645 * x1946;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13256 = x13254 + x13255;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13257 = x12484 * x1945;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13258 = x12491 * x1944;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13259 = x13257 + x13258;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13260 = x12498 * x1943;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13261 = x13259 + x13260;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13262 = x12505 * x1942;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13263 = x13261 + x13262;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13264 = x12512 * x1941;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13265 = x13263 + x13264;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13266 = x12519 * x1940;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13267 = x13265 + x13266;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13268 = x12526 * x1939;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13269 = x13267 + x13268;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13270 = x12533 * x1938;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13271 = x13269 + x13270;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13272 = x12540 * x1937;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13273 = x13271 + x13272;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13274 = x12547 * x1936;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13275 = x13273 + x13274;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13276 = x12554 * x1935;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13277 = x13275 + x13276;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13278 = x12561 * x1934;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13279 = x13277 + x13278;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13280 = x12568 * x1933;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13281 = x13279 + x13280;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13282 = x12575 * x1932;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13283 = x13281 + x13282;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13284 = x12582 * x1931;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13285 = x13283 + x13284;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13286 = x12589 * x1930;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13287 = x13285 + x13286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13288 = x12596 * x1929;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13289 = x13287 + x13288;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13290 = x12603 * x1928;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13291 = x13289 + x13290;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13292 = x12610 * x1927;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13293 = x13291 + x13292;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13294 = x12617 * x1926;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13295 = x13293 + x13294;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13296 = x12624 * x1925;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13297 = x13295 + x13296;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13298 = x12631 * x1924;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13299 = x13297 + x13298;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13300 = x12638 * x1923;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13301 = x13299 + x13300;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13302 = x12645 * x1922;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13303 = x13301 + x13302;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13304 = x12484 * x1921;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13305 = x12491 * x1920;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13306 = x13304 + x13305;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13307 = x12498 * x1919;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13308 = x13306 + x13307;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13309 = x12505 * x1918;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13310 = x13308 + x13309;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13311 = x12512 * x1917;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13312 = x13310 + x13311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13313 = x12519 * x1916;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13314 = x13312 + x13313;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13315 = x12526 * x1915;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13316 = x13314 + x13315;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13317 = x12533 * x1914;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13318 = x13316 + x13317;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13319 = x12540 * x1913;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13320 = x13318 + x13319;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13321 = x12547 * x1912;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13322 = x13320 + x13321;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13323 = x12554 * x1911;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13324 = x13322 + x13323;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13325 = x12561 * x1910;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13326 = x13324 + x13325;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13327 = x12568 * x1909;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13328 = x13326 + x13327;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13329 = x12575 * x1908;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13330 = x13328 + x13329;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13331 = x12582 * x1907;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13332 = x13330 + x13331;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13333 = x12589 * x1906;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13334 = x13332 + x13333;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13335 = x12596 * x1905;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13336 = x13334 + x13335;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13337 = x12603 * x1904;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13338 = x13336 + x13337;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13339 = x12610 * x1903;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13340 = x13338 + x13339;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13341 = x12617 * x1902;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13342 = x13340 + x13341;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13343 = x12624 * x1901;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13344 = x13342 + x13343;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13345 = x12631 * x1900;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13346 = x13344 + x13345;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13347 = x12638 * x1899;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13348 = x13346 + x13347;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13349 = x12645 * x1898;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13350 = x13348 + x13349;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13351 = x12484 * x1897;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13352 = x12491 * x1896;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13353 = x13351 + x13352;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13354 = x12498 * x1895;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13355 = x13353 + x13354;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13356 = x12505 * x1894;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13357 = x13355 + x13356;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13358 = x12512 * x1893;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13359 = x13357 + x13358;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13360 = x12519 * x1892;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13361 = x13359 + x13360;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13362 = x12526 * x1891;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13363 = x13361 + x13362;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13364 = x12533 * x1890;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13365 = x13363 + x13364;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13366 = x12540 * x1889;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13367 = x13365 + x13366;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13368 = x12547 * x1888;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13369 = x13367 + x13368;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13370 = x12554 * x1887;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13371 = x13369 + x13370;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13372 = x12561 * x1886;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13373 = x13371 + x13372;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13374 = x12568 * x1885;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13375 = x13373 + x13374;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13376 = x12575 * x1884;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13377 = x13375 + x13376;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13378 = x12582 * x1883;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13379 = x13377 + x13378;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13380 = x12589 * x1882;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13381 = x13379 + x13380;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13382 = x12596 * x1881;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13383 = x13381 + x13382;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13384 = x12603 * x1880;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13385 = x13383 + x13384;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13386 = x12610 * x1879;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13387 = x13385 + x13386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13388 = x12617 * x1878;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13389 = x13387 + x13388;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13390 = x12624 * x1877;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13391 = x13389 + x13390;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13392 = x12631 * x1876;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13393 = x13391 + x13392;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13394 = x12638 * x1875;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13395 = x13393 + x13394;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13396 = x12645 * x1874;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13397 = x13395 + x13396;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13398 = x12484 * x1873;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13399 = x12491 * x1872;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13400 = x13398 + x13399;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13401 = x12498 * x1871;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13402 = x13400 + x13401;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13403 = x12505 * x1870;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13404 = x13402 + x13403;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13405 = x12512 * x1869;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13406 = x13404 + x13405;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13407 = x12519 * x1868;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13408 = x13406 + x13407;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13409 = x12526 * x1867;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13410 = x13408 + x13409;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13411 = x12533 * x1866;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13412 = x13410 + x13411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13413 = x12540 * x1865;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13414 = x13412 + x13413;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13415 = x12547 * x1864;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13416 = x13414 + x13415;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13417 = x12554 * x1863;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13418 = x13416 + x13417;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13419 = x12561 * x1862;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13420 = x13418 + x13419;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13421 = x12568 * x1861;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13422 = x13420 + x13421;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13423 = x12575 * x1860;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13424 = x13422 + x13423;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13425 = x12582 * x1859;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13426 = x13424 + x13425;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13427 = x12589 * x1858;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13428 = x13426 + x13427;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13429 = x12596 * x1857;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13430 = x13428 + x13429;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13431 = x12603 * x1856;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13432 = x13430 + x13431;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13433 = x12610 * x1855;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13434 = x13432 + x13433;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13435 = x12617 * x1854;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13436 = x13434 + x13435;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13437 = x12624 * x1853;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13438 = x13436 + x13437;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13439 = x12631 * x1852;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13440 = x13438 + x13439;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13441 = x12638 * x1851;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13442 = x13440 + x13441;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13443 = x12645 * x1850;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13444 = x13442 + x13443;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13445 = x12484 * x1849;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13446 = x12491 * x1848;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13447 = x13445 + x13446;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13448 = x12498 * x1847;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13449 = x13447 + x13448;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13450 = x12505 * x1846;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13451 = x13449 + x13450;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13452 = x12512 * x1845;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13453 = x13451 + x13452;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13454 = x12519 * x1844;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13455 = x13453 + x13454;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13456 = x12526 * x1843;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13457 = x13455 + x13456;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13458 = x12533 * x1842;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13459 = x13457 + x13458;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13460 = x12540 * x1841;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13461 = x13459 + x13460;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13462 = x12547 * x1840;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13463 = x13461 + x13462;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13464 = x12554 * x1839;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13465 = x13463 + x13464;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13466 = x12561 * x1838;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13467 = x13465 + x13466;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13468 = x12568 * x1837;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13469 = x13467 + x13468;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13470 = x12575 * x1836;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13471 = x13469 + x13470;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13472 = x12582 * x1835;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13473 = x13471 + x13472;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13474 = x12589 * x1834;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13475 = x13473 + x13474;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13476 = x12596 * x1833;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13477 = x13475 + x13476;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13478 = x12603 * x1832;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13479 = x13477 + x13478;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13480 = x12610 * x1831;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13481 = x13479 + x13480;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13482 = x12617 * x1830;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13483 = x13481 + x13482;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13484 = x12624 * x1829;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13485 = x13483 + x13484;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13486 = x12631 * x1828;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13487 = x13485 + x13486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13488 = x12638 * x1827;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13489 = x13487 + x13488;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13490 = x12645 * x1826;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13491 = x13489 + x13490;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13492 = x12484 * x1825;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13493 = x12491 * x1824;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13494 = x13492 + x13493;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13495 = x12498 * x1823;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13496 = x13494 + x13495;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13497 = x12505 * x1822;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13498 = x13496 + x13497;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13499 = x12512 * x1821;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13500 = x13498 + x13499;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13501 = x12519 * x1820;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13502 = x13500 + x13501;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13503 = x12526 * x1819;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13504 = x13502 + x13503;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13505 = x12533 * x1818;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13506 = x13504 + x13505;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13507 = x12540 * x1817;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13508 = x13506 + x13507;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13509 = x12547 * x1816;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13510 = x13508 + x13509;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13511 = x12554 * x1815;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13512 = x13510 + x13511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13513 = x12561 * x1814;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13514 = x13512 + x13513;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13515 = x12568 * x1813;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13516 = x13514 + x13515;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13517 = x12575 * x1812;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13518 = x13516 + x13517;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13519 = x12582 * x1811;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13520 = x13518 + x13519;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13521 = x12589 * x1810;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13522 = x13520 + x13521;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13523 = x12596 * x1809;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13524 = x13522 + x13523;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13525 = x12603 * x1808;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13526 = x13524 + x13525;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13527 = x12610 * x1807;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13528 = x13526 + x13527;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13529 = x12617 * x1806;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13530 = x13528 + x13529;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13531 = x12624 * x1805;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13532 = x13530 + x13531;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13533 = x12631 * x1804;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13534 = x13532 + x13533;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13535 = x12638 * x1803;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13536 = x13534 + x13535;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13537 = x12645 * x1802;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13538 = x13536 + x13537;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13539 = x12484 * x1801;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13540 = x12491 * x1800;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13541 = x13539 + x13540;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13542 = x12498 * x1799;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13543 = x13541 + x13542;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13544 = x12505 * x1798;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13545 = x13543 + x13544;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13546 = x12512 * x1797;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13547 = x13545 + x13546;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13548 = x12519 * x1796;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13549 = x13547 + x13548;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13550 = x12526 * x1795;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13551 = x13549 + x13550;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13552 = x12533 * x1794;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13553 = x13551 + x13552;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13554 = x12540 * x1793;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13555 = x13553 + x13554;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13556 = x12547 * x1792;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13557 = x13555 + x13556;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13558 = x12554 * x1791;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13559 = x13557 + x13558;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13560 = x12561 * x1790;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13561 = x13559 + x13560;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13562 = x12568 * x1789;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13563 = x13561 + x13562;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13564 = x12575 * x1788;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13565 = x13563 + x13564;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13566 = x12582 * x1787;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13567 = x13565 + x13566;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13568 = x12589 * x1786;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13569 = x13567 + x13568;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13570 = x12596 * x1785;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13571 = x13569 + x13570;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13572 = x12603 * x1784;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13573 = x13571 + x13572;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13574 = x12610 * x1783;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13575 = x13573 + x13574;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13576 = x12617 * x1782;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13577 = x13575 + x13576;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13578 = x12624 * x1781;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13579 = x13577 + x13578;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13580 = x12631 * x1780;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13581 = x13579 + x13580;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13582 = x12638 * x1779;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13583 = x13581 + x13582;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13584 = x12645 * x1778;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13585 = x13583 + x13584;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13586 = x12484 * x1777;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13587 = x12491 * x1776;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13588 = x13586 + x13587;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13589 = x12498 * x1775;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13590 = x13588 + x13589;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13591 = x12505 * x1774;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13592 = x13590 + x13591;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13593 = x12512 * x1773;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13594 = x13592 + x13593;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13595 = x12519 * x1772;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13596 = x13594 + x13595;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13597 = x12526 * x1771;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13598 = x13596 + x13597;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13599 = x12533 * x1770;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13600 = x13598 + x13599;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13601 = x12540 * x1769;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13602 = x13600 + x13601;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13603 = x12547 * x1768;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13604 = x13602 + x13603;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13605 = x12554 * x1767;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13606 = x13604 + x13605;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13607 = x12561 * x1766;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13608 = x13606 + x13607;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13609 = x12568 * x1765;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13610 = x13608 + x13609;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13611 = x12575 * x1764;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13612 = x13610 + x13611;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13613 = x12582 * x1763;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13614 = x13612 + x13613;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13615 = x12589 * x1762;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13616 = x13614 + x13615;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13617 = x12596 * x1761;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13618 = x13616 + x13617;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13619 = x12603 * x1760;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13620 = x13618 + x13619;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13621 = x12610 * x1759;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13622 = x13620 + x13621;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13623 = x12617 * x1758;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13624 = x13622 + x13623;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13625 = x12624 * x1757;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13626 = x13624 + x13625;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13627 = x12631 * x1756;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13628 = x13626 + x13627;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13629 = x12638 * x1755;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13630 = x13628 + x13629;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13631 = x12645 * x1754;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13632 = x13630 + x13631;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13633 = x12484 * x1753;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13634 = x12491 * x1752;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13635 = x13633 + x13634;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13636 = x12498 * x1751;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13637 = x13635 + x13636;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13638 = x12505 * x1750;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13639 = x13637 + x13638;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13640 = x12512 * x1749;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13641 = x13639 + x13640;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13642 = x12519 * x1748;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13643 = x13641 + x13642;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13644 = x12526 * x1747;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13645 = x13643 + x13644;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13646 = x12533 * x1746;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13647 = x13645 + x13646;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13648 = x12540 * x1745;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13649 = x13647 + x13648;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13650 = x12547 * x1744;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13651 = x13649 + x13650;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13652 = x12554 * x1743;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13653 = x13651 + x13652;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13654 = x12561 * x1742;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13655 = x13653 + x13654;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13656 = x12568 * x1741;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13657 = x13655 + x13656;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13658 = x12575 * x1740;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13659 = x13657 + x13658;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13660 = x12582 * x1739;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13661 = x13659 + x13660;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13662 = x12589 * x1738;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13663 = x13661 + x13662;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13664 = x12596 * x1737;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13665 = x13663 + x13664;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13666 = x12603 * x1736;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13667 = x13665 + x13666;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13668 = x12610 * x1735;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13669 = x13667 + x13668;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13670 = x12617 * x1734;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13671 = x13669 + x13670;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13672 = x12624 * x1733;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13673 = x13671 + x13672;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13674 = x12631 * x1732;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13675 = x13673 + x13674;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13676 = x12638 * x1731;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13677 = x13675 + x13676;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13678 = x12645 * x1730;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13679 = x13677 + x13678;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13680 = x12484 * x1729;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13681 = x12491 * x1728;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13682 = x13680 + x13681;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13683 = x12498 * x1727;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13684 = x13682 + x13683;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13685 = x12505 * x1726;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13686 = x13684 + x13685;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13687 = x12512 * x1725;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13688 = x13686 + x13687;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13689 = x12519 * x1724;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13690 = x13688 + x13689;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13691 = x12526 * x1723;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13692 = x13690 + x13691;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13693 = x12533 * x1722;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13694 = x13692 + x13693;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13695 = x12540 * x1721;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13696 = x13694 + x13695;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13697 = x12547 * x1720;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13698 = x13696 + x13697;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13699 = x12554 * x1719;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13700 = x13698 + x13699;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13701 = x12561 * x1718;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13702 = x13700 + x13701;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13703 = x12568 * x1717;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13704 = x13702 + x13703;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13705 = x12575 * x1716;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13706 = x13704 + x13705;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13707 = x12582 * x1715;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13708 = x13706 + x13707;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13709 = x12589 * x1714;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13710 = x13708 + x13709;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13711 = x12596 * x1713;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13712 = x13710 + x13711;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13713 = x12603 * x1712;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13714 = x13712 + x13713;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13715 = x12610 * x1711;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13716 = x13714 + x13715;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13717 = x12617 * x1710;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13718 = x13716 + x13717;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13719 = x12624 * x1709;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13720 = x13718 + x13719;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13721 = x12631 * x1708;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13722 = x13720 + x13721;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13723 = x12638 * x1707;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13724 = x13722 + x13723;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13725 = x12645 * x1706;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13726 = x13724 + x13725;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13727 = x12484 * x1705;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13728 = x12491 * x1704;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13729 = x13727 + x13728;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13730 = x12498 * x1703;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13731 = x13729 + x13730;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13732 = x12505 * x1702;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13733 = x13731 + x13732;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13734 = x12512 * x1701;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13735 = x13733 + x13734;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13736 = x12519 * x1700;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13737 = x13735 + x13736;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13738 = x12526 * x1699;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13739 = x13737 + x13738;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13740 = x12533 * x1698;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13741 = x13739 + x13740;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13742 = x12540 * x1697;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13743 = x13741 + x13742;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13744 = x12547 * x1696;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13745 = x13743 + x13744;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13746 = x12554 * x1695;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13747 = x13745 + x13746;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13748 = x12561 * x1694;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13749 = x13747 + x13748;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13750 = x12568 * x1693;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13751 = x13749 + x13750;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13752 = x12575 * x1692;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13753 = x13751 + x13752;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13754 = x12582 * x1691;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13755 = x13753 + x13754;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13756 = x12589 * x1690;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13757 = x13755 + x13756;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13758 = x12596 * x1689;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13759 = x13757 + x13758;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13760 = x12603 * x1688;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13761 = x13759 + x13760;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13762 = x12610 * x1687;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13763 = x13761 + x13762;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13764 = x12617 * x1686;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13765 = x13763 + x13764;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13766 = x12624 * x1685;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13767 = x13765 + x13766;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13768 = x12631 * x1684;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13769 = x13767 + x13768;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13770 = x12638 * x1683;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13771 = x13769 + x13770;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:19)
    auto x13772 = x12645 * x1682;
    // loc("zirgen/circuit/recursion/poseidon.cpp":49:13)
    auto x13773 = x13771 + x13772;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13774 = x12306 * x1585;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13775 = x12311 * x1584;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13776 = x13774 + x13775;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13777 = x12306 * x1583;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13778 = x12311 * x1582;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13779 = x13777 + x13778;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13780 = x12306 * x1581;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13781 = x12311 * x1580;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13782 = x13780 + x13781;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13783 = x12306 * x1579;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13784 = x12311 * x1578;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13785 = x13783 + x13784;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13786 = x12306 * x1577;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13787 = x12311 * x1576;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13788 = x13786 + x13787;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13789 = x12306 * x1575;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13790 = x12311 * x1574;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13791 = x13789 + x13790;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13792 = x12306 * x1573;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13793 = x12311 * x1572;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13794 = x13792 + x13793;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13795 = x12306 * x1571;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13796 = x12311 * x1570;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13797 = x13795 + x13796;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13798 = x12306 * x1569;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13799 = x12311 * x1568;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13800 = x13798 + x13799;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13801 = x12306 * x1567;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13802 = x12311 * x1566;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13803 = x13801 + x13802;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13804 = x12306 * x1565;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13805 = x12311 * x1564;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13806 = x13804 + x13805;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13807 = x12306 * x1563;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13808 = x12311 * x1562;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13809 = x13807 + x13808;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13810 = x12306 * x1561;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13811 = x12311 * x1560;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13812 = x13810 + x13811;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13813 = x12306 * x1559;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13814 = x12311 * x1558;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13815 = x13813 + x13814;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13816 = x12306 * x1557;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13817 = x12311 * x1556;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13818 = x13816 + x13817;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13819 = x12306 * x1555;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13820 = x12311 * x1554;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13821 = x13819 + x13820;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13822 = x12306 * x1553;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13823 = x12311 * x1552;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13824 = x13822 + x13823;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13825 = x12306 * x1551;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13826 = x12311 * x1550;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13827 = x13825 + x13826;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13828 = x12306 * x1549;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13829 = x12311 * x1548;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13830 = x13828 + x13829;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13831 = x12306 * x1547;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13832 = x12311 * x1546;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13833 = x13831 + x13832;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13834 = x12306 * x1545;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13835 = x12311 * x1544;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13836 = x13834 + x13835;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13837 = x12306 * x1543;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13838 = x12311 * x1542;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13839 = x13837 + x13838;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13840 = x12306 * x1541;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13841 = x12311 * x1540;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13842 = x13840 + x13841;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13843 = x12306 * x1539;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:19)
    auto x13844 = x12311 * x1538;
    // loc("zirgen/circuit/recursion/poseidon.cpp":79:13)
    auto x13845 = x13843 + x13844;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13846 = x12692 + x13776;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][90 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13846);
      reg = x13846;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13847 = x12739 + x13779;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][91 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13847);
      reg = x13847;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13848 = x12786 + x13782;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][92 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13848);
      reg = x13848;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13849 = x12833 + x13785;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][93 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13849);
      reg = x13849;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13850 = x12880 + x13788;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][94 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13850);
      reg = x13850;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13851 = x12927 + x13791;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][95 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13851);
      reg = x13851;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13852 = x12974 + x13794;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][96 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13852);
      reg = x13852;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13853 = x13021 + x13797;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][97 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13853);
      reg = x13853;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13854 = x13068 + x13800;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][98 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13854);
      reg = x13854;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13855 = x13115 + x13803;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][99 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13855);
      reg = x13855;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13856 = x13162 + x13806;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][100 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13856);
      reg = x13856;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13857 = x13209 + x13809;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][101 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13857);
      reg = x13857;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13858 = x13256 + x13812;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][102 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13858);
      reg = x13858;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13859 = x13303 + x13815;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][103 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13859);
      reg = x13859;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13860 = x13350 + x13818;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][104 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13860);
      reg = x13860;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13861 = x13397 + x13821;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][105 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13861);
      reg = x13861;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13862 = x13444 + x13824;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][106 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13862);
      reg = x13862;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13863 = x13491 + x13827;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][107 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13863);
      reg = x13863;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13864 = x13538 + x13830;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][108 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13864);
      reg = x13864;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13865 = x13585 + x13833;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][109 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13865);
      reg = x13865;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13866 = x13632 + x13836;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][110 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13866);
      reg = x13866;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13867 = x13679 + x13839;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][111 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13867);
      reg = x13867;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13868 = x13726 + x13842;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][112 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13868);
      reg = x13868;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:20)
    auto x13869 = x13773 + x13845;
    // loc("zirgen/circuit/recursion/poseidon.cpp":101:5)
    {
      auto& reg = args[2][113 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13869);
      reg = x13869;
    }
    // loc("./zirgen/components/onehot.h":46:19)
    auto x13870 = x12311 * x2351;
    // loc("./zirgen/components/onehot.h":46:13)
    auto x13871 = x12308 + x13870;
    // loc("./zirgen/components/onehot.h":46:19)
    auto x13872 = x12314 * x2350;
    // loc("./zirgen/components/onehot.h":46:13)
    auto x13873 = x13871 + x13872;
    host_args.at(0) = x13873;
    host(ctx, "log", "POSEIDON_FULL: %u", host_args.data(), 1, host_outs.data(), 0);
  }
  // loc("top(recursion::Top)/code(recursion::Code)/select(OneHot)/poseidon_partial(Reg)"("./zirgen/components/mux.h":49:25))
  auto x13874 = args[0][5 * steps + ((cycle - 0) & mask)];
  assert(x13874 != Fp::invalid());
  if (x13874 != 0) {
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13875 = args[2][90 * steps + ((cycle - 1) & mask)];
    assert(x13875 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13876 = x13875 + x1537;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][5 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13876);
      reg = x13876;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x13877 = args[2][5 * steps + ((cycle - 0) & mask)];
    assert(x13877 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x13878 = x13877 * x13877;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x13879 = x13878 * x13878;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][29 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13879);
      reg = x13879;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x13880 = args[2][29 * steps + ((cycle - 0) & mask)];
    assert(x13880 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x13881 = x13880 * x13878;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x13882 = x13881 * x13877;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13883 = args[2][91 * steps + ((cycle - 1) & mask)];
    assert(x13883 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13884 = x13883 * x2256;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13885 = x13884 + x1536;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13886 = args[2][92 * steps + ((cycle - 1) & mask)];
    assert(x13886 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13887 = x13886 * x2255;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13888 = x13885 + x13887;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13889 = args[2][93 * steps + ((cycle - 1) & mask)];
    assert(x13889 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13890 = x13889 * x2254;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13891 = x13888 + x13890;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13892 = args[2][94 * steps + ((cycle - 1) & mask)];
    assert(x13892 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13893 = x13892 * x2253;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13894 = x13891 + x13893;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13895 = args[2][95 * steps + ((cycle - 1) & mask)];
    assert(x13895 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13896 = x13895 * x2252;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13897 = x13894 + x13896;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13898 = args[2][96 * steps + ((cycle - 1) & mask)];
    assert(x13898 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13899 = x13898 * x2251;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13900 = x13897 + x13899;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13901 = args[2][97 * steps + ((cycle - 1) & mask)];
    assert(x13901 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13902 = x13901 * x2250;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13903 = x13900 + x13902;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13904 = args[2][98 * steps + ((cycle - 1) & mask)];
    assert(x13904 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13905 = x13904 * x2249;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13906 = x13903 + x13905;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13907 = args[2][99 * steps + ((cycle - 1) & mask)];
    assert(x13907 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13908 = x13907 * x2248;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13909 = x13906 + x13908;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13910 = args[2][100 * steps + ((cycle - 1) & mask)];
    assert(x13910 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13911 = x13910 * x2247;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13912 = x13909 + x13911;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13913 = args[2][101 * steps + ((cycle - 1) & mask)];
    assert(x13913 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13914 = x13913 * x2246;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13915 = x13912 + x13914;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13916 = args[2][102 * steps + ((cycle - 1) & mask)];
    assert(x13916 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13917 = x13916 * x2245;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13918 = x13915 + x13917;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13919 = args[2][103 * steps + ((cycle - 1) & mask)];
    assert(x13919 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13920 = x13919 * x2244;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13921 = x13918 + x13920;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13922 = args[2][104 * steps + ((cycle - 1) & mask)];
    assert(x13922 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13923 = x13922 * x2243;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13924 = x13921 + x13923;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13925 = args[2][105 * steps + ((cycle - 1) & mask)];
    assert(x13925 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13926 = x13925 * x2242;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13927 = x13924 + x13926;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13928 = args[2][106 * steps + ((cycle - 1) & mask)];
    assert(x13928 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13929 = x13928 * x2241;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13930 = x13927 + x13929;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13931 = args[2][107 * steps + ((cycle - 1) & mask)];
    assert(x13931 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13932 = x13931 * x2240;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13933 = x13930 + x13932;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13934 = args[2][108 * steps + ((cycle - 1) & mask)];
    assert(x13934 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13935 = x13934 * x2239;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13936 = x13933 + x13935;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13937 = args[2][109 * steps + ((cycle - 1) & mask)];
    assert(x13937 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13938 = x13937 * x2238;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13939 = x13936 + x13938;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13940 = args[2][110 * steps + ((cycle - 1) & mask)];
    assert(x13940 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13941 = x13940 * x2237;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13942 = x13939 + x13941;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13943 = args[2][111 * steps + ((cycle - 1) & mask)];
    assert(x13943 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13944 = x13943 * x2236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13945 = x13942 + x13944;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13946 = args[2][112 * steps + ((cycle - 1) & mask)];
    assert(x13946 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13947 = x13946 * x2235;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13948 = x13945 + x13947;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":122:97))
    auto x13949 = args[2][113 * steps + ((cycle - 1) & mask)];
    assert(x13949 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13950 = x13949 * x2234;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13951 = x13948 + x13950;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x13952 = x13882 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x13953 = x13951 + x13952;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][6 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13953);
      reg = x13953;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x13954 = args[2][6 * steps + ((cycle - 0) & mask)];
    assert(x13954 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x13955 = x13954 * x13954;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x13956 = x13955 * x13955;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][30 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x13956);
      reg = x13956;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x13957 = args[2][30 * steps + ((cycle - 0) & mask)];
    assert(x13957 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x13958 = x13957 * x13955;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x13959 = x13958 * x13954;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13960 = x13883 * x1534;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13961 = x13960 + x1535;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13962 = x13886 * x1533;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13963 = x13961 + x13962;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13964 = x13889 * x1532;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13965 = x13963 + x13964;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13966 = x13892 * x1531;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13967 = x13965 + x13966;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13968 = x13895 * x1530;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13969 = x13967 + x13968;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13970 = x13898 * x1529;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13971 = x13969 + x13970;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13972 = x13901 * x1528;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13973 = x13971 + x13972;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13974 = x13904 * x1527;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13975 = x13973 + x13974;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13976 = x13907 * x1526;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13977 = x13975 + x13976;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13978 = x13910 * x1525;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13979 = x13977 + x13978;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13980 = x13913 * x1524;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13981 = x13979 + x13980;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13982 = x13916 * x1523;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13983 = x13981 + x13982;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13984 = x13919 * x1522;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13985 = x13983 + x13984;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13986 = x13922 * x1521;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13987 = x13985 + x13986;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13988 = x13925 * x1520;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13989 = x13987 + x13988;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13990 = x13928 * x1519;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13991 = x13989 + x13990;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13992 = x13931 * x1518;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13993 = x13991 + x13992;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13994 = x13934 * x1517;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13995 = x13993 + x13994;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13996 = x13937 * x1516;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13997 = x13995 + x13996;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x13998 = x13940 * x1515;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x13999 = x13997 + x13998;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14000 = x13943 * x1514;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14001 = x13999 + x14000;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14002 = x13946 * x1513;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14003 = x14001 + x14002;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14004 = x13949 * x1512;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14005 = x14003 + x14004;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14006 = x13882 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14007 = x14005 + x14006;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14008 = x13959 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14009 = x14007 + x14008;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][7 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14009);
      reg = x14009;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x14010 = args[2][7 * steps + ((cycle - 0) & mask)];
    assert(x14010 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x14011 = x14010 * x14010;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x14012 = x14011 * x14011;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][31 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14012);
      reg = x14012;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x14013 = args[2][31 * steps + ((cycle - 0) & mask)];
    assert(x14013 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14014 = x14013 * x14011;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14015 = x14014 * x14010;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14016 = x13883 * x1509;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14017 = x14016 + x1510;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14018 = x13886 * x1508;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14019 = x14017 + x14018;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14020 = x13889 * x1507;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14021 = x14019 + x14020;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14022 = x13892 * x1506;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14023 = x14021 + x14022;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14024 = x13895 * x1505;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14025 = x14023 + x14024;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14026 = x13898 * x1504;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14027 = x14025 + x14026;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14028 = x13901 * x1503;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14029 = x14027 + x14028;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14030 = x13904 * x1502;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14031 = x14029 + x14030;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14032 = x13907 * x1501;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14033 = x14031 + x14032;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14034 = x13910 * x1500;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14035 = x14033 + x14034;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14036 = x13913 * x1499;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14037 = x14035 + x14036;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14038 = x13916 * x1498;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14039 = x14037 + x14038;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14040 = x13919 * x1497;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14041 = x14039 + x14040;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14042 = x13922 * x1496;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14043 = x14041 + x14042;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14044 = x13925 * x1495;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14045 = x14043 + x14044;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14046 = x13928 * x1494;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14047 = x14045 + x14046;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14048 = x13931 * x1493;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14049 = x14047 + x14048;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14050 = x13934 * x1492;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14051 = x14049 + x14050;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14052 = x13937 * x1491;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14053 = x14051 + x14052;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14054 = x13940 * x1490;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14055 = x14053 + x14054;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14056 = x13943 * x1489;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14057 = x14055 + x14056;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14058 = x13946 * x1488;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14059 = x14057 + x14058;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14060 = x13949 * x1487;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14061 = x14059 + x14060;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14062 = x13882 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14063 = x14061 + x14062;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14064 = x13959 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14065 = x14063 + x14064;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14066 = x14015 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14067 = x14065 + x14066;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][8 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14067);
      reg = x14067;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x14068 = args[2][8 * steps + ((cycle - 0) & mask)];
    assert(x14068 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x14069 = x14068 * x14068;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x14070 = x14069 * x14069;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][32 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14070);
      reg = x14070;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x14071 = args[2][32 * steps + ((cycle - 0) & mask)];
    assert(x14071 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14072 = x14071 * x14069;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14073 = x14072 * x14068;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14074 = x13883 * x1484;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14075 = x14074 + x1485;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14076 = x13886 * x1483;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14077 = x14075 + x14076;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14078 = x13889 * x1482;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14079 = x14077 + x14078;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14080 = x13892 * x1481;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14081 = x14079 + x14080;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14082 = x13895 * x1480;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14083 = x14081 + x14082;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14084 = x13898 * x1479;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14085 = x14083 + x14084;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14086 = x13901 * x1478;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14087 = x14085 + x14086;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14088 = x13904 * x1477;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14089 = x14087 + x14088;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14090 = x13907 * x1476;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14091 = x14089 + x14090;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14092 = x13910 * x1475;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14093 = x14091 + x14092;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14094 = x13913 * x1474;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14095 = x14093 + x14094;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14096 = x13916 * x1473;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14097 = x14095 + x14096;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14098 = x13919 * x1472;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14099 = x14097 + x14098;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14100 = x13922 * x1471;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14101 = x14099 + x14100;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14102 = x13925 * x1470;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14103 = x14101 + x14102;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14104 = x13928 * x1469;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14105 = x14103 + x14104;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14106 = x13931 * x1468;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14107 = x14105 + x14106;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14108 = x13934 * x1467;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14109 = x14107 + x14108;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14110 = x13937 * x1466;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14111 = x14109 + x14110;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14112 = x13940 * x1465;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14113 = x14111 + x14112;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14114 = x13943 * x1464;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14115 = x14113 + x14114;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14116 = x13946 * x1463;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14117 = x14115 + x14116;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14118 = x13949 * x1462;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14119 = x14117 + x14118;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14120 = x13882 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14121 = x14119 + x14120;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14122 = x13959 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14123 = x14121 + x14122;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14124 = x14015 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14125 = x14123 + x14124;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14126 = x14073 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14127 = x14125 + x14126;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][9 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14127);
      reg = x14127;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x14128 = args[2][9 * steps + ((cycle - 0) & mask)];
    assert(x14128 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x14129 = x14128 * x14128;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x14130 = x14129 * x14129;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][33 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14130);
      reg = x14130;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x14131 = args[2][33 * steps + ((cycle - 0) & mask)];
    assert(x14131 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14132 = x14131 * x14129;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14133 = x14132 * x14128;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14134 = x13883 * x1459;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14135 = x14134 + x1460;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14136 = x13886 * x1458;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14137 = x14135 + x14136;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14138 = x13889 * x1457;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14139 = x14137 + x14138;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14140 = x13892 * x1456;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14141 = x14139 + x14140;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14142 = x13895 * x1455;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14143 = x14141 + x14142;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14144 = x13898 * x1454;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14145 = x14143 + x14144;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14146 = x13901 * x1453;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14147 = x14145 + x14146;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14148 = x13904 * x1452;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14149 = x14147 + x14148;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14150 = x13907 * x1451;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14151 = x14149 + x14150;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14152 = x13910 * x1450;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14153 = x14151 + x14152;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14154 = x13913 * x1449;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14155 = x14153 + x14154;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14156 = x13916 * x1448;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14157 = x14155 + x14156;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14158 = x13919 * x1447;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14159 = x14157 + x14158;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14160 = x13922 * x1446;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14161 = x14159 + x14160;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14162 = x13925 * x1445;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14163 = x14161 + x14162;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14164 = x13928 * x1444;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14165 = x14163 + x14164;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14166 = x13931 * x1443;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14167 = x14165 + x14166;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14168 = x13934 * x1442;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14169 = x14167 + x14168;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14170 = x13937 * x1441;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14171 = x14169 + x14170;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14172 = x13940 * x1440;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14173 = x14171 + x14172;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14174 = x13943 * x1439;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14175 = x14173 + x14174;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14176 = x13946 * x1438;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14177 = x14175 + x14176;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14178 = x13949 * x1437;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14179 = x14177 + x14178;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14180 = x13882 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14181 = x14179 + x14180;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14182 = x13959 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14183 = x14181 + x14182;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14184 = x14015 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14185 = x14183 + x14184;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14186 = x14073 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14187 = x14185 + x14186;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14188 = x14133 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14189 = x14187 + x14188;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][10 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14189);
      reg = x14189;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x14190 = args[2][10 * steps + ((cycle - 0) & mask)];
    assert(x14190 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x14191 = x14190 * x14190;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x14192 = x14191 * x14191;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][34 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14192);
      reg = x14192;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x14193 = args[2][34 * steps + ((cycle - 0) & mask)];
    assert(x14193 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14194 = x14193 * x14191;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14195 = x14194 * x14190;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14196 = x13883 * x1434;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14197 = x14196 + x1435;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14198 = x13886 * x1433;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14199 = x14197 + x14198;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14200 = x13889 * x1432;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14201 = x14199 + x14200;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14202 = x13892 * x1431;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14203 = x14201 + x14202;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14204 = x13895 * x1430;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14205 = x14203 + x14204;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14206 = x13898 * x1429;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14207 = x14205 + x14206;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14208 = x13901 * x1428;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14209 = x14207 + x14208;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14210 = x13904 * x1427;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14211 = x14209 + x14210;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14212 = x13907 * x1426;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14213 = x14211 + x14212;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14214 = x13910 * x1425;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14215 = x14213 + x14214;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14216 = x13913 * x1424;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14217 = x14215 + x14216;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14218 = x13916 * x1423;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14219 = x14217 + x14218;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14220 = x13919 * x1422;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14221 = x14219 + x14220;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14222 = x13922 * x1421;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14223 = x14221 + x14222;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14224 = x13925 * x1420;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14225 = x14223 + x14224;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14226 = x13928 * x1419;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14227 = x14225 + x14226;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14228 = x13931 * x1418;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14229 = x14227 + x14228;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14230 = x13934 * x1417;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14231 = x14229 + x14230;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14232 = x13937 * x1416;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14233 = x14231 + x14232;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14234 = x13940 * x1415;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14235 = x14233 + x14234;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14236 = x13943 * x1414;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14237 = x14235 + x14236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14238 = x13946 * x1413;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14239 = x14237 + x14238;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14240 = x13949 * x1412;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14241 = x14239 + x14240;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14242 = x13882 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14243 = x14241 + x14242;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14244 = x13959 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14245 = x14243 + x14244;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14246 = x14015 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14247 = x14245 + x14246;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14248 = x14073 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14249 = x14247 + x14248;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14250 = x14133 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14251 = x14249 + x14250;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14252 = x14195 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14253 = x14251 + x14252;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][11 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14253);
      reg = x14253;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x14254 = args[2][11 * steps + ((cycle - 0) & mask)];
    assert(x14254 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x14255 = x14254 * x14254;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x14256 = x14255 * x14255;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][35 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14256);
      reg = x14256;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x14257 = args[2][35 * steps + ((cycle - 0) & mask)];
    assert(x14257 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14258 = x14257 * x14255;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14259 = x14258 * x14254;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14260 = x13883 * x1409;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14261 = x14260 + x1410;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14262 = x13886 * x1408;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14263 = x14261 + x14262;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14264 = x13889 * x1407;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14265 = x14263 + x14264;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14266 = x13892 * x1406;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14267 = x14265 + x14266;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14268 = x13895 * x1405;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14269 = x14267 + x14268;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14270 = x13898 * x1404;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14271 = x14269 + x14270;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14272 = x13901 * x1403;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14273 = x14271 + x14272;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14274 = x13904 * x1402;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14275 = x14273 + x14274;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14276 = x13907 * x1401;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14277 = x14275 + x14276;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14278 = x13910 * x1400;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14279 = x14277 + x14278;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14280 = x13913 * x1399;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14281 = x14279 + x14280;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14282 = x13916 * x1398;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14283 = x14281 + x14282;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14284 = x13919 * x1397;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14285 = x14283 + x14284;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14286 = x13922 * x1396;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14287 = x14285 + x14286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14288 = x13925 * x1395;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14289 = x14287 + x14288;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14290 = x13928 * x1394;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14291 = x14289 + x14290;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14292 = x13931 * x1393;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14293 = x14291 + x14292;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14294 = x13934 * x1392;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14295 = x14293 + x14294;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14296 = x13937 * x1391;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14297 = x14295 + x14296;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14298 = x13940 * x1390;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14299 = x14297 + x14298;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14300 = x13943 * x1389;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14301 = x14299 + x14300;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14302 = x13946 * x1388;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14303 = x14301 + x14302;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14304 = x13949 * x1387;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14305 = x14303 + x14304;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14306 = x13882 * x1386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14307 = x14305 + x14306;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14308 = x13959 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14309 = x14307 + x14308;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14310 = x14015 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14311 = x14309 + x14310;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14312 = x14073 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14313 = x14311 + x14312;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14314 = x14133 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14315 = x14313 + x14314;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14316 = x14195 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14317 = x14315 + x14316;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14318 = x14259 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14319 = x14317 + x14318;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][12 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14319);
      reg = x14319;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x14320 = args[2][12 * steps + ((cycle - 0) & mask)];
    assert(x14320 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x14321 = x14320 * x14320;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x14322 = x14321 * x14321;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][36 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14322);
      reg = x14322;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x14323 = args[2][36 * steps + ((cycle - 0) & mask)];
    assert(x14323 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14324 = x14323 * x14321;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14325 = x14324 * x14320;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14326 = x13883 * x1384;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14327 = x14326 + x1385;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14328 = x13886 * x1383;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14329 = x14327 + x14328;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14330 = x13889 * x1382;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14331 = x14329 + x14330;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14332 = x13892 * x1381;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14333 = x14331 + x14332;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14334 = x13895 * x1380;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14335 = x14333 + x14334;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14336 = x13898 * x1379;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14337 = x14335 + x14336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14338 = x13901 * x1378;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14339 = x14337 + x14338;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14340 = x13904 * x1377;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14341 = x14339 + x14340;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14342 = x13907 * x1376;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14343 = x14341 + x14342;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14344 = x13910 * x1375;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14345 = x14343 + x14344;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14346 = x13913 * x1374;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14347 = x14345 + x14346;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14348 = x13916 * x1373;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14349 = x14347 + x14348;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14350 = x13919 * x1372;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14351 = x14349 + x14350;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14352 = x13922 * x1371;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14353 = x14351 + x14352;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14354 = x13925 * x1370;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14355 = x14353 + x14354;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14356 = x13928 * x1369;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14357 = x14355 + x14356;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14358 = x13931 * x1368;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14359 = x14357 + x14358;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14360 = x13934 * x1367;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14361 = x14359 + x14360;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14362 = x13937 * x1366;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14363 = x14361 + x14362;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14364 = x13940 * x1365;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14365 = x14363 + x14364;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14366 = x13943 * x1364;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14367 = x14365 + x14366;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14368 = x13946 * x1363;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14369 = x14367 + x14368;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14370 = x13949 * x1362;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14371 = x14369 + x14370;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14372 = x13882 * x1361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14373 = x14371 + x14372;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14374 = x13959 * x1386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14375 = x14373 + x14374;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14376 = x14015 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14377 = x14375 + x14376;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14378 = x14073 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14379 = x14377 + x14378;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14380 = x14133 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14381 = x14379 + x14380;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14382 = x14195 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14383 = x14381 + x14382;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14384 = x14259 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14385 = x14383 + x14384;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14386 = x14325 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14387 = x14385 + x14386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][13 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14387);
      reg = x14387;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x14388 = args[2][13 * steps + ((cycle - 0) & mask)];
    assert(x14388 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x14389 = x14388 * x14388;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x14390 = x14389 * x14389;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][37 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14390);
      reg = x14390;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x14391 = args[2][37 * steps + ((cycle - 0) & mask)];
    assert(x14391 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14392 = x14391 * x14389;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14393 = x14392 * x14388;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14394 = x13883 * x1359;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14395 = x14394 + x1360;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14396 = x13886 * x1358;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14397 = x14395 + x14396;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14398 = x13889 * x1357;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14399 = x14397 + x14398;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14400 = x13892 * x1356;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14401 = x14399 + x14400;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14402 = x13895 * x1355;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14403 = x14401 + x14402;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14404 = x13898 * x1354;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14405 = x14403 + x14404;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14406 = x13901 * x1353;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14407 = x14405 + x14406;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14408 = x13904 * x1352;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14409 = x14407 + x14408;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14410 = x13907 * x1351;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14411 = x14409 + x14410;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14412 = x13910 * x1350;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14413 = x14411 + x14412;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14414 = x13913 * x1349;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14415 = x14413 + x14414;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14416 = x13916 * x1348;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14417 = x14415 + x14416;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14418 = x13919 * x1347;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14419 = x14417 + x14418;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14420 = x13922 * x1346;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14421 = x14419 + x14420;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14422 = x13925 * x1345;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14423 = x14421 + x14422;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14424 = x13928 * x1344;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14425 = x14423 + x14424;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14426 = x13931 * x1343;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14427 = x14425 + x14426;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14428 = x13934 * x1342;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14429 = x14427 + x14428;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14430 = x13937 * x1341;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14431 = x14429 + x14430;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14432 = x13940 * x1340;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14433 = x14431 + x14432;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14434 = x13943 * x1339;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14435 = x14433 + x14434;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14436 = x13946 * x1338;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14437 = x14435 + x14436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14438 = x13949 * x1337;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14439 = x14437 + x14438;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14440 = x13882 * x1336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14441 = x14439 + x14440;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14442 = x13959 * x1361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14443 = x14441 + x14442;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14444 = x14015 * x1386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14445 = x14443 + x14444;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14446 = x14073 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14447 = x14445 + x14446;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14448 = x14133 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14449 = x14447 + x14448;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14450 = x14195 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14451 = x14449 + x14450;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14452 = x14259 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14453 = x14451 + x14452;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14454 = x14325 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14455 = x14453 + x14454;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14456 = x14393 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14457 = x14455 + x14456;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][14 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14457);
      reg = x14457;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x14458 = args[2][14 * steps + ((cycle - 0) & mask)];
    assert(x14458 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x14459 = x14458 * x14458;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x14460 = x14459 * x14459;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][38 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14460);
      reg = x14460;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x14461 = args[2][38 * steps + ((cycle - 0) & mask)];
    assert(x14461 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14462 = x14461 * x14459;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14463 = x14462 * x14458;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14464 = x13883 * x1334;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14465 = x14464 + x1335;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14466 = x13886 * x1333;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14467 = x14465 + x14466;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14468 = x13889 * x1332;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14469 = x14467 + x14468;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14470 = x13892 * x1331;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14471 = x14469 + x14470;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14472 = x13895 * x1330;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14473 = x14471 + x14472;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14474 = x13898 * x1329;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14475 = x14473 + x14474;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14476 = x13901 * x1328;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14477 = x14475 + x14476;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14478 = x13904 * x1327;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14479 = x14477 + x14478;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14480 = x13907 * x1326;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14481 = x14479 + x14480;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14482 = x13910 * x1325;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14483 = x14481 + x14482;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14484 = x13913 * x1324;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14485 = x14483 + x14484;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14486 = x13916 * x1323;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14487 = x14485 + x14486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14488 = x13919 * x1322;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14489 = x14487 + x14488;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14490 = x13922 * x1321;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14491 = x14489 + x14490;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14492 = x13925 * x1320;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14493 = x14491 + x14492;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14494 = x13928 * x1319;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14495 = x14493 + x14494;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14496 = x13931 * x1318;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14497 = x14495 + x14496;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14498 = x13934 * x1317;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14499 = x14497 + x14498;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14500 = x13937 * x1316;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14501 = x14499 + x14500;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14502 = x13940 * x1315;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14503 = x14501 + x14502;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14504 = x13943 * x1314;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14505 = x14503 + x14504;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14506 = x13946 * x1313;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14507 = x14505 + x14506;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14508 = x13949 * x1312;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14509 = x14507 + x14508;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14510 = x13882 * x1311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14511 = x14509 + x14510;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14512 = x13959 * x1336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14513 = x14511 + x14512;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14514 = x14015 * x1361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14515 = x14513 + x14514;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14516 = x14073 * x1386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14517 = x14515 + x14516;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14518 = x14133 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14519 = x14517 + x14518;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14520 = x14195 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14521 = x14519 + x14520;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14522 = x14259 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14523 = x14521 + x14522;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14524 = x14325 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14525 = x14523 + x14524;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14526 = x14393 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14527 = x14525 + x14526;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14528 = x14463 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14529 = x14527 + x14528;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][15 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14529);
      reg = x14529;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x14530 = args[2][15 * steps + ((cycle - 0) & mask)];
    assert(x14530 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x14531 = x14530 * x14530;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x14532 = x14531 * x14531;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][39 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14532);
      reg = x14532;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x14533 = args[2][39 * steps + ((cycle - 0) & mask)];
    assert(x14533 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14534 = x14533 * x14531;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14535 = x14534 * x14530;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14536 = x13883 * x1309;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14537 = x14536 + x1310;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14538 = x13886 * x1308;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14539 = x14537 + x14538;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14540 = x13889 * x1307;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14541 = x14539 + x14540;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14542 = x13892 * x1306;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14543 = x14541 + x14542;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14544 = x13895 * x1305;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14545 = x14543 + x14544;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14546 = x13898 * x1304;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14547 = x14545 + x14546;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14548 = x13901 * x1303;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14549 = x14547 + x14548;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14550 = x13904 * x1302;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14551 = x14549 + x14550;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14552 = x13907 * x1301;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14553 = x14551 + x14552;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14554 = x13910 * x1300;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14555 = x14553 + x14554;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14556 = x13913 * x1299;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14557 = x14555 + x14556;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14558 = x13916 * x1298;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14559 = x14557 + x14558;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14560 = x13919 * x1297;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14561 = x14559 + x14560;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14562 = x13922 * x1296;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14563 = x14561 + x14562;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14564 = x13925 * x1295;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14565 = x14563 + x14564;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14566 = x13928 * x1294;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14567 = x14565 + x14566;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14568 = x13931 * x1293;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14569 = x14567 + x14568;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14570 = x13934 * x1292;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14571 = x14569 + x14570;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14572 = x13937 * x1291;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14573 = x14571 + x14572;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14574 = x13940 * x1290;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14575 = x14573 + x14574;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14576 = x13943 * x1289;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14577 = x14575 + x14576;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14578 = x13946 * x1288;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14579 = x14577 + x14578;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14580 = x13949 * x1287;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14581 = x14579 + x14580;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14582 = x13882 * x1286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14583 = x14581 + x14582;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14584 = x13959 * x1311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14585 = x14583 + x14584;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14586 = x14015 * x1336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14587 = x14585 + x14586;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14588 = x14073 * x1361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14589 = x14587 + x14588;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14590 = x14133 * x1386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14591 = x14589 + x14590;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14592 = x14195 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14593 = x14591 + x14592;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14594 = x14259 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14595 = x14593 + x14594;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14596 = x14325 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14597 = x14595 + x14596;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14598 = x14393 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14599 = x14597 + x14598;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14600 = x14463 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14601 = x14599 + x14600;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14602 = x14535 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14603 = x14601 + x14602;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][16 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14603);
      reg = x14603;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x14604 = args[2][16 * steps + ((cycle - 0) & mask)];
    assert(x14604 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x14605 = x14604 * x14604;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x14606 = x14605 * x14605;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][40 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14606);
      reg = x14606;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x14607 = args[2][40 * steps + ((cycle - 0) & mask)];
    assert(x14607 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14608 = x14607 * x14605;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14609 = x14608 * x14604;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14610 = x13883 * x1284;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14611 = x14610 + x1285;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14612 = x13886 * x1283;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14613 = x14611 + x14612;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14614 = x13889 * x1282;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14615 = x14613 + x14614;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14616 = x13892 * x1281;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14617 = x14615 + x14616;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14618 = x13895 * x1280;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14619 = x14617 + x14618;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14620 = x13898 * x1279;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14621 = x14619 + x14620;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14622 = x13901 * x1278;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14623 = x14621 + x14622;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14624 = x13904 * x1277;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14625 = x14623 + x14624;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14626 = x13907 * x1276;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14627 = x14625 + x14626;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14628 = x13910 * x1275;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14629 = x14627 + x14628;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14630 = x13913 * x1274;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14631 = x14629 + x14630;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14632 = x13916 * x1273;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14633 = x14631 + x14632;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14634 = x13919 * x1272;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14635 = x14633 + x14634;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14636 = x13922 * x1271;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14637 = x14635 + x14636;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14638 = x13925 * x1270;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14639 = x14637 + x14638;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14640 = x13928 * x1269;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14641 = x14639 + x14640;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14642 = x13931 * x1268;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14643 = x14641 + x14642;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14644 = x13934 * x1267;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14645 = x14643 + x14644;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14646 = x13937 * x1266;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14647 = x14645 + x14646;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14648 = x13940 * x1265;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14649 = x14647 + x14648;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14650 = x13943 * x1264;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14651 = x14649 + x14650;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14652 = x13946 * x1263;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14653 = x14651 + x14652;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14654 = x13949 * x1262;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14655 = x14653 + x14654;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14656 = x13882 * x1261;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14657 = x14655 + x14656;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14658 = x13959 * x1286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14659 = x14657 + x14658;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14660 = x14015 * x1311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14661 = x14659 + x14660;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14662 = x14073 * x1336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14663 = x14661 + x14662;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14664 = x14133 * x1361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14665 = x14663 + x14664;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14666 = x14195 * x1386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14667 = x14665 + x14666;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14668 = x14259 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14669 = x14667 + x14668;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14670 = x14325 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14671 = x14669 + x14670;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14672 = x14393 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14673 = x14671 + x14672;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14674 = x14463 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14675 = x14673 + x14674;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14676 = x14535 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14677 = x14675 + x14676;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14678 = x14609 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14679 = x14677 + x14678;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][17 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14679);
      reg = x14679;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x14680 = args[2][17 * steps + ((cycle - 0) & mask)];
    assert(x14680 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x14681 = x14680 * x14680;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x14682 = x14681 * x14681;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][41 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14682);
      reg = x14682;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x14683 = args[2][41 * steps + ((cycle - 0) & mask)];
    assert(x14683 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14684 = x14683 * x14681;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14685 = x14684 * x14680;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14686 = x13883 * x1259;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14687 = x14686 + x1260;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14688 = x13886 * x1258;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14689 = x14687 + x14688;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14690 = x13889 * x1257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14691 = x14689 + x14690;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14692 = x13892 * x1256;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14693 = x14691 + x14692;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14694 = x13895 * x1255;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14695 = x14693 + x14694;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14696 = x13898 * x1254;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14697 = x14695 + x14696;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14698 = x13901 * x1253;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14699 = x14697 + x14698;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14700 = x13904 * x1252;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14701 = x14699 + x14700;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14702 = x13907 * x1251;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14703 = x14701 + x14702;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14704 = x13910 * x1250;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14705 = x14703 + x14704;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14706 = x13913 * x1249;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14707 = x14705 + x14706;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14708 = x13916 * x1248;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14709 = x14707 + x14708;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14710 = x13919 * x1247;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14711 = x14709 + x14710;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14712 = x13922 * x1246;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14713 = x14711 + x14712;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14714 = x13925 * x1245;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14715 = x14713 + x14714;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14716 = x13928 * x1244;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14717 = x14715 + x14716;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14718 = x13931 * x1243;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14719 = x14717 + x14718;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14720 = x13934 * x1242;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14721 = x14719 + x14720;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14722 = x13937 * x1241;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14723 = x14721 + x14722;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14724 = x13940 * x1240;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14725 = x14723 + x14724;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14726 = x13943 * x1239;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14727 = x14725 + x14726;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14728 = x13946 * x1238;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14729 = x14727 + x14728;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14730 = x13949 * x1237;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14731 = x14729 + x14730;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14732 = x13882 * x1236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14733 = x14731 + x14732;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14734 = x13959 * x1261;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14735 = x14733 + x14734;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14736 = x14015 * x1286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14737 = x14735 + x14736;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14738 = x14073 * x1311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14739 = x14737 + x14738;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14740 = x14133 * x1336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14741 = x14739 + x14740;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14742 = x14195 * x1361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14743 = x14741 + x14742;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14744 = x14259 * x1386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14745 = x14743 + x14744;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14746 = x14325 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14747 = x14745 + x14746;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14748 = x14393 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14749 = x14747 + x14748;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14750 = x14463 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14751 = x14749 + x14750;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14752 = x14535 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14753 = x14751 + x14752;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14754 = x14609 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14755 = x14753 + x14754;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14756 = x14685 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14757 = x14755 + x14756;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][18 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14757);
      reg = x14757;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x14758 = args[2][18 * steps + ((cycle - 0) & mask)];
    assert(x14758 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x14759 = x14758 * x14758;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x14760 = x14759 * x14759;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][42 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14760);
      reg = x14760;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x14761 = args[2][42 * steps + ((cycle - 0) & mask)];
    assert(x14761 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14762 = x14761 * x14759;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14763 = x14762 * x14758;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14764 = x13883 * x1234;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14765 = x14764 + x1235;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14766 = x13886 * x1233;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14767 = x14765 + x14766;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14768 = x13889 * x1232;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14769 = x14767 + x14768;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14770 = x13892 * x1231;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14771 = x14769 + x14770;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14772 = x13895 * x1230;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14773 = x14771 + x14772;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14774 = x13898 * x1229;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14775 = x14773 + x14774;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14776 = x13901 * x1228;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14777 = x14775 + x14776;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14778 = x13904 * x1227;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14779 = x14777 + x14778;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14780 = x13907 * x1226;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14781 = x14779 + x14780;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14782 = x13910 * x1225;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14783 = x14781 + x14782;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14784 = x13913 * x1224;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14785 = x14783 + x14784;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14786 = x13916 * x1223;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14787 = x14785 + x14786;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14788 = x13919 * x1222;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14789 = x14787 + x14788;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14790 = x13922 * x1221;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14791 = x14789 + x14790;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14792 = x13925 * x1220;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14793 = x14791 + x14792;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14794 = x13928 * x1219;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14795 = x14793 + x14794;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14796 = x13931 * x1218;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14797 = x14795 + x14796;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14798 = x13934 * x1217;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14799 = x14797 + x14798;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14800 = x13937 * x1216;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14801 = x14799 + x14800;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14802 = x13940 * x1215;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14803 = x14801 + x14802;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14804 = x13943 * x1214;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14805 = x14803 + x14804;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14806 = x13946 * x1213;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14807 = x14805 + x14806;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14808 = x13949 * x1212;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14809 = x14807 + x14808;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14810 = x13882 * x1211;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14811 = x14809 + x14810;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14812 = x13959 * x1236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14813 = x14811 + x14812;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14814 = x14015 * x1261;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14815 = x14813 + x14814;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14816 = x14073 * x1286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14817 = x14815 + x14816;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14818 = x14133 * x1311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14819 = x14817 + x14818;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14820 = x14195 * x1336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14821 = x14819 + x14820;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14822 = x14259 * x1361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14823 = x14821 + x14822;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14824 = x14325 * x1386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14825 = x14823 + x14824;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14826 = x14393 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14827 = x14825 + x14826;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14828 = x14463 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14829 = x14827 + x14828;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14830 = x14535 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14831 = x14829 + x14830;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14832 = x14609 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14833 = x14831 + x14832;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14834 = x14685 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14835 = x14833 + x14834;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14836 = x14763 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14837 = x14835 + x14836;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][19 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14837);
      reg = x14837;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x14838 = args[2][19 * steps + ((cycle - 0) & mask)];
    assert(x14838 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x14839 = x14838 * x14838;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x14840 = x14839 * x14839;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][43 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14840);
      reg = x14840;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x14841 = args[2][43 * steps + ((cycle - 0) & mask)];
    assert(x14841 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14842 = x14841 * x14839;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14843 = x14842 * x14838;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14844 = x13883 * x1209;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14845 = x14844 + x1210;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14846 = x13886 * x1208;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14847 = x14845 + x14846;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14848 = x13889 * x1207;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14849 = x14847 + x14848;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14850 = x13892 * x1206;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14851 = x14849 + x14850;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14852 = x13895 * x1205;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14853 = x14851 + x14852;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14854 = x13898 * x1204;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14855 = x14853 + x14854;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14856 = x13901 * x1203;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14857 = x14855 + x14856;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14858 = x13904 * x1202;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14859 = x14857 + x14858;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14860 = x13907 * x1201;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14861 = x14859 + x14860;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14862 = x13910 * x1200;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14863 = x14861 + x14862;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14864 = x13913 * x1199;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14865 = x14863 + x14864;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14866 = x13916 * x1198;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14867 = x14865 + x14866;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14868 = x13919 * x1197;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14869 = x14867 + x14868;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14870 = x13922 * x1196;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14871 = x14869 + x14870;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14872 = x13925 * x1195;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14873 = x14871 + x14872;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14874 = x13928 * x1194;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14875 = x14873 + x14874;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14876 = x13931 * x1193;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14877 = x14875 + x14876;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14878 = x13934 * x1192;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14879 = x14877 + x14878;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14880 = x13937 * x1191;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14881 = x14879 + x14880;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14882 = x13940 * x1190;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14883 = x14881 + x14882;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14884 = x13943 * x1189;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14885 = x14883 + x14884;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14886 = x13946 * x1188;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14887 = x14885 + x14886;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14888 = x13949 * x1187;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14889 = x14887 + x14888;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14890 = x13882 * x1186;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14891 = x14889 + x14890;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14892 = x13959 * x1211;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14893 = x14891 + x14892;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14894 = x14015 * x1236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14895 = x14893 + x14894;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14896 = x14073 * x1261;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14897 = x14895 + x14896;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14898 = x14133 * x1286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14899 = x14897 + x14898;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14900 = x14195 * x1311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14901 = x14899 + x14900;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14902 = x14259 * x1336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14903 = x14901 + x14902;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14904 = x14325 * x1361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14905 = x14903 + x14904;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14906 = x14393 * x1386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14907 = x14905 + x14906;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14908 = x14463 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14909 = x14907 + x14908;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14910 = x14535 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14911 = x14909 + x14910;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14912 = x14609 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14913 = x14911 + x14912;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14914 = x14685 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14915 = x14913 + x14914;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14916 = x14763 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14917 = x14915 + x14916;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14918 = x14843 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14919 = x14917 + x14918;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][20 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14919);
      reg = x14919;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x14920 = args[2][20 * steps + ((cycle - 0) & mask)];
    assert(x14920 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x14921 = x14920 * x14920;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x14922 = x14921 * x14921;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][44 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x14922);
      reg = x14922;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x14923 = args[2][44 * steps + ((cycle - 0) & mask)];
    assert(x14923 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14924 = x14923 * x14921;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x14925 = x14924 * x14920;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14926 = x13883 * x1184;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14927 = x14926 + x1185;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14928 = x13886 * x1183;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14929 = x14927 + x14928;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14930 = x13889 * x1182;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14931 = x14929 + x14930;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14932 = x13892 * x1181;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14933 = x14931 + x14932;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14934 = x13895 * x1180;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14935 = x14933 + x14934;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14936 = x13898 * x1179;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14937 = x14935 + x14936;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14938 = x13901 * x1178;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14939 = x14937 + x14938;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14940 = x13904 * x1177;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14941 = x14939 + x14940;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14942 = x13907 * x1176;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14943 = x14941 + x14942;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14944 = x13910 * x1175;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14945 = x14943 + x14944;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14946 = x13913 * x1174;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14947 = x14945 + x14946;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14948 = x13916 * x1173;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14949 = x14947 + x14948;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14950 = x13919 * x1172;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14951 = x14949 + x14950;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14952 = x13922 * x1171;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14953 = x14951 + x14952;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14954 = x13925 * x1170;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14955 = x14953 + x14954;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14956 = x13928 * x1169;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14957 = x14955 + x14956;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14958 = x13931 * x1168;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14959 = x14957 + x14958;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14960 = x13934 * x1167;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14961 = x14959 + x14960;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14962 = x13937 * x1166;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14963 = x14961 + x14962;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14964 = x13940 * x1165;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14965 = x14963 + x14964;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14966 = x13943 * x1164;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14967 = x14965 + x14966;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14968 = x13946 * x1163;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14969 = x14967 + x14968;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x14970 = x13949 * x1162;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x14971 = x14969 + x14970;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14972 = x13882 * x1161;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14973 = x14971 + x14972;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14974 = x13959 * x1186;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14975 = x14973 + x14974;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14976 = x14015 * x1211;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14977 = x14975 + x14976;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14978 = x14073 * x1236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14979 = x14977 + x14978;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14980 = x14133 * x1261;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14981 = x14979 + x14980;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14982 = x14195 * x1286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14983 = x14981 + x14982;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14984 = x14259 * x1311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14985 = x14983 + x14984;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14986 = x14325 * x1336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14987 = x14985 + x14986;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14988 = x14393 * x1361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14989 = x14987 + x14988;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14990 = x14463 * x1386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14991 = x14989 + x14990;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14992 = x14535 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14993 = x14991 + x14992;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14994 = x14609 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14995 = x14993 + x14994;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14996 = x14685 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14997 = x14995 + x14996;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x14998 = x14763 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x14999 = x14997 + x14998;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15000 = x14843 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15001 = x14999 + x15000;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15002 = x14925 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15003 = x15001 + x15002;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][21 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15003);
      reg = x15003;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x15004 = args[2][21 * steps + ((cycle - 0) & mask)];
    assert(x15004 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x15005 = x15004 * x15004;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x15006 = x15005 * x15005;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][45 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15006);
      reg = x15006;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x15007 = args[2][45 * steps + ((cycle - 0) & mask)];
    assert(x15007 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x15008 = x15007 * x15005;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x15009 = x15008 * x15004;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15010 = x13883 * x1159;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15011 = x15010 + x1160;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15012 = x13886 * x1158;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15013 = x15011 + x15012;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15014 = x13889 * x1157;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15015 = x15013 + x15014;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15016 = x13892 * x1156;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15017 = x15015 + x15016;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15018 = x13895 * x1155;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15019 = x15017 + x15018;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15020 = x13898 * x1154;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15021 = x15019 + x15020;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15022 = x13901 * x1153;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15023 = x15021 + x15022;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15024 = x13904 * x1152;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15025 = x15023 + x15024;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15026 = x13907 * x1151;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15027 = x15025 + x15026;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15028 = x13910 * x1150;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15029 = x15027 + x15028;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15030 = x13913 * x1149;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15031 = x15029 + x15030;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15032 = x13916 * x1148;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15033 = x15031 + x15032;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15034 = x13919 * x1147;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15035 = x15033 + x15034;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15036 = x13922 * x1146;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15037 = x15035 + x15036;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15038 = x13925 * x1145;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15039 = x15037 + x15038;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15040 = x13928 * x1144;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15041 = x15039 + x15040;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15042 = x13931 * x1143;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15043 = x15041 + x15042;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15044 = x13934 * x1142;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15045 = x15043 + x15044;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15046 = x13937 * x1141;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15047 = x15045 + x15046;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15048 = x13940 * x1140;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15049 = x15047 + x15048;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15050 = x13943 * x1139;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15051 = x15049 + x15050;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15052 = x13946 * x1138;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15053 = x15051 + x15052;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15054 = x13949 * x1137;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15055 = x15053 + x15054;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15056 = x13882 * x1136;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15057 = x15055 + x15056;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15058 = x13959 * x1161;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15059 = x15057 + x15058;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15060 = x14015 * x1186;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15061 = x15059 + x15060;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15062 = x14073 * x1211;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15063 = x15061 + x15062;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15064 = x14133 * x1236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15065 = x15063 + x15064;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15066 = x14195 * x1261;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15067 = x15065 + x15066;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15068 = x14259 * x1286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15069 = x15067 + x15068;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15070 = x14325 * x1311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15071 = x15069 + x15070;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15072 = x14393 * x1336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15073 = x15071 + x15072;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15074 = x14463 * x1361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15075 = x15073 + x15074;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15076 = x14535 * x1386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15077 = x15075 + x15076;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15078 = x14609 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15079 = x15077 + x15078;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15080 = x14685 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15081 = x15079 + x15080;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15082 = x14763 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15083 = x15081 + x15082;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15084 = x14843 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15085 = x15083 + x15084;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15086 = x14925 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15087 = x15085 + x15086;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15088 = x15009 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15089 = x15087 + x15088;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][22 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15089);
      reg = x15089;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x15090 = args[2][22 * steps + ((cycle - 0) & mask)];
    assert(x15090 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x15091 = x15090 * x15090;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x15092 = x15091 * x15091;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][46 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15092);
      reg = x15092;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x15093 = args[2][46 * steps + ((cycle - 0) & mask)];
    assert(x15093 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x15094 = x15093 * x15091;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x15095 = x15094 * x15090;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15096 = x13883 * x1134;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15097 = x15096 + x1135;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15098 = x13886 * x1133;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15099 = x15097 + x15098;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15100 = x13889 * x1132;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15101 = x15099 + x15100;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15102 = x13892 * x1131;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15103 = x15101 + x15102;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15104 = x13895 * x1130;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15105 = x15103 + x15104;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15106 = x13898 * x1129;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15107 = x15105 + x15106;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15108 = x13901 * x1128;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15109 = x15107 + x15108;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15110 = x13904 * x1127;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15111 = x15109 + x15110;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15112 = x13907 * x1126;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15113 = x15111 + x15112;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15114 = x13910 * x1125;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15115 = x15113 + x15114;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15116 = x13913 * x1124;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15117 = x15115 + x15116;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15118 = x13916 * x1123;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15119 = x15117 + x15118;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15120 = x13919 * x1122;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15121 = x15119 + x15120;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15122 = x13922 * x1121;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15123 = x15121 + x15122;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15124 = x13925 * x1120;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15125 = x15123 + x15124;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15126 = x13928 * x1119;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15127 = x15125 + x15126;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15128 = x13931 * x1118;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15129 = x15127 + x15128;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15130 = x13934 * x1117;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15131 = x15129 + x15130;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15132 = x13937 * x1116;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15133 = x15131 + x15132;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15134 = x13940 * x1115;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15135 = x15133 + x15134;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15136 = x13943 * x1114;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15137 = x15135 + x15136;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15138 = x13946 * x1113;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15139 = x15137 + x15138;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15140 = x13949 * x1112;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15141 = x15139 + x15140;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15142 = x13882 * x1111;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15143 = x15141 + x15142;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15144 = x13959 * x1136;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15145 = x15143 + x15144;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15146 = x14015 * x1161;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15147 = x15145 + x15146;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15148 = x14073 * x1186;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15149 = x15147 + x15148;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15150 = x14133 * x1211;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15151 = x15149 + x15150;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15152 = x14195 * x1236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15153 = x15151 + x15152;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15154 = x14259 * x1261;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15155 = x15153 + x15154;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15156 = x14325 * x1286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15157 = x15155 + x15156;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15158 = x14393 * x1311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15159 = x15157 + x15158;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15160 = x14463 * x1336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15161 = x15159 + x15160;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15162 = x14535 * x1361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15163 = x15161 + x15162;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15164 = x14609 * x1386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15165 = x15163 + x15164;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15166 = x14685 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15167 = x15165 + x15166;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15168 = x14763 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15169 = x15167 + x15168;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15170 = x14843 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15171 = x15169 + x15170;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15172 = x14925 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15173 = x15171 + x15172;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15174 = x15009 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15175 = x15173 + x15174;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15176 = x15095 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15177 = x15175 + x15176;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][23 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15177);
      reg = x15177;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x15178 = args[2][23 * steps + ((cycle - 0) & mask)];
    assert(x15178 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x15179 = x15178 * x15178;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x15180 = x15179 * x15179;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][47 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15180);
      reg = x15180;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x15181 = args[2][47 * steps + ((cycle - 0) & mask)];
    assert(x15181 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x15182 = x15181 * x15179;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x15183 = x15182 * x15178;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15184 = x13883 * x1109;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15185 = x15184 + x1110;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15186 = x13886 * x1108;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15187 = x15185 + x15186;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15188 = x13889 * x1107;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15189 = x15187 + x15188;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15190 = x13892 * x1106;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15191 = x15189 + x15190;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15192 = x13895 * x1105;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15193 = x15191 + x15192;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15194 = x13898 * x1104;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15195 = x15193 + x15194;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15196 = x13901 * x1103;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15197 = x15195 + x15196;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15198 = x13904 * x1102;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15199 = x15197 + x15198;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15200 = x13907 * x1101;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15201 = x15199 + x15200;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15202 = x13910 * x1100;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15203 = x15201 + x15202;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15204 = x13913 * x1099;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15205 = x15203 + x15204;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15206 = x13916 * x1098;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15207 = x15205 + x15206;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15208 = x13919 * x1097;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15209 = x15207 + x15208;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15210 = x13922 * x1096;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15211 = x15209 + x15210;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15212 = x13925 * x1095;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15213 = x15211 + x15212;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15214 = x13928 * x1094;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15215 = x15213 + x15214;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15216 = x13931 * x1093;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15217 = x15215 + x15216;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15218 = x13934 * x1092;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15219 = x15217 + x15218;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15220 = x13937 * x1091;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15221 = x15219 + x15220;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15222 = x13940 * x1090;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15223 = x15221 + x15222;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15224 = x13943 * x1089;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15225 = x15223 + x15224;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15226 = x13946 * x1088;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15227 = x15225 + x15226;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15228 = x13949 * x1087;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15229 = x15227 + x15228;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15230 = x13882 * x1086;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15231 = x15229 + x15230;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15232 = x13959 * x1111;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15233 = x15231 + x15232;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15234 = x14015 * x1136;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15235 = x15233 + x15234;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15236 = x14073 * x1161;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15237 = x15235 + x15236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15238 = x14133 * x1186;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15239 = x15237 + x15238;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15240 = x14195 * x1211;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15241 = x15239 + x15240;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15242 = x14259 * x1236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15243 = x15241 + x15242;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15244 = x14325 * x1261;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15245 = x15243 + x15244;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15246 = x14393 * x1286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15247 = x15245 + x15246;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15248 = x14463 * x1311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15249 = x15247 + x15248;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15250 = x14535 * x1336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15251 = x15249 + x15250;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15252 = x14609 * x1361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15253 = x15251 + x15252;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15254 = x14685 * x1386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15255 = x15253 + x15254;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15256 = x14763 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15257 = x15255 + x15256;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15258 = x14843 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15259 = x15257 + x15258;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15260 = x14925 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15261 = x15259 + x15260;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15262 = x15009 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15263 = x15261 + x15262;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15264 = x15095 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15265 = x15263 + x15264;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15266 = x15183 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15267 = x15265 + x15266;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][24 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15267);
      reg = x15267;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x15268 = args[2][24 * steps + ((cycle - 0) & mask)];
    assert(x15268 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x15269 = x15268 * x15268;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x15270 = x15269 * x15269;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][48 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15270);
      reg = x15270;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x15271 = args[2][48 * steps + ((cycle - 0) & mask)];
    assert(x15271 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x15272 = x15271 * x15269;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x15273 = x15272 * x15268;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15274 = x13883 * x1084;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15275 = x15274 + x1085;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15276 = x13886 * x1083;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15277 = x15275 + x15276;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15278 = x13889 * x1082;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15279 = x15277 + x15278;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15280 = x13892 * x1081;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15281 = x15279 + x15280;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15282 = x13895 * x1080;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15283 = x15281 + x15282;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15284 = x13898 * x1079;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15285 = x15283 + x15284;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15286 = x13901 * x1078;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15287 = x15285 + x15286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15288 = x13904 * x1077;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15289 = x15287 + x15288;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15290 = x13907 * x1076;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15291 = x15289 + x15290;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15292 = x13910 * x1075;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15293 = x15291 + x15292;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15294 = x13913 * x1074;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15295 = x15293 + x15294;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15296 = x13916 * x1073;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15297 = x15295 + x15296;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15298 = x13919 * x1072;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15299 = x15297 + x15298;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15300 = x13922 * x1071;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15301 = x15299 + x15300;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15302 = x13925 * x1070;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15303 = x15301 + x15302;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15304 = x13928 * x1069;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15305 = x15303 + x15304;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15306 = x13931 * x1068;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15307 = x15305 + x15306;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15308 = x13934 * x1067;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15309 = x15307 + x15308;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15310 = x13937 * x1066;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15311 = x15309 + x15310;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15312 = x13940 * x1065;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15313 = x15311 + x15312;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15314 = x13943 * x1064;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15315 = x15313 + x15314;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15316 = x13946 * x1063;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15317 = x15315 + x15316;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:23)
    auto x15318 = x13949 * x1062;
    // loc("zirgen/circuit/recursion/poseidon.cpp":122:11)
    auto x15319 = x15317 + x15318;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15320 = x13882 * x1061;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15321 = x15319 + x15320;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15322 = x13959 * x1086;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15323 = x15321 + x15322;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15324 = x14015 * x1111;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15325 = x15323 + x15324;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15326 = x14073 * x1136;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15327 = x15325 + x15326;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15328 = x14133 * x1161;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15329 = x15327 + x15328;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15330 = x14195 * x1186;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15331 = x15329 + x15330;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15332 = x14259 * x1211;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15333 = x15331 + x15332;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15334 = x14325 * x1236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15335 = x15333 + x15334;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15336 = x14393 * x1261;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15337 = x15335 + x15336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15338 = x14463 * x1286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15339 = x15337 + x15338;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15340 = x14535 * x1311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15341 = x15339 + x15340;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15342 = x14609 * x1336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15343 = x15341 + x15342;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15344 = x14685 * x1361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15345 = x15343 + x15344;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15346 = x14763 * x1386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15347 = x15345 + x15346;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15348 = x14843 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15349 = x15347 + x15348;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15350 = x14925 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15351 = x15349 + x15350;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15352 = x15009 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15353 = x15351 + x15352;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15354 = x15095 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15355 = x15353 + x15354;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15356 = x15183 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15357 = x15355 + x15356;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:31)
    auto x15358 = x15273 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":125:19)
    auto x15359 = x15357 + x15358;
    // loc("zirgen/circuit/recursion/poseidon.cpp":128:5)
    {
      auto& reg = args[2][25 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15359);
      reg = x15359;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":57:35))
    auto x15360 = args[2][25 * steps + ((cycle - 0) & mask)];
    assert(x15360 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":58:13)
    auto x15361 = x15360 * x15360;
    // loc("zirgen/circuit/recursion/poseidon.cpp":59:13)
    auto x15362 = x15361 * x15361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":60:3)
    {
      auto& reg = args[2][49 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15362);
      reg = x15362;
    }
    // loc("top(recursion::Top)/mux(Mux)/poseidon_partial(recursion::PoseidonPartial)/Reg"("zirgen/circuit/recursion/poseidon.cpp":61:14))
    auto x15363 = args[2][49 * steps + ((cycle - 0) & mask)];
    assert(x15363 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x15364 = x15363 * x15361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":62:13)
    auto x15365 = x15364 * x15360;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15366 = x13883 * x1059;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15367 = x15366 + x1060;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15368 = x13886 * x1058;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15369 = x15367 + x15368;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15370 = x13889 * x1057;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15371 = x15369 + x15370;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15372 = x13892 * x1056;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15373 = x15371 + x15372;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15374 = x13895 * x1055;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15375 = x15373 + x15374;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15376 = x13898 * x1054;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15377 = x15375 + x15376;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15378 = x13901 * x1053;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15379 = x15377 + x15378;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15380 = x13904 * x1052;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15381 = x15379 + x15380;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15382 = x13907 * x1051;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15383 = x15381 + x15382;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15384 = x13910 * x1050;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15385 = x15383 + x15384;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15386 = x13913 * x1049;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15387 = x15385 + x15386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15388 = x13916 * x1048;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15389 = x15387 + x15388;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15390 = x13919 * x1047;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15391 = x15389 + x15390;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15392 = x13922 * x1046;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15393 = x15391 + x15392;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15394 = x13925 * x1045;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15395 = x15393 + x15394;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15396 = x13928 * x1044;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15397 = x15395 + x15396;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15398 = x13931 * x1043;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15399 = x15397 + x15398;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15400 = x13934 * x1042;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15401 = x15399 + x15400;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15402 = x13937 * x1041;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15403 = x15401 + x15402;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15404 = x13940 * x1040;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15405 = x15403 + x15404;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15406 = x13943 * x1039;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15407 = x15405 + x15406;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15408 = x13946 * x1038;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15409 = x15407 + x15408;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15410 = x13949 * x1037;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15411 = x15409 + x15410;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15412 = x13882 * x1036;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15413 = x15411 + x15412;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15414 = x13959 * x1061;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15415 = x15413 + x15414;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15416 = x14015 * x1086;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15417 = x15415 + x15416;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15418 = x14073 * x1111;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15419 = x15417 + x15418;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15420 = x14133 * x1136;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15421 = x15419 + x15420;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15422 = x14195 * x1161;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15423 = x15421 + x15422;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15424 = x14259 * x1186;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15425 = x15423 + x15424;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15426 = x14325 * x1211;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15427 = x15425 + x15426;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15428 = x14393 * x1236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15429 = x15427 + x15428;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15430 = x14463 * x1261;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15431 = x15429 + x15430;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15432 = x14535 * x1286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15433 = x15431 + x15432;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15434 = x14609 * x1311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15435 = x15433 + x15434;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15436 = x14685 * x1336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15437 = x15435 + x15436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15438 = x14763 * x1361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15439 = x15437 + x15438;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15440 = x14843 * x1386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15441 = x15439 + x15440;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15442 = x14925 * x1411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15443 = x15441 + x15442;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15444 = x15009 * x1436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15445 = x15443 + x15444;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15446 = x15095 * x1461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15447 = x15445 + x15446;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15448 = x15183 * x1486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15449 = x15447 + x15448;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15450 = x15273 * x1511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15451 = x15449 + x15450;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15452 = x15365 * x2257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15453 = x15451 + x15452;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x15454 = x15453 + x1035;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][90 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15454);
      reg = x15454;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15455 = x13883 * x1033;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15456 = x15455 + x1034;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15457 = x13886 * x1032;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15458 = x15456 + x15457;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15459 = x13889 * x1031;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15460 = x15458 + x15459;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15461 = x13892 * x1030;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15462 = x15460 + x15461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15463 = x13895 * x1029;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15464 = x15462 + x15463;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15465 = x13898 * x1028;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15466 = x15464 + x15465;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15467 = x13901 * x1027;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15468 = x15466 + x15467;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15469 = x13904 * x1026;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15470 = x15468 + x15469;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15471 = x13907 * x1025;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15472 = x15470 + x15471;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15473 = x13910 * x1024;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15474 = x15472 + x15473;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15475 = x13913 * x1023;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15476 = x15474 + x15475;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15477 = x13916 * x1022;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15478 = x15476 + x15477;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15479 = x13919 * x1021;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15480 = x15478 + x15479;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15481 = x13922 * x1020;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15482 = x15480 + x15481;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15483 = x13925 * x1019;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15484 = x15482 + x15483;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15485 = x13928 * x1018;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15486 = x15484 + x15485;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15487 = x13931 * x1017;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15488 = x15486 + x15487;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15489 = x13934 * x1016;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15490 = x15488 + x15489;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15491 = x13937 * x1015;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15492 = x15490 + x15491;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15493 = x13940 * x1014;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15494 = x15492 + x15493;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15495 = x13943 * x1013;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15496 = x15494 + x15495;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15497 = x13946 * x1012;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15498 = x15496 + x15497;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15499 = x13949 * x1011;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15500 = x15498 + x15499;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15501 = x13882 * x1010;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15502 = x15500 + x15501;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15503 = x13959 * x1009;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15504 = x15502 + x15503;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15505 = x14015 * x1008;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15506 = x15504 + x15505;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15507 = x14073 * x1007;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15508 = x15506 + x15507;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15509 = x14133 * x1006;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15510 = x15508 + x15509;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15511 = x14195 * x1005;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15512 = x15510 + x15511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15513 = x14259 * x1004;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15514 = x15512 + x15513;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15515 = x14325 * x1003;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15516 = x15514 + x15515;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15517 = x14393 * x1002;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15518 = x15516 + x15517;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15519 = x14463 * x1001;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15520 = x15518 + x15519;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15521 = x14535 * x1000;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15522 = x15520 + x15521;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15523 = x14609 * x999;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15524 = x15522 + x15523;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15525 = x14685 * x998;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15526 = x15524 + x15525;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15527 = x14763 * x997;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15528 = x15526 + x15527;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15529 = x14843 * x996;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15530 = x15528 + x15529;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15531 = x14925 * x995;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15532 = x15530 + x15531;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15533 = x15009 * x994;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15534 = x15532 + x15533;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15535 = x15095 * x993;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15536 = x15534 + x15535;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15537 = x15183 * x992;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15538 = x15536 + x15537;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15539 = x15273 * x991;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15540 = x15538 + x15539;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15541 = x15365 * x2233;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15542 = x15540 + x15541;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x15543 = x15542 + x990;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][91 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15543);
      reg = x15543;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15544 = x13883 * x988;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15545 = x15544 + x989;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15546 = x13886 * x987;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15547 = x15545 + x15546;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15548 = x13889 * x986;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15549 = x15547 + x15548;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15550 = x13892 * x985;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15551 = x15549 + x15550;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15552 = x13895 * x984;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15553 = x15551 + x15552;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15554 = x13898 * x983;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15555 = x15553 + x15554;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15556 = x13901 * x982;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15557 = x15555 + x15556;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15558 = x13904 * x981;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15559 = x15557 + x15558;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15560 = x13907 * x980;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15561 = x15559 + x15560;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15562 = x13910 * x979;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15563 = x15561 + x15562;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15564 = x13913 * x978;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15565 = x15563 + x15564;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15566 = x13916 * x977;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15567 = x15565 + x15566;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15568 = x13919 * x976;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15569 = x15567 + x15568;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15570 = x13922 * x975;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15571 = x15569 + x15570;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15572 = x13925 * x974;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15573 = x15571 + x15572;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15574 = x13928 * x973;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15575 = x15573 + x15574;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15576 = x13931 * x972;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15577 = x15575 + x15576;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15578 = x13934 * x971;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15579 = x15577 + x15578;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15580 = x13937 * x970;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15581 = x15579 + x15580;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15582 = x13940 * x969;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15583 = x15581 + x15582;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15584 = x13943 * x968;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15585 = x15583 + x15584;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15586 = x13946 * x967;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15587 = x15585 + x15586;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15588 = x13949 * x966;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15589 = x15587 + x15588;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15590 = x13882 * x965;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15591 = x15589 + x15590;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15592 = x13959 * x964;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15593 = x15591 + x15592;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15594 = x14015 * x963;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15595 = x15593 + x15594;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15596 = x14073 * x962;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15597 = x15595 + x15596;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15598 = x14133 * x961;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15599 = x15597 + x15598;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15600 = x14195 * x960;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15601 = x15599 + x15600;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15602 = x14259 * x959;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15603 = x15601 + x15602;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15604 = x14325 * x958;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15605 = x15603 + x15604;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15606 = x14393 * x957;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15607 = x15605 + x15606;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15608 = x14463 * x956;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15609 = x15607 + x15608;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15610 = x14535 * x955;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15611 = x15609 + x15610;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15612 = x14609 * x954;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15613 = x15611 + x15612;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15614 = x14685 * x953;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15615 = x15613 + x15614;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15616 = x14763 * x952;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15617 = x15615 + x15616;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15618 = x14843 * x951;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15619 = x15617 + x15618;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15620 = x14925 * x950;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15621 = x15619 + x15620;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15622 = x15009 * x949;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15623 = x15621 + x15622;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15624 = x15095 * x948;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15625 = x15623 + x15624;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15626 = x15183 * x947;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15627 = x15625 + x15626;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15628 = x15273 * x946;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15629 = x15627 + x15628;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15630 = x15365 * x2209;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15631 = x15629 + x15630;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x15632 = x15631 + x945;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][92 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15632);
      reg = x15632;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15633 = x13883 * x943;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15634 = x15633 + x944;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15635 = x13886 * x942;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15636 = x15634 + x15635;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15637 = x13889 * x941;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15638 = x15636 + x15637;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15639 = x13892 * x940;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15640 = x15638 + x15639;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15641 = x13895 * x939;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15642 = x15640 + x15641;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15643 = x13898 * x938;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15644 = x15642 + x15643;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15645 = x13901 * x937;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15646 = x15644 + x15645;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15647 = x13904 * x936;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15648 = x15646 + x15647;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15649 = x13907 * x935;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15650 = x15648 + x15649;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15651 = x13910 * x934;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15652 = x15650 + x15651;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15653 = x13913 * x933;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15654 = x15652 + x15653;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15655 = x13916 * x932;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15656 = x15654 + x15655;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15657 = x13919 * x931;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15658 = x15656 + x15657;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15659 = x13922 * x930;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15660 = x15658 + x15659;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15661 = x13925 * x929;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15662 = x15660 + x15661;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15663 = x13928 * x928;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15664 = x15662 + x15663;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15665 = x13931 * x927;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15666 = x15664 + x15665;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15667 = x13934 * x926;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15668 = x15666 + x15667;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15669 = x13937 * x925;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15670 = x15668 + x15669;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15671 = x13940 * x924;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15672 = x15670 + x15671;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15673 = x13943 * x923;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15674 = x15672 + x15673;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15675 = x13946 * x922;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15676 = x15674 + x15675;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15677 = x13949 * x921;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15678 = x15676 + x15677;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15679 = x13882 * x920;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15680 = x15678 + x15679;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15681 = x13959 * x919;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15682 = x15680 + x15681;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15683 = x14015 * x918;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15684 = x15682 + x15683;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15685 = x14073 * x917;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15686 = x15684 + x15685;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15687 = x14133 * x916;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15688 = x15686 + x15687;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15689 = x14195 * x915;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15690 = x15688 + x15689;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15691 = x14259 * x914;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15692 = x15690 + x15691;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15693 = x14325 * x913;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15694 = x15692 + x15693;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15695 = x14393 * x912;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15696 = x15694 + x15695;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15697 = x14463 * x911;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15698 = x15696 + x15697;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15699 = x14535 * x910;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15700 = x15698 + x15699;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15701 = x14609 * x909;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15702 = x15700 + x15701;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15703 = x14685 * x908;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15704 = x15702 + x15703;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15705 = x14763 * x907;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15706 = x15704 + x15705;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15707 = x14843 * x906;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15708 = x15706 + x15707;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15709 = x14925 * x905;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15710 = x15708 + x15709;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15711 = x15009 * x904;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15712 = x15710 + x15711;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15713 = x15095 * x903;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15714 = x15712 + x15713;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15715 = x15183 * x902;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15716 = x15714 + x15715;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15717 = x15273 * x901;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15718 = x15716 + x15717;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15719 = x15365 * x2185;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15720 = x15718 + x15719;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x15721 = x15720 + x900;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][93 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15721);
      reg = x15721;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15722 = x13883 * x898;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15723 = x15722 + x899;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15724 = x13886 * x897;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15725 = x15723 + x15724;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15726 = x13889 * x896;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15727 = x15725 + x15726;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15728 = x13892 * x895;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15729 = x15727 + x15728;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15730 = x13895 * x894;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15731 = x15729 + x15730;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15732 = x13898 * x893;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15733 = x15731 + x15732;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15734 = x13901 * x892;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15735 = x15733 + x15734;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15736 = x13904 * x891;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15737 = x15735 + x15736;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15738 = x13907 * x890;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15739 = x15737 + x15738;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15740 = x13910 * x889;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15741 = x15739 + x15740;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15742 = x13913 * x888;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15743 = x15741 + x15742;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15744 = x13916 * x887;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15745 = x15743 + x15744;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15746 = x13919 * x886;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15747 = x15745 + x15746;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15748 = x13922 * x885;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15749 = x15747 + x15748;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15750 = x13925 * x884;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15751 = x15749 + x15750;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15752 = x13928 * x883;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15753 = x15751 + x15752;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15754 = x13931 * x882;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15755 = x15753 + x15754;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15756 = x13934 * x881;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15757 = x15755 + x15756;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15758 = x13937 * x880;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15759 = x15757 + x15758;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15760 = x13940 * x879;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15761 = x15759 + x15760;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15762 = x13943 * x878;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15763 = x15761 + x15762;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15764 = x13946 * x877;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15765 = x15763 + x15764;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15766 = x13949 * x876;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15767 = x15765 + x15766;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15768 = x13882 * x875;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15769 = x15767 + x15768;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15770 = x13959 * x874;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15771 = x15769 + x15770;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15772 = x14015 * x873;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15773 = x15771 + x15772;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15774 = x14073 * x872;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15775 = x15773 + x15774;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15776 = x14133 * x871;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15777 = x15775 + x15776;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15778 = x14195 * x870;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15779 = x15777 + x15778;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15780 = x14259 * x869;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15781 = x15779 + x15780;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15782 = x14325 * x868;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15783 = x15781 + x15782;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15784 = x14393 * x867;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15785 = x15783 + x15784;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15786 = x14463 * x866;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15787 = x15785 + x15786;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15788 = x14535 * x865;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15789 = x15787 + x15788;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15790 = x14609 * x864;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15791 = x15789 + x15790;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15792 = x14685 * x863;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15793 = x15791 + x15792;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15794 = x14763 * x862;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15795 = x15793 + x15794;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15796 = x14843 * x861;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15797 = x15795 + x15796;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15798 = x14925 * x860;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15799 = x15797 + x15798;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15800 = x15009 * x859;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15801 = x15799 + x15800;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15802 = x15095 * x858;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15803 = x15801 + x15802;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15804 = x15183 * x857;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15805 = x15803 + x15804;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15806 = x15273 * x856;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15807 = x15805 + x15806;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15808 = x15365 * x2161;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15809 = x15807 + x15808;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x15810 = x15809 + x855;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][94 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15810);
      reg = x15810;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15811 = x13883 * x853;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15812 = x15811 + x854;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15813 = x13886 * x852;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15814 = x15812 + x15813;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15815 = x13889 * x851;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15816 = x15814 + x15815;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15817 = x13892 * x850;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15818 = x15816 + x15817;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15819 = x13895 * x849;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15820 = x15818 + x15819;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15821 = x13898 * x848;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15822 = x15820 + x15821;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15823 = x13901 * x847;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15824 = x15822 + x15823;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15825 = x13904 * x846;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15826 = x15824 + x15825;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15827 = x13907 * x845;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15828 = x15826 + x15827;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15829 = x13910 * x844;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15830 = x15828 + x15829;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15831 = x13913 * x843;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15832 = x15830 + x15831;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15833 = x13916 * x842;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15834 = x15832 + x15833;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15835 = x13919 * x841;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15836 = x15834 + x15835;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15837 = x13922 * x840;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15838 = x15836 + x15837;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15839 = x13925 * x839;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15840 = x15838 + x15839;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15841 = x13928 * x838;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15842 = x15840 + x15841;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15843 = x13931 * x837;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15844 = x15842 + x15843;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15845 = x13934 * x836;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15846 = x15844 + x15845;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15847 = x13937 * x835;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15848 = x15846 + x15847;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15849 = x13940 * x834;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15850 = x15848 + x15849;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15851 = x13943 * x833;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15852 = x15850 + x15851;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15853 = x13946 * x832;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15854 = x15852 + x15853;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15855 = x13949 * x831;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15856 = x15854 + x15855;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15857 = x13882 * x830;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15858 = x15856 + x15857;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15859 = x13959 * x829;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15860 = x15858 + x15859;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15861 = x14015 * x828;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15862 = x15860 + x15861;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15863 = x14073 * x827;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15864 = x15862 + x15863;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15865 = x14133 * x826;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15866 = x15864 + x15865;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15867 = x14195 * x825;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15868 = x15866 + x15867;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15869 = x14259 * x824;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15870 = x15868 + x15869;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15871 = x14325 * x823;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15872 = x15870 + x15871;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15873 = x14393 * x822;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15874 = x15872 + x15873;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15875 = x14463 * x821;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15876 = x15874 + x15875;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15877 = x14535 * x820;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15878 = x15876 + x15877;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15879 = x14609 * x819;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15880 = x15878 + x15879;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15881 = x14685 * x818;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15882 = x15880 + x15881;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15883 = x14763 * x817;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15884 = x15882 + x15883;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15885 = x14843 * x816;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15886 = x15884 + x15885;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15887 = x14925 * x815;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15888 = x15886 + x15887;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15889 = x15009 * x814;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15890 = x15888 + x15889;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15891 = x15095 * x813;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15892 = x15890 + x15891;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15893 = x15183 * x812;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15894 = x15892 + x15893;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15895 = x15273 * x811;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15896 = x15894 + x15895;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15897 = x15365 * x2137;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15898 = x15896 + x15897;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x15899 = x15898 + x810;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][95 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15899);
      reg = x15899;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15900 = x13883 * x808;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15901 = x15900 + x809;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15902 = x13886 * x807;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15903 = x15901 + x15902;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15904 = x13889 * x806;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15905 = x15903 + x15904;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15906 = x13892 * x805;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15907 = x15905 + x15906;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15908 = x13895 * x804;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15909 = x15907 + x15908;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15910 = x13898 * x803;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15911 = x15909 + x15910;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15912 = x13901 * x802;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15913 = x15911 + x15912;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15914 = x13904 * x801;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15915 = x15913 + x15914;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15916 = x13907 * x800;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15917 = x15915 + x15916;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15918 = x13910 * x799;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15919 = x15917 + x15918;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15920 = x13913 * x798;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15921 = x15919 + x15920;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15922 = x13916 * x797;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15923 = x15921 + x15922;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15924 = x13919 * x796;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15925 = x15923 + x15924;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15926 = x13922 * x795;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15927 = x15925 + x15926;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15928 = x13925 * x794;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15929 = x15927 + x15928;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15930 = x13928 * x793;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15931 = x15929 + x15930;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15932 = x13931 * x792;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15933 = x15931 + x15932;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15934 = x13934 * x791;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15935 = x15933 + x15934;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15936 = x13937 * x790;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15937 = x15935 + x15936;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15938 = x13940 * x789;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15939 = x15937 + x15938;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15940 = x13943 * x788;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15941 = x15939 + x15940;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15942 = x13946 * x787;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15943 = x15941 + x15942;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15944 = x13949 * x786;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15945 = x15943 + x15944;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15946 = x13882 * x785;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15947 = x15945 + x15946;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15948 = x13959 * x784;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15949 = x15947 + x15948;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15950 = x14015 * x783;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15951 = x15949 + x15950;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15952 = x14073 * x782;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15953 = x15951 + x15952;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15954 = x14133 * x781;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15955 = x15953 + x15954;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15956 = x14195 * x780;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15957 = x15955 + x15956;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15958 = x14259 * x779;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15959 = x15957 + x15958;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15960 = x14325 * x778;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15961 = x15959 + x15960;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15962 = x14393 * x777;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15963 = x15961 + x15962;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15964 = x14463 * x776;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15965 = x15963 + x15964;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15966 = x14535 * x775;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15967 = x15965 + x15966;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15968 = x14609 * x774;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15969 = x15967 + x15968;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15970 = x14685 * x773;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15971 = x15969 + x15970;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15972 = x14763 * x772;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15973 = x15971 + x15972;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15974 = x14843 * x771;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15975 = x15973 + x15974;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15976 = x14925 * x770;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15977 = x15975 + x15976;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15978 = x15009 * x769;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15979 = x15977 + x15978;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15980 = x15095 * x768;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15981 = x15979 + x15980;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15982 = x15183 * x767;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15983 = x15981 + x15982;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15984 = x15273 * x766;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15985 = x15983 + x15984;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x15986 = x15365 * x2113;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x15987 = x15985 + x15986;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x15988 = x15987 + x765;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][96 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x15988);
      reg = x15988;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15989 = x13883 * x763;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15990 = x15989 + x764;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15991 = x13886 * x762;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15992 = x15990 + x15991;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15993 = x13889 * x761;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15994 = x15992 + x15993;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15995 = x13892 * x760;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15996 = x15994 + x15995;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15997 = x13895 * x759;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x15998 = x15996 + x15997;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x15999 = x13898 * x758;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16000 = x15998 + x15999;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16001 = x13901 * x757;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16002 = x16000 + x16001;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16003 = x13904 * x756;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16004 = x16002 + x16003;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16005 = x13907 * x755;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16006 = x16004 + x16005;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16007 = x13910 * x754;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16008 = x16006 + x16007;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16009 = x13913 * x753;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16010 = x16008 + x16009;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16011 = x13916 * x752;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16012 = x16010 + x16011;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16013 = x13919 * x751;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16014 = x16012 + x16013;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16015 = x13922 * x750;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16016 = x16014 + x16015;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16017 = x13925 * x749;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16018 = x16016 + x16017;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16019 = x13928 * x748;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16020 = x16018 + x16019;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16021 = x13931 * x747;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16022 = x16020 + x16021;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16023 = x13934 * x746;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16024 = x16022 + x16023;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16025 = x13937 * x745;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16026 = x16024 + x16025;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16027 = x13940 * x744;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16028 = x16026 + x16027;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16029 = x13943 * x743;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16030 = x16028 + x16029;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16031 = x13946 * x742;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16032 = x16030 + x16031;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16033 = x13949 * x741;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16034 = x16032 + x16033;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16035 = x13882 * x740;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16036 = x16034 + x16035;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16037 = x13959 * x739;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16038 = x16036 + x16037;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16039 = x14015 * x738;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16040 = x16038 + x16039;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16041 = x14073 * x737;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16042 = x16040 + x16041;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16043 = x14133 * x736;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16044 = x16042 + x16043;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16045 = x14195 * x735;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16046 = x16044 + x16045;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16047 = x14259 * x734;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16048 = x16046 + x16047;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16049 = x14325 * x733;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16050 = x16048 + x16049;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16051 = x14393 * x732;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16052 = x16050 + x16051;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16053 = x14463 * x731;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16054 = x16052 + x16053;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16055 = x14535 * x730;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16056 = x16054 + x16055;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16057 = x14609 * x729;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16058 = x16056 + x16057;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16059 = x14685 * x728;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16060 = x16058 + x16059;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16061 = x14763 * x727;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16062 = x16060 + x16061;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16063 = x14843 * x726;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16064 = x16062 + x16063;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16065 = x14925 * x725;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16066 = x16064 + x16065;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16067 = x15009 * x724;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16068 = x16066 + x16067;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16069 = x15095 * x723;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16070 = x16068 + x16069;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16071 = x15183 * x722;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16072 = x16070 + x16071;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16073 = x15273 * x721;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16074 = x16072 + x16073;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16075 = x15365 * x2089;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16076 = x16074 + x16075;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x16077 = x16076 + x720;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][97 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x16077);
      reg = x16077;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16078 = x13883 * x718;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16079 = x16078 + x719;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16080 = x13886 * x717;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16081 = x16079 + x16080;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16082 = x13889 * x716;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16083 = x16081 + x16082;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16084 = x13892 * x715;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16085 = x16083 + x16084;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16086 = x13895 * x714;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16087 = x16085 + x16086;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16088 = x13898 * x713;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16089 = x16087 + x16088;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16090 = x13901 * x712;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16091 = x16089 + x16090;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16092 = x13904 * x711;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16093 = x16091 + x16092;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16094 = x13907 * x710;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16095 = x16093 + x16094;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16096 = x13910 * x709;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16097 = x16095 + x16096;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16098 = x13913 * x708;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16099 = x16097 + x16098;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16100 = x13916 * x707;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16101 = x16099 + x16100;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16102 = x13919 * x706;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16103 = x16101 + x16102;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16104 = x13922 * x705;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16105 = x16103 + x16104;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16106 = x13925 * x704;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16107 = x16105 + x16106;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16108 = x13928 * x703;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16109 = x16107 + x16108;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16110 = x13931 * x702;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16111 = x16109 + x16110;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16112 = x13934 * x701;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16113 = x16111 + x16112;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16114 = x13937 * x700;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16115 = x16113 + x16114;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16116 = x13940 * x699;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16117 = x16115 + x16116;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16118 = x13943 * x698;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16119 = x16117 + x16118;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16120 = x13946 * x697;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16121 = x16119 + x16120;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16122 = x13949 * x696;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16123 = x16121 + x16122;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16124 = x13882 * x695;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16125 = x16123 + x16124;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16126 = x13959 * x694;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16127 = x16125 + x16126;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16128 = x14015 * x693;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16129 = x16127 + x16128;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16130 = x14073 * x692;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16131 = x16129 + x16130;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16132 = x14133 * x691;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16133 = x16131 + x16132;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16134 = x14195 * x690;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16135 = x16133 + x16134;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16136 = x14259 * x689;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16137 = x16135 + x16136;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16138 = x14325 * x688;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16139 = x16137 + x16138;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16140 = x14393 * x687;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16141 = x16139 + x16140;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16142 = x14463 * x686;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16143 = x16141 + x16142;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16144 = x14535 * x685;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16145 = x16143 + x16144;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16146 = x14609 * x684;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16147 = x16145 + x16146;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16148 = x14685 * x683;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16149 = x16147 + x16148;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16150 = x14763 * x682;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16151 = x16149 + x16150;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16152 = x14843 * x681;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16153 = x16151 + x16152;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16154 = x14925 * x680;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16155 = x16153 + x16154;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16156 = x15009 * x679;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16157 = x16155 + x16156;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16158 = x15095 * x678;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16159 = x16157 + x16158;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16160 = x15183 * x677;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16161 = x16159 + x16160;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16162 = x15273 * x676;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16163 = x16161 + x16162;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16164 = x15365 * x2065;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16165 = x16163 + x16164;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x16166 = x16165 + x675;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][98 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x16166);
      reg = x16166;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16167 = x13883 * x673;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16168 = x16167 + x674;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16169 = x13886 * x672;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16170 = x16168 + x16169;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16171 = x13889 * x671;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16172 = x16170 + x16171;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16173 = x13892 * x670;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16174 = x16172 + x16173;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16175 = x13895 * x669;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16176 = x16174 + x16175;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16177 = x13898 * x668;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16178 = x16176 + x16177;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16179 = x13901 * x667;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16180 = x16178 + x16179;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16181 = x13904 * x666;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16182 = x16180 + x16181;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16183 = x13907 * x665;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16184 = x16182 + x16183;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16185 = x13910 * x664;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16186 = x16184 + x16185;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16187 = x13913 * x663;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16188 = x16186 + x16187;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16189 = x13916 * x662;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16190 = x16188 + x16189;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16191 = x13919 * x661;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16192 = x16190 + x16191;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16193 = x13922 * x660;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16194 = x16192 + x16193;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16195 = x13925 * x659;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16196 = x16194 + x16195;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16197 = x13928 * x658;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16198 = x16196 + x16197;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16199 = x13931 * x657;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16200 = x16198 + x16199;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16201 = x13934 * x656;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16202 = x16200 + x16201;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16203 = x13937 * x655;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16204 = x16202 + x16203;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16205 = x13940 * x654;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16206 = x16204 + x16205;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16207 = x13943 * x653;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16208 = x16206 + x16207;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16209 = x13946 * x652;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16210 = x16208 + x16209;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16211 = x13949 * x651;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16212 = x16210 + x16211;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16213 = x13882 * x650;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16214 = x16212 + x16213;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16215 = x13959 * x649;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16216 = x16214 + x16215;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16217 = x14015 * x648;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16218 = x16216 + x16217;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16219 = x14073 * x647;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16220 = x16218 + x16219;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16221 = x14133 * x646;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16222 = x16220 + x16221;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16223 = x14195 * x645;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16224 = x16222 + x16223;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16225 = x14259 * x644;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16226 = x16224 + x16225;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16227 = x14325 * x643;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16228 = x16226 + x16227;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16229 = x14393 * x642;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16230 = x16228 + x16229;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16231 = x14463 * x641;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16232 = x16230 + x16231;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16233 = x14535 * x640;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16234 = x16232 + x16233;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16235 = x14609 * x639;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16236 = x16234 + x16235;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16237 = x14685 * x638;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16238 = x16236 + x16237;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16239 = x14763 * x637;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16240 = x16238 + x16239;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16241 = x14843 * x636;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16242 = x16240 + x16241;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16243 = x14925 * x635;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16244 = x16242 + x16243;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16245 = x15009 * x634;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16246 = x16244 + x16245;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16247 = x15095 * x633;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16248 = x16246 + x16247;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16249 = x15183 * x632;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16250 = x16248 + x16249;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16251 = x15273 * x631;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16252 = x16250 + x16251;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16253 = x15365 * x2041;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16254 = x16252 + x16253;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x16255 = x16254 + x630;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][99 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x16255);
      reg = x16255;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16256 = x13883 * x628;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16257 = x16256 + x629;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16258 = x13886 * x627;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16259 = x16257 + x16258;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16260 = x13889 * x626;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16261 = x16259 + x16260;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16262 = x13892 * x625;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16263 = x16261 + x16262;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16264 = x13895 * x624;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16265 = x16263 + x16264;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16266 = x13898 * x623;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16267 = x16265 + x16266;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16268 = x13901 * x622;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16269 = x16267 + x16268;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16270 = x13904 * x621;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16271 = x16269 + x16270;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16272 = x13907 * x620;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16273 = x16271 + x16272;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16274 = x13910 * x619;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16275 = x16273 + x16274;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16276 = x13913 * x618;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16277 = x16275 + x16276;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16278 = x13916 * x617;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16279 = x16277 + x16278;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16280 = x13919 * x616;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16281 = x16279 + x16280;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16282 = x13922 * x615;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16283 = x16281 + x16282;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16284 = x13925 * x614;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16285 = x16283 + x16284;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16286 = x13928 * x613;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16287 = x16285 + x16286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16288 = x13931 * x612;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16289 = x16287 + x16288;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16290 = x13934 * x611;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16291 = x16289 + x16290;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16292 = x13937 * x610;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16293 = x16291 + x16292;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16294 = x13940 * x609;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16295 = x16293 + x16294;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16296 = x13943 * x608;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16297 = x16295 + x16296;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16298 = x13946 * x607;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16299 = x16297 + x16298;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16300 = x13949 * x606;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16301 = x16299 + x16300;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16302 = x13882 * x605;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16303 = x16301 + x16302;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16304 = x13959 * x604;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16305 = x16303 + x16304;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16306 = x14015 * x603;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16307 = x16305 + x16306;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16308 = x14073 * x602;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16309 = x16307 + x16308;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16310 = x14133 * x601;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16311 = x16309 + x16310;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16312 = x14195 * x600;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16313 = x16311 + x16312;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16314 = x14259 * x599;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16315 = x16313 + x16314;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16316 = x14325 * x598;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16317 = x16315 + x16316;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16318 = x14393 * x597;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16319 = x16317 + x16318;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16320 = x14463 * x596;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16321 = x16319 + x16320;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16322 = x14535 * x595;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16323 = x16321 + x16322;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16324 = x14609 * x594;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16325 = x16323 + x16324;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16326 = x14685 * x593;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16327 = x16325 + x16326;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16328 = x14763 * x592;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16329 = x16327 + x16328;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16330 = x14843 * x591;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16331 = x16329 + x16330;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16332 = x14925 * x590;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16333 = x16331 + x16332;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16334 = x15009 * x589;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16335 = x16333 + x16334;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16336 = x15095 * x588;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16337 = x16335 + x16336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16338 = x15183 * x587;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16339 = x16337 + x16338;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16340 = x15273 * x586;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16341 = x16339 + x16340;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16342 = x15365 * x2017;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16343 = x16341 + x16342;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x16344 = x16343 + x585;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][100 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x16344);
      reg = x16344;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16345 = x13883 * x583;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16346 = x16345 + x584;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16347 = x13886 * x582;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16348 = x16346 + x16347;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16349 = x13889 * x581;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16350 = x16348 + x16349;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16351 = x13892 * x580;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16352 = x16350 + x16351;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16353 = x13895 * x579;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16354 = x16352 + x16353;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16355 = x13898 * x578;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16356 = x16354 + x16355;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16357 = x13901 * x577;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16358 = x16356 + x16357;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16359 = x13904 * x576;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16360 = x16358 + x16359;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16361 = x13907 * x575;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16362 = x16360 + x16361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16363 = x13910 * x574;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16364 = x16362 + x16363;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16365 = x13913 * x573;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16366 = x16364 + x16365;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16367 = x13916 * x572;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16368 = x16366 + x16367;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16369 = x13919 * x571;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16370 = x16368 + x16369;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16371 = x13922 * x570;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16372 = x16370 + x16371;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16373 = x13925 * x569;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16374 = x16372 + x16373;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16375 = x13928 * x568;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16376 = x16374 + x16375;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16377 = x13931 * x567;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16378 = x16376 + x16377;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16379 = x13934 * x566;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16380 = x16378 + x16379;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16381 = x13937 * x565;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16382 = x16380 + x16381;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16383 = x13940 * x564;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16384 = x16382 + x16383;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16385 = x13943 * x563;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16386 = x16384 + x16385;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16387 = x13946 * x562;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16388 = x16386 + x16387;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16389 = x13949 * x561;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16390 = x16388 + x16389;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16391 = x13882 * x560;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16392 = x16390 + x16391;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16393 = x13959 * x559;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16394 = x16392 + x16393;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16395 = x14015 * x558;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16396 = x16394 + x16395;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16397 = x14073 * x557;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16398 = x16396 + x16397;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16399 = x14133 * x556;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16400 = x16398 + x16399;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16401 = x14195 * x555;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16402 = x16400 + x16401;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16403 = x14259 * x554;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16404 = x16402 + x16403;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16405 = x14325 * x553;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16406 = x16404 + x16405;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16407 = x14393 * x552;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16408 = x16406 + x16407;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16409 = x14463 * x551;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16410 = x16408 + x16409;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16411 = x14535 * x550;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16412 = x16410 + x16411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16413 = x14609 * x549;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16414 = x16412 + x16413;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16415 = x14685 * x548;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16416 = x16414 + x16415;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16417 = x14763 * x547;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16418 = x16416 + x16417;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16419 = x14843 * x546;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16420 = x16418 + x16419;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16421 = x14925 * x545;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16422 = x16420 + x16421;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16423 = x15009 * x544;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16424 = x16422 + x16423;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16425 = x15095 * x543;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16426 = x16424 + x16425;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16427 = x15183 * x542;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16428 = x16426 + x16427;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16429 = x15273 * x541;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16430 = x16428 + x16429;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16431 = x15365 * x1993;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16432 = x16430 + x16431;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x16433 = x16432 + x540;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][101 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x16433);
      reg = x16433;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16434 = x13883 * x538;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16435 = x16434 + x539;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16436 = x13886 * x537;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16437 = x16435 + x16436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16438 = x13889 * x536;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16439 = x16437 + x16438;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16440 = x13892 * x535;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16441 = x16439 + x16440;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16442 = x13895 * x534;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16443 = x16441 + x16442;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16444 = x13898 * x533;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16445 = x16443 + x16444;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16446 = x13901 * x532;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16447 = x16445 + x16446;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16448 = x13904 * x531;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16449 = x16447 + x16448;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16450 = x13907 * x530;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16451 = x16449 + x16450;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16452 = x13910 * x529;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16453 = x16451 + x16452;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16454 = x13913 * x528;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16455 = x16453 + x16454;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16456 = x13916 * x527;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16457 = x16455 + x16456;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16458 = x13919 * x526;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16459 = x16457 + x16458;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16460 = x13922 * x525;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16461 = x16459 + x16460;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16462 = x13925 * x524;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16463 = x16461 + x16462;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16464 = x13928 * x523;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16465 = x16463 + x16464;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16466 = x13931 * x522;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16467 = x16465 + x16466;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16468 = x13934 * x521;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16469 = x16467 + x16468;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16470 = x13937 * x520;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16471 = x16469 + x16470;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16472 = x13940 * x519;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16473 = x16471 + x16472;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16474 = x13943 * x518;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16475 = x16473 + x16474;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16476 = x13946 * x517;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16477 = x16475 + x16476;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16478 = x13949 * x516;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16479 = x16477 + x16478;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16480 = x13882 * x515;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16481 = x16479 + x16480;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16482 = x13959 * x514;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16483 = x16481 + x16482;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16484 = x14015 * x513;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16485 = x16483 + x16484;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16486 = x14073 * x512;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16487 = x16485 + x16486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16488 = x14133 * x511;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16489 = x16487 + x16488;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16490 = x14195 * x510;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16491 = x16489 + x16490;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16492 = x14259 * x509;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16493 = x16491 + x16492;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16494 = x14325 * x508;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16495 = x16493 + x16494;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16496 = x14393 * x507;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16497 = x16495 + x16496;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16498 = x14463 * x506;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16499 = x16497 + x16498;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16500 = x14535 * x505;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16501 = x16499 + x16500;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16502 = x14609 * x504;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16503 = x16501 + x16502;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16504 = x14685 * x503;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16505 = x16503 + x16504;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16506 = x14763 * x502;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16507 = x16505 + x16506;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16508 = x14843 * x501;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16509 = x16507 + x16508;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16510 = x14925 * x500;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16511 = x16509 + x16510;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16512 = x15009 * x499;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16513 = x16511 + x16512;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16514 = x15095 * x498;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16515 = x16513 + x16514;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16516 = x15183 * x497;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16517 = x16515 + x16516;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16518 = x15273 * x496;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16519 = x16517 + x16518;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16520 = x15365 * x1969;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16521 = x16519 + x16520;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x16522 = x16521 + x495;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][102 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x16522);
      reg = x16522;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16523 = x13883 * x493;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16524 = x16523 + x494;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16525 = x13886 * x492;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16526 = x16524 + x16525;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16527 = x13889 * x491;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16528 = x16526 + x16527;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16529 = x13892 * x490;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16530 = x16528 + x16529;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16531 = x13895 * x489;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16532 = x16530 + x16531;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16533 = x13898 * x488;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16534 = x16532 + x16533;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16535 = x13901 * x487;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16536 = x16534 + x16535;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16537 = x13904 * x486;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16538 = x16536 + x16537;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16539 = x13907 * x485;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16540 = x16538 + x16539;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16541 = x13910 * x484;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16542 = x16540 + x16541;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16543 = x13913 * x483;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16544 = x16542 + x16543;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16545 = x13916 * x482;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16546 = x16544 + x16545;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16547 = x13919 * x481;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16548 = x16546 + x16547;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16549 = x13922 * x480;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16550 = x16548 + x16549;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16551 = x13925 * x479;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16552 = x16550 + x16551;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16553 = x13928 * x478;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16554 = x16552 + x16553;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16555 = x13931 * x477;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16556 = x16554 + x16555;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16557 = x13934 * x476;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16558 = x16556 + x16557;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16559 = x13937 * x475;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16560 = x16558 + x16559;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16561 = x13940 * x474;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16562 = x16560 + x16561;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16563 = x13943 * x473;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16564 = x16562 + x16563;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16565 = x13946 * x472;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16566 = x16564 + x16565;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16567 = x13949 * x471;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16568 = x16566 + x16567;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16569 = x13882 * x470;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16570 = x16568 + x16569;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16571 = x13959 * x469;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16572 = x16570 + x16571;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16573 = x14015 * x468;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16574 = x16572 + x16573;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16575 = x14073 * x467;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16576 = x16574 + x16575;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16577 = x14133 * x466;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16578 = x16576 + x16577;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16579 = x14195 * x465;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16580 = x16578 + x16579;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16581 = x14259 * x464;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16582 = x16580 + x16581;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16583 = x14325 * x463;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16584 = x16582 + x16583;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16585 = x14393 * x462;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16586 = x16584 + x16585;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16587 = x14463 * x461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16588 = x16586 + x16587;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16589 = x14535 * x460;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16590 = x16588 + x16589;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16591 = x14609 * x459;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16592 = x16590 + x16591;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16593 = x14685 * x458;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16594 = x16592 + x16593;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16595 = x14763 * x457;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16596 = x16594 + x16595;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16597 = x14843 * x456;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16598 = x16596 + x16597;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16599 = x14925 * x455;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16600 = x16598 + x16599;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16601 = x15009 * x454;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16602 = x16600 + x16601;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16603 = x15095 * x453;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16604 = x16602 + x16603;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16605 = x15183 * x452;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16606 = x16604 + x16605;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16607 = x15273 * x451;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16608 = x16606 + x16607;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16609 = x15365 * x1945;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16610 = x16608 + x16609;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x16611 = x16610 + x450;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][103 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x16611);
      reg = x16611;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16612 = x13883 * x448;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16613 = x16612 + x449;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16614 = x13886 * x447;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16615 = x16613 + x16614;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16616 = x13889 * x446;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16617 = x16615 + x16616;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16618 = x13892 * x445;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16619 = x16617 + x16618;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16620 = x13895 * x444;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16621 = x16619 + x16620;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16622 = x13898 * x443;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16623 = x16621 + x16622;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16624 = x13901 * x442;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16625 = x16623 + x16624;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16626 = x13904 * x441;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16627 = x16625 + x16626;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16628 = x13907 * x440;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16629 = x16627 + x16628;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16630 = x13910 * x439;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16631 = x16629 + x16630;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16632 = x13913 * x438;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16633 = x16631 + x16632;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16634 = x13916 * x437;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16635 = x16633 + x16634;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16636 = x13919 * x436;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16637 = x16635 + x16636;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16638 = x13922 * x435;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16639 = x16637 + x16638;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16640 = x13925 * x434;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16641 = x16639 + x16640;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16642 = x13928 * x433;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16643 = x16641 + x16642;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16644 = x13931 * x432;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16645 = x16643 + x16644;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16646 = x13934 * x431;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16647 = x16645 + x16646;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16648 = x13937 * x430;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16649 = x16647 + x16648;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16650 = x13940 * x429;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16651 = x16649 + x16650;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16652 = x13943 * x428;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16653 = x16651 + x16652;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16654 = x13946 * x427;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16655 = x16653 + x16654;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16656 = x13949 * x426;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16657 = x16655 + x16656;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16658 = x13882 * x425;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16659 = x16657 + x16658;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16660 = x13959 * x424;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16661 = x16659 + x16660;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16662 = x14015 * x423;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16663 = x16661 + x16662;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16664 = x14073 * x422;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16665 = x16663 + x16664;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16666 = x14133 * x421;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16667 = x16665 + x16666;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16668 = x14195 * x420;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16669 = x16667 + x16668;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16670 = x14259 * x419;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16671 = x16669 + x16670;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16672 = x14325 * x418;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16673 = x16671 + x16672;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16674 = x14393 * x417;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16675 = x16673 + x16674;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16676 = x14463 * x416;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16677 = x16675 + x16676;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16678 = x14535 * x415;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16679 = x16677 + x16678;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16680 = x14609 * x414;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16681 = x16679 + x16680;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16682 = x14685 * x413;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16683 = x16681 + x16682;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16684 = x14763 * x412;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16685 = x16683 + x16684;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16686 = x14843 * x411;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16687 = x16685 + x16686;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16688 = x14925 * x410;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16689 = x16687 + x16688;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16690 = x15009 * x409;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16691 = x16689 + x16690;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16692 = x15095 * x408;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16693 = x16691 + x16692;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16694 = x15183 * x407;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16695 = x16693 + x16694;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16696 = x15273 * x406;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16697 = x16695 + x16696;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16698 = x15365 * x1921;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16699 = x16697 + x16698;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x16700 = x16699 + x405;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][104 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x16700);
      reg = x16700;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16701 = x13883 * x403;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16702 = x16701 + x404;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16703 = x13886 * x402;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16704 = x16702 + x16703;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16705 = x13889 * x401;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16706 = x16704 + x16705;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16707 = x13892 * x400;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16708 = x16706 + x16707;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16709 = x13895 * x399;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16710 = x16708 + x16709;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16711 = x13898 * x398;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16712 = x16710 + x16711;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16713 = x13901 * x397;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16714 = x16712 + x16713;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16715 = x13904 * x396;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16716 = x16714 + x16715;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16717 = x13907 * x395;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16718 = x16716 + x16717;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16719 = x13910 * x394;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16720 = x16718 + x16719;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16721 = x13913 * x393;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16722 = x16720 + x16721;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16723 = x13916 * x392;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16724 = x16722 + x16723;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16725 = x13919 * x391;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16726 = x16724 + x16725;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16727 = x13922 * x390;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16728 = x16726 + x16727;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16729 = x13925 * x389;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16730 = x16728 + x16729;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16731 = x13928 * x388;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16732 = x16730 + x16731;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16733 = x13931 * x387;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16734 = x16732 + x16733;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16735 = x13934 * x386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16736 = x16734 + x16735;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16737 = x13937 * x385;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16738 = x16736 + x16737;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16739 = x13940 * x384;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16740 = x16738 + x16739;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16741 = x13943 * x383;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16742 = x16740 + x16741;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16743 = x13946 * x382;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16744 = x16742 + x16743;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16745 = x13949 * x381;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16746 = x16744 + x16745;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16747 = x13882 * x380;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16748 = x16746 + x16747;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16749 = x13959 * x379;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16750 = x16748 + x16749;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16751 = x14015 * x378;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16752 = x16750 + x16751;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16753 = x14073 * x377;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16754 = x16752 + x16753;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16755 = x14133 * x376;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16756 = x16754 + x16755;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16757 = x14195 * x375;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16758 = x16756 + x16757;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16759 = x14259 * x374;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16760 = x16758 + x16759;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16761 = x14325 * x373;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16762 = x16760 + x16761;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16763 = x14393 * x372;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16764 = x16762 + x16763;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16765 = x14463 * x371;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16766 = x16764 + x16765;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16767 = x14535 * x370;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16768 = x16766 + x16767;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16769 = x14609 * x369;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16770 = x16768 + x16769;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16771 = x14685 * x368;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16772 = x16770 + x16771;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16773 = x14763 * x367;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16774 = x16772 + x16773;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16775 = x14843 * x366;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16776 = x16774 + x16775;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16777 = x14925 * x365;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16778 = x16776 + x16777;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16779 = x15009 * x364;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16780 = x16778 + x16779;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16781 = x15095 * x363;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16782 = x16780 + x16781;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16783 = x15183 * x362;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16784 = x16782 + x16783;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16785 = x15273 * x361;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16786 = x16784 + x16785;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16787 = x15365 * x1897;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16788 = x16786 + x16787;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x16789 = x16788 + x360;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][105 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x16789);
      reg = x16789;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16790 = x13883 * x358;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16791 = x16790 + x359;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16792 = x13886 * x357;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16793 = x16791 + x16792;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16794 = x13889 * x356;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16795 = x16793 + x16794;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16796 = x13892 * x355;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16797 = x16795 + x16796;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16798 = x13895 * x354;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16799 = x16797 + x16798;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16800 = x13898 * x353;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16801 = x16799 + x16800;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16802 = x13901 * x352;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16803 = x16801 + x16802;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16804 = x13904 * x351;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16805 = x16803 + x16804;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16806 = x13907 * x350;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16807 = x16805 + x16806;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16808 = x13910 * x349;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16809 = x16807 + x16808;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16810 = x13913 * x348;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16811 = x16809 + x16810;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16812 = x13916 * x347;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16813 = x16811 + x16812;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16814 = x13919 * x346;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16815 = x16813 + x16814;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16816 = x13922 * x345;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16817 = x16815 + x16816;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16818 = x13925 * x344;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16819 = x16817 + x16818;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16820 = x13928 * x343;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16821 = x16819 + x16820;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16822 = x13931 * x342;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16823 = x16821 + x16822;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16824 = x13934 * x341;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16825 = x16823 + x16824;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16826 = x13937 * x340;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16827 = x16825 + x16826;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16828 = x13940 * x339;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16829 = x16827 + x16828;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16830 = x13943 * x338;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16831 = x16829 + x16830;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16832 = x13946 * x337;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16833 = x16831 + x16832;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16834 = x13949 * x336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16835 = x16833 + x16834;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16836 = x13882 * x335;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16837 = x16835 + x16836;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16838 = x13959 * x334;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16839 = x16837 + x16838;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16840 = x14015 * x333;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16841 = x16839 + x16840;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16842 = x14073 * x332;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16843 = x16841 + x16842;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16844 = x14133 * x331;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16845 = x16843 + x16844;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16846 = x14195 * x330;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16847 = x16845 + x16846;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16848 = x14259 * x329;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16849 = x16847 + x16848;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16850 = x14325 * x328;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16851 = x16849 + x16850;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16852 = x14393 * x327;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16853 = x16851 + x16852;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16854 = x14463 * x326;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16855 = x16853 + x16854;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16856 = x14535 * x325;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16857 = x16855 + x16856;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16858 = x14609 * x324;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16859 = x16857 + x16858;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16860 = x14685 * x323;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16861 = x16859 + x16860;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16862 = x14763 * x322;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16863 = x16861 + x16862;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16864 = x14843 * x321;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16865 = x16863 + x16864;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16866 = x14925 * x320;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16867 = x16865 + x16866;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16868 = x15009 * x319;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16869 = x16867 + x16868;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16870 = x15095 * x318;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16871 = x16869 + x16870;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16872 = x15183 * x317;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16873 = x16871 + x16872;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16874 = x15273 * x316;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16875 = x16873 + x16874;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16876 = x15365 * x1873;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16877 = x16875 + x16876;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x16878 = x16877 + x315;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][106 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x16878);
      reg = x16878;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16879 = x13883 * x313;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16880 = x16879 + x314;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16881 = x13886 * x312;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16882 = x16880 + x16881;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16883 = x13889 * x311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16884 = x16882 + x16883;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16885 = x13892 * x310;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16886 = x16884 + x16885;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16887 = x13895 * x309;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16888 = x16886 + x16887;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16889 = x13898 * x308;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16890 = x16888 + x16889;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16891 = x13901 * x307;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16892 = x16890 + x16891;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16893 = x13904 * x306;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16894 = x16892 + x16893;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16895 = x13907 * x305;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16896 = x16894 + x16895;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16897 = x13910 * x304;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16898 = x16896 + x16897;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16899 = x13913 * x303;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16900 = x16898 + x16899;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16901 = x13916 * x302;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16902 = x16900 + x16901;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16903 = x13919 * x301;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16904 = x16902 + x16903;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16905 = x13922 * x300;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16906 = x16904 + x16905;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16907 = x13925 * x299;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16908 = x16906 + x16907;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16909 = x13928 * x298;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16910 = x16908 + x16909;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16911 = x13931 * x297;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16912 = x16910 + x16911;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16913 = x13934 * x296;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16914 = x16912 + x16913;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16915 = x13937 * x295;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16916 = x16914 + x16915;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16917 = x13940 * x294;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16918 = x16916 + x16917;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16919 = x13943 * x293;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16920 = x16918 + x16919;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16921 = x13946 * x292;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16922 = x16920 + x16921;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16923 = x13949 * x291;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16924 = x16922 + x16923;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16925 = x13882 * x290;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16926 = x16924 + x16925;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16927 = x13959 * x289;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16928 = x16926 + x16927;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16929 = x14015 * x288;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16930 = x16928 + x16929;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16931 = x14073 * x287;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16932 = x16930 + x16931;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16933 = x14133 * x286;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16934 = x16932 + x16933;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16935 = x14195 * x285;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16936 = x16934 + x16935;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16937 = x14259 * x284;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16938 = x16936 + x16937;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16939 = x14325 * x283;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16940 = x16938 + x16939;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16941 = x14393 * x282;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16942 = x16940 + x16941;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16943 = x14463 * x281;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16944 = x16942 + x16943;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16945 = x14535 * x280;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16946 = x16944 + x16945;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16947 = x14609 * x279;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16948 = x16946 + x16947;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16949 = x14685 * x278;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16950 = x16948 + x16949;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16951 = x14763 * x277;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16952 = x16950 + x16951;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16953 = x14843 * x276;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16954 = x16952 + x16953;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16955 = x14925 * x275;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16956 = x16954 + x16955;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16957 = x15009 * x274;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16958 = x16956 + x16957;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16959 = x15095 * x273;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16960 = x16958 + x16959;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16961 = x15183 * x272;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16962 = x16960 + x16961;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16963 = x15273 * x271;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16964 = x16962 + x16963;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x16965 = x15365 * x1849;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x16966 = x16964 + x16965;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x16967 = x16966 + x270;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][107 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x16967);
      reg = x16967;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16968 = x13883 * x268;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16969 = x16968 + x269;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16970 = x13886 * x267;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16971 = x16969 + x16970;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16972 = x13889 * x266;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16973 = x16971 + x16972;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16974 = x13892 * x265;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16975 = x16973 + x16974;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16976 = x13895 * x264;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16977 = x16975 + x16976;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16978 = x13898 * x263;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16979 = x16977 + x16978;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16980 = x13901 * x262;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16981 = x16979 + x16980;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16982 = x13904 * x261;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16983 = x16981 + x16982;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16984 = x13907 * x260;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16985 = x16983 + x16984;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16986 = x13910 * x259;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16987 = x16985 + x16986;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16988 = x13913 * x258;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16989 = x16987 + x16988;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16990 = x13916 * x257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16991 = x16989 + x16990;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16992 = x13919 * x256;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16993 = x16991 + x16992;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16994 = x13922 * x255;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16995 = x16993 + x16994;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16996 = x13925 * x254;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16997 = x16995 + x16996;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x16998 = x13928 * x253;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x16999 = x16997 + x16998;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17000 = x13931 * x252;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17001 = x16999 + x17000;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17002 = x13934 * x251;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17003 = x17001 + x17002;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17004 = x13937 * x250;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17005 = x17003 + x17004;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17006 = x13940 * x249;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17007 = x17005 + x17006;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17008 = x13943 * x248;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17009 = x17007 + x17008;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17010 = x13946 * x247;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17011 = x17009 + x17010;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17012 = x13949 * x246;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17013 = x17011 + x17012;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17014 = x13882 * x245;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17015 = x17013 + x17014;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17016 = x13959 * x244;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17017 = x17015 + x17016;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17018 = x14015 * x243;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17019 = x17017 + x17018;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17020 = x14073 * x242;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17021 = x17019 + x17020;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17022 = x14133 * x241;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17023 = x17021 + x17022;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17024 = x14195 * x240;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17025 = x17023 + x17024;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17026 = x14259 * x239;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17027 = x17025 + x17026;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17028 = x14325 * x238;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17029 = x17027 + x17028;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17030 = x14393 * x237;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17031 = x17029 + x17030;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17032 = x14463 * x236;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17033 = x17031 + x17032;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17034 = x14535 * x235;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17035 = x17033 + x17034;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17036 = x14609 * x234;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17037 = x17035 + x17036;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17038 = x14685 * x233;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17039 = x17037 + x17038;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17040 = x14763 * x232;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17041 = x17039 + x17040;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17042 = x14843 * x231;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17043 = x17041 + x17042;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17044 = x14925 * x230;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17045 = x17043 + x17044;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17046 = x15009 * x229;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17047 = x17045 + x17046;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17048 = x15095 * x228;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17049 = x17047 + x17048;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17050 = x15183 * x227;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17051 = x17049 + x17050;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17052 = x15273 * x226;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17053 = x17051 + x17052;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17054 = x15365 * x1825;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17055 = x17053 + x17054;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x17056 = x17055 + x225;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][108 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17056);
      reg = x17056;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17057 = x13883 * x223;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17058 = x17057 + x224;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17059 = x13886 * x222;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17060 = x17058 + x17059;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17061 = x13889 * x221;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17062 = x17060 + x17061;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17063 = x13892 * x220;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17064 = x17062 + x17063;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17065 = x13895 * x219;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17066 = x17064 + x17065;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17067 = x13898 * x218;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17068 = x17066 + x17067;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17069 = x13901 * x217;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17070 = x17068 + x17069;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17071 = x13904 * x216;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17072 = x17070 + x17071;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17073 = x13907 * x215;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17074 = x17072 + x17073;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17075 = x13910 * x214;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17076 = x17074 + x17075;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17077 = x13913 * x213;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17078 = x17076 + x17077;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17079 = x13916 * x212;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17080 = x17078 + x17079;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17081 = x13919 * x211;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17082 = x17080 + x17081;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17083 = x13922 * x210;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17084 = x17082 + x17083;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17085 = x13925 * x209;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17086 = x17084 + x17085;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17087 = x13928 * x208;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17088 = x17086 + x17087;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17089 = x13931 * x207;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17090 = x17088 + x17089;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17091 = x13934 * x206;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17092 = x17090 + x17091;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17093 = x13937 * x205;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17094 = x17092 + x17093;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17095 = x13940 * x204;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17096 = x17094 + x17095;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17097 = x13943 * x203;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17098 = x17096 + x17097;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17099 = x13946 * x202;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17100 = x17098 + x17099;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17101 = x13949 * x201;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17102 = x17100 + x17101;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17103 = x13882 * x200;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17104 = x17102 + x17103;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17105 = x13959 * x199;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17106 = x17104 + x17105;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17107 = x14015 * x198;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17108 = x17106 + x17107;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17109 = x14073 * x197;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17110 = x17108 + x17109;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17111 = x14133 * x196;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17112 = x17110 + x17111;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17113 = x14195 * x195;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17114 = x17112 + x17113;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17115 = x14259 * x194;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17116 = x17114 + x17115;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17117 = x14325 * x193;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17118 = x17116 + x17117;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17119 = x14393 * x192;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17120 = x17118 + x17119;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17121 = x14463 * x191;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17122 = x17120 + x17121;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17123 = x14535 * x190;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17124 = x17122 + x17123;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17125 = x14609 * x189;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17126 = x17124 + x17125;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17127 = x14685 * x188;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17128 = x17126 + x17127;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17129 = x14763 * x187;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17130 = x17128 + x17129;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17131 = x14843 * x186;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17132 = x17130 + x17131;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17133 = x14925 * x185;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17134 = x17132 + x17133;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17135 = x15009 * x184;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17136 = x17134 + x17135;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17137 = x15095 * x183;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17138 = x17136 + x17137;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17139 = x15183 * x182;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17140 = x17138 + x17139;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17141 = x15273 * x181;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17142 = x17140 + x17141;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17143 = x15365 * x1801;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17144 = x17142 + x17143;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x17145 = x17144 + x180;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][109 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17145);
      reg = x17145;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17146 = x13883 * x178;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17147 = x17146 + x179;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17148 = x13886 * x177;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17149 = x17147 + x17148;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17150 = x13889 * x176;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17151 = x17149 + x17150;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17152 = x13892 * x175;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17153 = x17151 + x17152;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17154 = x13895 * x174;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17155 = x17153 + x17154;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17156 = x13898 * x173;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17157 = x17155 + x17156;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17158 = x13901 * x172;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17159 = x17157 + x17158;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17160 = x13904 * x171;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17161 = x17159 + x17160;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17162 = x13907 * x170;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17163 = x17161 + x17162;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17164 = x13910 * x169;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17165 = x17163 + x17164;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17166 = x13913 * x168;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17167 = x17165 + x17166;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17168 = x13916 * x167;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17169 = x17167 + x17168;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17170 = x13919 * x166;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17171 = x17169 + x17170;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17172 = x13922 * x165;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17173 = x17171 + x17172;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17174 = x13925 * x164;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17175 = x17173 + x17174;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17176 = x13928 * x163;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17177 = x17175 + x17176;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17178 = x13931 * x162;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17179 = x17177 + x17178;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17180 = x13934 * x161;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17181 = x17179 + x17180;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17182 = x13937 * x160;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17183 = x17181 + x17182;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17184 = x13940 * x159;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17185 = x17183 + x17184;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17186 = x13943 * x158;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17187 = x17185 + x17186;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17188 = x13946 * x157;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17189 = x17187 + x17188;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17190 = x13949 * x156;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17191 = x17189 + x17190;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17192 = x13882 * x155;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17193 = x17191 + x17192;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17194 = x13959 * x154;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17195 = x17193 + x17194;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17196 = x14015 * x153;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17197 = x17195 + x17196;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17198 = x14073 * x152;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17199 = x17197 + x17198;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17200 = x14133 * x151;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17201 = x17199 + x17200;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17202 = x14195 * x150;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17203 = x17201 + x17202;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17204 = x14259 * x149;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17205 = x17203 + x17204;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17206 = x14325 * x148;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17207 = x17205 + x17206;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17208 = x14393 * x147;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17209 = x17207 + x17208;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17210 = x14463 * x146;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17211 = x17209 + x17210;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17212 = x14535 * x145;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17213 = x17211 + x17212;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17214 = x14609 * x144;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17215 = x17213 + x17214;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17216 = x14685 * x143;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17217 = x17215 + x17216;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17218 = x14763 * x142;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17219 = x17217 + x17218;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17220 = x14843 * x141;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17221 = x17219 + x17220;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17222 = x14925 * x140;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17223 = x17221 + x17222;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17224 = x15009 * x139;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17225 = x17223 + x17224;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17226 = x15095 * x138;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17227 = x17225 + x17226;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17228 = x15183 * x137;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17229 = x17227 + x17228;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17230 = x15273 * x136;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17231 = x17229 + x17230;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17232 = x15365 * x1777;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17233 = x17231 + x17232;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x17234 = x17233 + x135;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][110 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17234);
      reg = x17234;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17235 = x13883 * x133;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17236 = x17235 + x134;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17237 = x13886 * x132;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17238 = x17236 + x17237;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17239 = x13889 * x131;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17240 = x17238 + x17239;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17241 = x13892 * x130;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17242 = x17240 + x17241;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17243 = x13895 * x129;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17244 = x17242 + x17243;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17245 = x13898 * x128;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17246 = x17244 + x17245;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17247 = x13901 * x127;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17248 = x17246 + x17247;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17249 = x13904 * x126;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17250 = x17248 + x17249;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17251 = x13907 * x125;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17252 = x17250 + x17251;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17253 = x13910 * x124;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17254 = x17252 + x17253;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17255 = x13913 * x123;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17256 = x17254 + x17255;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17257 = x13916 * x122;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17258 = x17256 + x17257;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17259 = x13919 * x121;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17260 = x17258 + x17259;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17261 = x13922 * x120;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17262 = x17260 + x17261;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17263 = x13925 * x119;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17264 = x17262 + x17263;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17265 = x13928 * x118;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17266 = x17264 + x17265;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17267 = x13931 * x117;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17268 = x17266 + x17267;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17269 = x13934 * x116;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17270 = x17268 + x17269;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17271 = x13937 * x115;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17272 = x17270 + x17271;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17273 = x13940 * x114;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17274 = x17272 + x17273;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17275 = x13943 * x113;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17276 = x17274 + x17275;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17277 = x13946 * x112;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17278 = x17276 + x17277;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17279 = x13949 * x111;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17280 = x17278 + x17279;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17281 = x13882 * x110;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17282 = x17280 + x17281;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17283 = x13959 * x109;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17284 = x17282 + x17283;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17285 = x14015 * x108;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17286 = x17284 + x17285;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17287 = x14073 * x107;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17288 = x17286 + x17287;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17289 = x14133 * x106;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17290 = x17288 + x17289;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17291 = x14195 * x105;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17292 = x17290 + x17291;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17293 = x14259 * x104;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17294 = x17292 + x17293;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17295 = x14325 * x103;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17296 = x17294 + x17295;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17297 = x14393 * x102;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17298 = x17296 + x17297;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17299 = x14463 * x101;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17300 = x17298 + x17299;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17301 = x14535 * x100;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17302 = x17300 + x17301;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17303 = x14609 * x99;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17304 = x17302 + x17303;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17305 = x14685 * x98;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17306 = x17304 + x17305;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17307 = x14763 * x97;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17308 = x17306 + x17307;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17309 = x14843 * x96;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17310 = x17308 + x17309;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17311 = x14925 * x95;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17312 = x17310 + x17311;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17313 = x15009 * x94;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17314 = x17312 + x17313;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17315 = x15095 * x93;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17316 = x17314 + x17315;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17317 = x15183 * x92;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17318 = x17316 + x17317;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17319 = x15273 * x91;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17320 = x17318 + x17319;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17321 = x15365 * x1753;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17322 = x17320 + x17321;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x17323 = x17322 + x90;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][111 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17323);
      reg = x17323;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17324 = x13883 * x88;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17325 = x17324 + x89;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17326 = x13886 * x87;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17327 = x17325 + x17326;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17328 = x13889 * x86;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17329 = x17327 + x17328;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17330 = x13892 * x85;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17331 = x17329 + x17330;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17332 = x13895 * x84;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17333 = x17331 + x17332;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17334 = x13898 * x83;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17335 = x17333 + x17334;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17336 = x13901 * x82;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17337 = x17335 + x17336;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17338 = x13904 * x81;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17339 = x17337 + x17338;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17340 = x13907 * x80;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17341 = x17339 + x17340;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17342 = x13910 * x79;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17343 = x17341 + x17342;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17344 = x13913 * x78;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17345 = x17343 + x17344;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17346 = x13916 * x77;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17347 = x17345 + x17346;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17348 = x13919 * x76;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17349 = x17347 + x17348;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17350 = x13922 * x75;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17351 = x17349 + x17350;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17352 = x13925 * x74;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17353 = x17351 + x17352;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17354 = x13928 * x73;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17355 = x17353 + x17354;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17356 = x13931 * x72;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17357 = x17355 + x17356;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17358 = x13934 * x71;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17359 = x17357 + x17358;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17360 = x13937 * x70;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17361 = x17359 + x17360;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17362 = x13940 * x69;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17363 = x17361 + x17362;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17364 = x13943 * x68;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17365 = x17363 + x17364;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17366 = x13946 * x67;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17367 = x17365 + x17366;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17368 = x13949 * x66;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17369 = x17367 + x17368;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17370 = x13882 * x65;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17371 = x17369 + x17370;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17372 = x13959 * x64;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17373 = x17371 + x17372;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17374 = x14015 * x63;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17375 = x17373 + x17374;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17376 = x14073 * x62;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17377 = x17375 + x17376;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17378 = x14133 * x61;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17379 = x17377 + x17378;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17380 = x14195 * x60;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17381 = x17379 + x17380;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17382 = x14259 * x59;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17383 = x17381 + x17382;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17384 = x14325 * x58;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17385 = x17383 + x17384;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17386 = x14393 * x57;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17387 = x17385 + x17386;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17388 = x14463 * x56;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17389 = x17387 + x17388;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17390 = x14535 * x55;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17391 = x17389 + x17390;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17392 = x14609 * x54;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17393 = x17391 + x17392;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17394 = x14685 * x53;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17395 = x17393 + x17394;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17396 = x14763 * x52;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17397 = x17395 + x17396;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17398 = x14843 * x51;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17399 = x17397 + x17398;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17400 = x14925 * x50;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17401 = x17399 + x17400;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17402 = x15009 * x49;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17403 = x17401 + x17402;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17404 = x15095 * x48;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17405 = x17403 + x17404;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17406 = x15183 * x47;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17407 = x17405 + x17406;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17408 = x15273 * x46;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17409 = x17407 + x17408;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17410 = x15365 * x1729;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17411 = x17409 + x17410;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x17412 = x17411 + x45;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][112 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17412);
      reg = x17412;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17413 = x13883 * x43;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17414 = x17413 + x44;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17415 = x13886 * x42;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17416 = x17414 + x17415;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17417 = x13889 * x41;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17418 = x17416 + x17417;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17419 = x13892 * x40;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17420 = x17418 + x17419;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17421 = x13895 * x39;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17422 = x17420 + x17421;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17423 = x13898 * x38;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17424 = x17422 + x17423;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17425 = x13901 * x37;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17426 = x17424 + x17425;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17427 = x13904 * x36;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17428 = x17426 + x17427;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17429 = x13907 * x35;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17430 = x17428 + x17429;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17431 = x13910 * x34;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17432 = x17430 + x17431;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17433 = x13913 * x33;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17434 = x17432 + x17433;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17435 = x13916 * x32;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17436 = x17434 + x17435;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17437 = x13919 * x31;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17438 = x17436 + x17437;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17439 = x13922 * x30;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17440 = x17438 + x17439;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17441 = x13925 * x29;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17442 = x17440 + x17441;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17443 = x13928 * x28;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17444 = x17442 + x17443;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17445 = x13931 * x27;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17446 = x17444 + x17445;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17447 = x13934 * x26;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17448 = x17446 + x17447;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17449 = x13937 * x25;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17450 = x17448 + x17449;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17451 = x13940 * x24;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17452 = x17450 + x17451;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17453 = x13943 * x23;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17454 = x17452 + x17453;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17455 = x13946 * x22;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17456 = x17454 + x17455;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:21)
    auto x17457 = x13949 * x21;
    // loc("zirgen/circuit/recursion/poseidon.cpp":135:14)
    auto x17458 = x17456 + x17457;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17459 = x13882 * x20;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17460 = x17458 + x17459;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17461 = x13959 * x19;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17462 = x17460 + x17461;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17463 = x14015 * x18;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17464 = x17462 + x17463;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17465 = x14073 * x17;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17466 = x17464 + x17465;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17467 = x14133 * x16;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17468 = x17466 + x17467;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17469 = x14195 * x15;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17470 = x17468 + x17469;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17471 = x14259 * x14;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17472 = x17470 + x17471;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17473 = x14325 * x13;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17474 = x17472 + x17473;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17475 = x14393 * x12;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17476 = x17474 + x17475;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17477 = x14463 * x11;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17478 = x17476 + x17477;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17479 = x14535 * x10;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17480 = x17478 + x17479;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17481 = x14609 * x9;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17482 = x17480 + x17481;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17483 = x14685 * x8;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17484 = x17482 + x17483;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17485 = x14763 * x7;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17486 = x17484 + x17485;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17487 = x14843 * x6;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17488 = x17486 + x17487;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17489 = x14925 * x5;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17490 = x17488 + x17489;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17491 = x15009 * x4;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17492 = x17490 + x17491;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17493 = x15095 * x3;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17494 = x17492 + x17493;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17495 = x15183 * x2;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17496 = x17494 + x17495;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17497 = x15273 * x1;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17498 = x17496 + x17497;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:21)
    auto x17499 = x15365 * x1705;
    // loc("zirgen/circuit/recursion/poseidon.cpp":138:14)
    auto x17500 = x17498 + x17499;
    // loc("zirgen/circuit/recursion/poseidon.cpp":140:12)
    auto x17501 = x17500 + x0;
    // loc("zirgen/circuit/recursion/poseidon.cpp":141:5)
    {
      auto& reg = args[2][113 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17501);
      reg = x17501;
    }
    host(ctx, "log", "POSEIDON_PARTIAL", host_args.data(), 0, host_outs.data(), 0);
  }
  // loc("top(recursion::Top)/code(recursion::Code)/select(OneHot)/poseidon_store(Reg)"("./zirgen/components/mux.h":49:25))
  auto x17502 = args[0][6 * steps + ((cycle - 0) & mask)];
  assert(x17502 != Fp::invalid());
  if (x17502 != 0) {
    // loc("top(recursion::Top)/code(recursion::Code)/write_addr(Reg)"("zirgen/circuit/recursion/top.cpp":22:49))
    auto x17503 = args[0][0 * steps + ((cycle - 0) & mask)];
    assert(x17503 != Fp::invalid());
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_store(recursion::PoseidonMemInst)/group(OneHot)/g0(Reg)"("zirgen/circuit/recursion/poseidon.cpp":162:39))
    auto x17504 = args[0][10 * steps + ((cycle - 0) & mask)];
    assert(x17504 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17505 = args[2][90 * steps + ((cycle - 1) & mask)];
    assert(x17505 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17506 = x17504 * x17505;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17507 = args[2][91 * steps + ((cycle - 1) & mask)];
    assert(x17507 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17508 = x17504 * x17507;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17509 = args[2][92 * steps + ((cycle - 1) & mask)];
    assert(x17509 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17510 = x17504 * x17509;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17511 = args[2][93 * steps + ((cycle - 1) & mask)];
    assert(x17511 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17512 = x17504 * x17511;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17513 = args[2][94 * steps + ((cycle - 1) & mask)];
    assert(x17513 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17514 = x17504 * x17513;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17515 = args[2][95 * steps + ((cycle - 1) & mask)];
    assert(x17515 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17516 = x17504 * x17515;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17517 = args[2][96 * steps + ((cycle - 1) & mask)];
    assert(x17517 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17518 = x17504 * x17517;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17519 = args[2][97 * steps + ((cycle - 1) & mask)];
    assert(x17519 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17520 = x17504 * x17519;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_store(recursion::PoseidonMemInst)/group(OneHot)/g1(Reg)"("zirgen/circuit/recursion/poseidon.cpp":162:39))
    auto x17521 = args[0][11 * steps + ((cycle - 0) & mask)];
    assert(x17521 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17522 = args[2][98 * steps + ((cycle - 1) & mask)];
    assert(x17522 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17523 = x17521 * x17522;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17524 = x17506 + x17523;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17525 = args[2][99 * steps + ((cycle - 1) & mask)];
    assert(x17525 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17526 = x17521 * x17525;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17527 = x17508 + x17526;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17528 = args[2][100 * steps + ((cycle - 1) & mask)];
    assert(x17528 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17529 = x17521 * x17528;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17530 = x17510 + x17529;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17531 = args[2][101 * steps + ((cycle - 1) & mask)];
    assert(x17531 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17532 = x17521 * x17531;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17533 = x17512 + x17532;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17534 = args[2][102 * steps + ((cycle - 1) & mask)];
    assert(x17534 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17535 = x17521 * x17534;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17536 = x17514 + x17535;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17537 = args[2][103 * steps + ((cycle - 1) & mask)];
    assert(x17537 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17538 = x17521 * x17537;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17539 = x17516 + x17538;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17540 = args[2][104 * steps + ((cycle - 1) & mask)];
    assert(x17540 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17541 = x17521 * x17540;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17542 = x17518 + x17541;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17543 = args[2][105 * steps + ((cycle - 1) & mask)];
    assert(x17543 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17544 = x17521 * x17543;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17545 = x17520 + x17544;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_store(recursion::PoseidonMemInst)/group(OneHot)/g2(Reg)"("zirgen/circuit/recursion/poseidon.cpp":162:39))
    auto x17546 = args[0][12 * steps + ((cycle - 0) & mask)];
    assert(x17546 != Fp::invalid());
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17547 = args[2][106 * steps + ((cycle - 1) & mask)];
    assert(x17547 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17548 = x17546 * x17547;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17549 = x17524 + x17548;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17550 = args[2][107 * steps + ((cycle - 1) & mask)];
    assert(x17550 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17551 = x17546 * x17550;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17552 = x17527 + x17551;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17553 = args[2][108 * steps + ((cycle - 1) & mask)];
    assert(x17553 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17554 = x17546 * x17553;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17555 = x17530 + x17554;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17556 = args[2][109 * steps + ((cycle - 1) & mask)];
    assert(x17556 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17557 = x17546 * x17556;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17558 = x17533 + x17557;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17559 = args[2][110 * steps + ((cycle - 1) & mask)];
    assert(x17559 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17560 = x17546 * x17559;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17561 = x17536 + x17560;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17562 = args[2][111 * steps + ((cycle - 1) & mask)];
    assert(x17562 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17563 = x17546 * x17562;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17564 = x17539 + x17563;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17565 = args[2][112 * steps + ((cycle - 1) & mask)];
    assert(x17565 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17566 = x17546 * x17565;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17567 = x17542 + x17566;
    // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/Reg"("zirgen/circuit/recursion/poseidon.cpp":162:88))
    auto x17568 = args[2][113 * steps + ((cycle - 1) & mask)];
    assert(x17568 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:39)
    auto x17569 = x17546 * x17568;
    // loc("zirgen/circuit/recursion/poseidon.cpp":162:22)
    auto x17570 = x17545 + x17569;
    // loc("top(recursion::Top)/code(recursion::Code)/inst(Mux)/poseidon_store(recursion::PoseidonMemInst)/do_mont(Reg)"("./zirgen/compiler/edsl/edsl.h":117:61))
    auto x17571 = args[0][7 * steps + ((cycle - 0) & mask)];
    assert(x17571 != Fp::invalid());
    // loc("zirgen/circuit/recursion/poseidon.cpp":164:13)
    auto x17572 = x17571 * x2283;
    // loc("zirgen/circuit/recursion/poseidon.cpp":164:61)
    auto x17573 = x2352 - x17571;
    // loc("zirgen/circuit/recursion/poseidon.cpp":164:13)
    auto x17574 = x17572 + x17573;
    // loc("zirgen/circuit/recursion/poseidon.cpp":166:37)
    auto x17575 = x17549 * x17574;
    // loc("zirgen/circuit/recursion/wom.cpp":85:3)
    {
      auto& reg = args[2][5 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17503);
      reg = x17503;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][6 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17575);
      reg = x17575;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][7 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][8 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][9 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    {
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17576 = args[2][5 * steps + ((cycle - 0) & mask)];
      assert(x17576 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17577 = args[2][6 * steps + ((cycle - 0) & mask)];
      assert(x17577 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17578 = args[2][7 * steps + ((cycle - 0) & mask)];
      assert(x17578 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17579 = args[2][8 * steps + ((cycle - 0) & mask)];
      assert(x17579 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17580 = args[2][9 * steps + ((cycle - 0) & mask)];
      assert(x17580 != Fp::invalid());
      host_args.at(0) = x17576;
      host_args.at(1) = x17577;
      host_args.at(2) = x17578;
      host_args.at(3) = x17579;
      host_args.at(4) = x17580;
      host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":166:21)
    auto x17581 = x17503 + x2352;
    // loc("zirgen/circuit/recursion/poseidon.cpp":166:37)
    auto x17582 = x17552 * x17574;
    // loc("zirgen/circuit/recursion/wom.cpp":85:3)
    {
      auto& reg = args[2][10 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17581);
      reg = x17581;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][11 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17582);
      reg = x17582;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][12 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][13 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][14 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    {
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17583 = args[2][10 * steps + ((cycle - 0) & mask)];
      assert(x17583 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17584 = args[2][11 * steps + ((cycle - 0) & mask)];
      assert(x17584 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17585 = args[2][12 * steps + ((cycle - 0) & mask)];
      assert(x17585 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17586 = args[2][13 * steps + ((cycle - 0) & mask)];
      assert(x17586 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17587 = args[2][14 * steps + ((cycle - 0) & mask)];
      assert(x17587 != Fp::invalid());
      host_args.at(0) = x17583;
      host_args.at(1) = x17584;
      host_args.at(2) = x17585;
      host_args.at(3) = x17586;
      host_args.at(4) = x17587;
      host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":166:21)
    auto x17588 = x17503 + x2351;
    // loc("zirgen/circuit/recursion/poseidon.cpp":166:37)
    auto x17589 = x17555 * x17574;
    // loc("zirgen/circuit/recursion/wom.cpp":85:3)
    {
      auto& reg = args[2][15 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17588);
      reg = x17588;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][16 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17589);
      reg = x17589;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][17 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][18 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][19 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    {
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17590 = args[2][15 * steps + ((cycle - 0) & mask)];
      assert(x17590 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17591 = args[2][16 * steps + ((cycle - 0) & mask)];
      assert(x17591 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17592 = args[2][17 * steps + ((cycle - 0) & mask)];
      assert(x17592 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17593 = args[2][18 * steps + ((cycle - 0) & mask)];
      assert(x17593 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17594 = args[2][19 * steps + ((cycle - 0) & mask)];
      assert(x17594 != Fp::invalid());
      host_args.at(0) = x17590;
      host_args.at(1) = x17591;
      host_args.at(2) = x17592;
      host_args.at(3) = x17593;
      host_args.at(4) = x17594;
      host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":166:21)
    auto x17595 = x17503 + x2350;
    // loc("zirgen/circuit/recursion/poseidon.cpp":166:37)
    auto x17596 = x17558 * x17574;
    // loc("zirgen/circuit/recursion/wom.cpp":85:3)
    {
      auto& reg = args[2][20 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17595);
      reg = x17595;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][21 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17596);
      reg = x17596;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][22 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][23 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][24 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    {
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17597 = args[2][20 * steps + ((cycle - 0) & mask)];
      assert(x17597 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17598 = args[2][21 * steps + ((cycle - 0) & mask)];
      assert(x17598 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17599 = args[2][22 * steps + ((cycle - 0) & mask)];
      assert(x17599 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17600 = args[2][23 * steps + ((cycle - 0) & mask)];
      assert(x17600 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17601 = args[2][24 * steps + ((cycle - 0) & mask)];
      assert(x17601 != Fp::invalid());
      host_args.at(0) = x17597;
      host_args.at(1) = x17598;
      host_args.at(2) = x17599;
      host_args.at(3) = x17600;
      host_args.at(4) = x17601;
      host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":166:21)
    auto x17602 = x17503 + x2349;
    // loc("zirgen/circuit/recursion/poseidon.cpp":166:37)
    auto x17603 = x17561 * x17574;
    // loc("zirgen/circuit/recursion/wom.cpp":85:3)
    {
      auto& reg = args[2][25 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17602);
      reg = x17602;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][26 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17603);
      reg = x17603;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][27 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][28 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][29 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    {
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17604 = args[2][25 * steps + ((cycle - 0) & mask)];
      assert(x17604 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17605 = args[2][26 * steps + ((cycle - 0) & mask)];
      assert(x17605 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17606 = args[2][27 * steps + ((cycle - 0) & mask)];
      assert(x17606 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17607 = args[2][28 * steps + ((cycle - 0) & mask)];
      assert(x17607 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17608 = args[2][29 * steps + ((cycle - 0) & mask)];
      assert(x17608 != Fp::invalid());
      host_args.at(0) = x17604;
      host_args.at(1) = x17605;
      host_args.at(2) = x17606;
      host_args.at(3) = x17607;
      host_args.at(4) = x17608;
      host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":166:21)
    auto x17609 = x17503 + x2348;
    // loc("zirgen/circuit/recursion/poseidon.cpp":166:37)
    auto x17610 = x17564 * x17574;
    // loc("zirgen/circuit/recursion/wom.cpp":85:3)
    {
      auto& reg = args[2][30 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17609);
      reg = x17609;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][31 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17610);
      reg = x17610;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][32 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][33 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][34 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    {
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17611 = args[2][30 * steps + ((cycle - 0) & mask)];
      assert(x17611 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17612 = args[2][31 * steps + ((cycle - 0) & mask)];
      assert(x17612 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17613 = args[2][32 * steps + ((cycle - 0) & mask)];
      assert(x17613 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17614 = args[2][33 * steps + ((cycle - 0) & mask)];
      assert(x17614 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17615 = args[2][34 * steps + ((cycle - 0) & mask)];
      assert(x17615 != Fp::invalid());
      host_args.at(0) = x17611;
      host_args.at(1) = x17612;
      host_args.at(2) = x17613;
      host_args.at(3) = x17614;
      host_args.at(4) = x17615;
      host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":166:21)
    auto x17616 = x17503 + x2347;
    // loc("zirgen/circuit/recursion/poseidon.cpp":166:37)
    auto x17617 = x17567 * x17574;
    // loc("zirgen/circuit/recursion/wom.cpp":85:3)
    {
      auto& reg = args[2][35 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17616);
      reg = x17616;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][36 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17617);
      reg = x17617;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][37 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][38 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][39 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    {
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17618 = args[2][35 * steps + ((cycle - 0) & mask)];
      assert(x17618 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17619 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x17619 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17620 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x17620 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17621 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x17621 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17622 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x17622 != Fp::invalid());
      host_args.at(0) = x17618;
      host_args.at(1) = x17619;
      host_args.at(2) = x17620;
      host_args.at(3) = x17621;
      host_args.at(4) = x17622;
      host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":166:21)
    auto x17623 = x17503 + x2346;
    // loc("zirgen/circuit/recursion/poseidon.cpp":166:37)
    auto x17624 = x17570 * x17574;
    // loc("zirgen/circuit/recursion/wom.cpp":85:3)
    {
      auto& reg = args[2][40 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17623);
      reg = x17623;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][41 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17624);
      reg = x17624;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][42 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][43 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    // loc("zirgen/circuit/recursion/wom.cpp":49:5)
    {
      auto& reg = args[2][44 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x2353);
      reg = x2353;
    }
    {
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17625 = args[2][40 * steps + ((cycle - 0) & mask)];
      assert(x17625 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17626 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x17626 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17627 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x17627 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17628 = args[2][43 * steps + ((cycle - 0) & mask)];
      assert(x17628 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17629 = args[2][44 * steps + ((cycle - 0) & mask)];
      assert(x17629 != Fp::invalid());
      host_args.at(0) = x17625;
      host_args.at(1) = x17626;
      host_args.at(2) = x17627;
      host_args.at(3) = x17628;
      host_args.at(4) = x17629;
      host(ctx, "womWrite", "", host_args.data(), 5, host_outs.data(), 0);
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][90 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17505);
      reg = x17505;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][91 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17507);
      reg = x17507;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][92 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17509);
      reg = x17509;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][93 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17511);
      reg = x17511;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][94 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17513);
      reg = x17513;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][95 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17515);
      reg = x17515;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][96 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17517);
      reg = x17517;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][97 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17519);
      reg = x17519;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][98 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17522);
      reg = x17522;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][99 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17525);
      reg = x17525;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][100 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17528);
      reg = x17528;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][101 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17531);
      reg = x17531;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][102 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17534);
      reg = x17534;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][103 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17537);
      reg = x17537;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][104 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17540);
      reg = x17540;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][105 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17543);
      reg = x17543;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][106 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17547);
      reg = x17547;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][107 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17550);
      reg = x17550;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][108 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17553);
      reg = x17553;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][109 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17556);
      reg = x17556;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][110 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17559);
      reg = x17559;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][111 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17562);
      reg = x17562;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][112 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17565);
      reg = x17565;
    }
    // loc("zirgen/circuit/recursion/poseidon.cpp":169:5)
    {
      auto& reg = args[2][113 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x17568);
      reg = x17568;
    }
    // loc("./zirgen/components/onehot.h":46:19)
    auto x17630 = x17546 * x2351;
    // loc("./zirgen/components/onehot.h":46:13)
    auto x17631 = x17521 + x17630;
    host_args.at(0) = x17631;
    host(ctx, "log", "POSEIDON_OUTPUT: %u", host_args.data(), 1, host_outs.data(), 0);
  }
  if (x3402 != 0) {
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x17632 = args[0][7 * steps + ((cycle - 0) & mask)];
    assert(x17632 != Fp::invalid());
    if (x17632 != 0) {
      {
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][5 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x17633 = args[0][8 * steps + ((cycle - 0) & mask)];
    assert(x17633 != Fp::invalid());
    if (x17633 != 0) {
      {
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][5 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x17634 = args[0][9 * steps + ((cycle - 0) & mask)];
    assert(x17634 != Fp::invalid());
    if (x17634 != 0) {
      {
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][5 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x17635 = args[0][10 * steps + ((cycle - 0) & mask)];
    assert(x17635 != Fp::invalid());
    if (x17635 != 0) {
      {
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][5 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x17636 = args[0][11 * steps + ((cycle - 0) & mask)];
    assert(x17636 != Fp::invalid());
    if (x17636 != 0) {
      {
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][5 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x17637 = args[0][16 * steps + ((cycle - 0) & mask)];
    assert(x17637 != Fp::invalid());
    if (x17637 != 0) {
      {
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][5 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = args[2][10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2353);
          reg = x2353;
        }
      }
    }
  }
  if (x10821 != 0) {
    {
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][45 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][46 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][47 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][48 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][49 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
    }
  }
  if (x17502 != 0) {
    {
      // loc("zirgen/circuit/recursion/wom.cpp":12:3)
      {
        auto& reg = args[2][45 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][46 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][47 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][48 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
      // loc("zirgen/circuit/recursion/wom.cpp":49:5)
      {
        auto& reg = args[2][49 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2353);
        reg = x2353;
      }
    }
  }
  if (x2354 != 0) {
    {
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17638 = args[2][5 * steps + ((cycle - 0) & mask)];
      assert(x17638 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17639 = args[2][6 * steps + ((cycle - 0) & mask)];
      assert(x17639 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17640 = args[2][7 * steps + ((cycle - 0) & mask)];
      assert(x17640 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17641 = args[2][8 * steps + ((cycle - 0) & mask)];
      assert(x17641 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17642 = args[2][9 * steps + ((cycle - 0) & mask)];
      assert(x17642 != Fp::invalid());
      host_args.at(0) = x17638;
      host_args.at(1) = x17639;
      host_args.at(2) = x17640;
      host_args.at(3) = x17641;
      host_args.at(4) = x17642;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17643 = args[2][10 * steps + ((cycle - 0) & mask)];
      assert(x17643 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17644 = args[2][11 * steps + ((cycle - 0) & mask)];
      assert(x17644 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17645 = args[2][12 * steps + ((cycle - 0) & mask)];
      assert(x17645 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17646 = args[2][13 * steps + ((cycle - 0) & mask)];
      assert(x17646 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17647 = args[2][14 * steps + ((cycle - 0) & mask)];
      assert(x17647 != Fp::invalid());
      host_args.at(0) = x17643;
      host_args.at(1) = x17644;
      host_args.at(2) = x17645;
      host_args.at(3) = x17646;
      host_args.at(4) = x17647;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17648 = args[2][15 * steps + ((cycle - 0) & mask)];
      assert(x17648 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17649 = args[2][16 * steps + ((cycle - 0) & mask)];
      assert(x17649 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17650 = args[2][17 * steps + ((cycle - 0) & mask)];
      assert(x17650 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17651 = args[2][18 * steps + ((cycle - 0) & mask)];
      assert(x17651 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17652 = args[2][19 * steps + ((cycle - 0) & mask)];
      assert(x17652 != Fp::invalid());
      host_args.at(0) = x17648;
      host_args.at(1) = x17649;
      host_args.at(2) = x17650;
      host_args.at(3) = x17651;
      host_args.at(4) = x17652;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17653 = args[2][20 * steps + ((cycle - 0) & mask)];
      assert(x17653 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17654 = args[2][21 * steps + ((cycle - 0) & mask)];
      assert(x17654 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17655 = args[2][22 * steps + ((cycle - 0) & mask)];
      assert(x17655 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17656 = args[2][23 * steps + ((cycle - 0) & mask)];
      assert(x17656 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17657 = args[2][24 * steps + ((cycle - 0) & mask)];
      assert(x17657 != Fp::invalid());
      host_args.at(0) = x17653;
      host_args.at(1) = x17654;
      host_args.at(2) = x17655;
      host_args.at(3) = x17656;
      host_args.at(4) = x17657;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17658 = args[2][25 * steps + ((cycle - 0) & mask)];
      assert(x17658 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17659 = args[2][26 * steps + ((cycle - 0) & mask)];
      assert(x17659 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17660 = args[2][27 * steps + ((cycle - 0) & mask)];
      assert(x17660 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17661 = args[2][28 * steps + ((cycle - 0) & mask)];
      assert(x17661 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17662 = args[2][29 * steps + ((cycle - 0) & mask)];
      assert(x17662 != Fp::invalid());
      host_args.at(0) = x17658;
      host_args.at(1) = x17659;
      host_args.at(2) = x17660;
      host_args.at(3) = x17661;
      host_args.at(4) = x17662;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17663 = args[2][30 * steps + ((cycle - 0) & mask)];
      assert(x17663 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17664 = args[2][31 * steps + ((cycle - 0) & mask)];
      assert(x17664 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17665 = args[2][32 * steps + ((cycle - 0) & mask)];
      assert(x17665 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17666 = args[2][33 * steps + ((cycle - 0) & mask)];
      assert(x17666 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17667 = args[2][34 * steps + ((cycle - 0) & mask)];
      assert(x17667 != Fp::invalid());
      host_args.at(0) = x17663;
      host_args.at(1) = x17664;
      host_args.at(2) = x17665;
      host_args.at(3) = x17666;
      host_args.at(4) = x17667;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17668 = args[2][35 * steps + ((cycle - 0) & mask)];
      assert(x17668 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17669 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x17669 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17670 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x17670 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17671 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x17671 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17672 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x17672 != Fp::invalid());
      host_args.at(0) = x17668;
      host_args.at(1) = x17669;
      host_args.at(2) = x17670;
      host_args.at(3) = x17671;
      host_args.at(4) = x17672;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17673 = args[2][40 * steps + ((cycle - 0) & mask)];
      assert(x17673 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17674 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x17674 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17675 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x17675 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17676 = args[2][43 * steps + ((cycle - 0) & mask)];
      assert(x17676 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17677 = args[2][44 * steps + ((cycle - 0) & mask)];
      assert(x17677 != Fp::invalid());
      host_args.at(0) = x17673;
      host_args.at(1) = x17674;
      host_args.at(2) = x17675;
      host_args.at(3) = x17676;
      host_args.at(4) = x17677;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17678 = args[2][45 * steps + ((cycle - 0) & mask)];
      assert(x17678 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17679 = args[2][46 * steps + ((cycle - 0) & mask)];
      assert(x17679 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17680 = args[2][47 * steps + ((cycle - 0) & mask)];
      assert(x17680 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17681 = args[2][48 * steps + ((cycle - 0) & mask)];
      assert(x17681 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/micro_ops(recursion::MicroOps)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17682 = args[2][49 * steps + ((cycle - 0) & mask)];
      assert(x17682 != Fp::invalid());
      host_args.at(0) = x17678;
      host_args.at(1) = x17679;
      host_args.at(2) = x17680;
      host_args.at(3) = x17681;
      host_args.at(4) = x17682;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
    }
  }
  if (x3402 != 0) {
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x17683 = args[0][10 * steps + ((cycle - 0) & mask)];
    assert(x17683 != Fp::invalid());
    if (x17683 != 0) {
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17684 = args[2][11 * steps + ((cycle - 0) & mask)];
        assert(x17684 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17685 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x17685 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17686 = args[2][13 * steps + ((cycle - 0) & mask)];
        assert(x17686 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17687 = args[2][14 * steps + ((cycle - 0) & mask)];
        assert(x17687 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17688 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x17688 != Fp::invalid());
        host_args.at(0) = x17684;
        host_args.at(1) = x17685;
        host_args.at(2) = x17686;
        host_args.at(3) = x17687;
        host_args.at(4) = x17688;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17689 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x17689 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17690 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x17690 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17691 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x17691 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17692 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x17692 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17693 = args[2][20 * steps + ((cycle - 0) & mask)];
        assert(x17693 != Fp::invalid());
        host_args.at(0) = x17689;
        host_args.at(1) = x17690;
        host_args.at(2) = x17691;
        host_args.at(3) = x17692;
        host_args.at(4) = x17693;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17694 = args[2][21 * steps + ((cycle - 0) & mask)];
        assert(x17694 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17695 = args[2][22 * steps + ((cycle - 0) & mask)];
        assert(x17695 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17696 = args[2][23 * steps + ((cycle - 0) & mask)];
        assert(x17696 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17697 = args[2][24 * steps + ((cycle - 0) & mask)];
        assert(x17697 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_and_elem(recursion::BitAndElem)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17698 = args[2][25 * steps + ((cycle - 0) & mask)];
        assert(x17698 != Fp::invalid());
        host_args.at(0) = x17694;
        host_args.at(1) = x17695;
        host_args.at(2) = x17696;
        host_args.at(3) = x17697;
        host_args.at(4) = x17698;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x17699 = args[0][11 * steps + ((cycle - 0) & mask)];
    assert(x17699 != Fp::invalid());
    if (x17699 != 0) {
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17700 = args[2][11 * steps + ((cycle - 0) & mask)];
        assert(x17700 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17701 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x17701 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17702 = args[2][13 * steps + ((cycle - 0) & mask)];
        assert(x17702 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17703 = args[2][14 * steps + ((cycle - 0) & mask)];
        assert(x17703 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17704 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x17704 != Fp::invalid());
        host_args.at(0) = x17700;
        host_args.at(1) = x17701;
        host_args.at(2) = x17702;
        host_args.at(3) = x17703;
        host_args.at(4) = x17704;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17705 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x17705 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17706 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x17706 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17707 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x17707 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17708 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x17708 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17709 = args[2][20 * steps + ((cycle - 0) & mask)];
        assert(x17709 != Fp::invalid());
        host_args.at(0) = x17705;
        host_args.at(1) = x17706;
        host_args.at(2) = x17707;
        host_args.at(3) = x17708;
        host_args.at(4) = x17709;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17710 = args[2][21 * steps + ((cycle - 0) & mask)];
        assert(x17710 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17711 = args[2][22 * steps + ((cycle - 0) & mask)];
        assert(x17711 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17712 = args[2][23 * steps + ((cycle - 0) & mask)];
        assert(x17712 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17713 = args[2][24 * steps + ((cycle - 0) & mask)];
        assert(x17713 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/bit_op_shorts(recursion::BitOpShorts)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17714 = args[2][25 * steps + ((cycle - 0) & mask)];
        assert(x17714 != Fp::invalid());
        host_args.at(0) = x17710;
        host_args.at(1) = x17711;
        host_args.at(2) = x17712;
        host_args.at(3) = x17713;
        host_args.at(4) = x17714;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x17715 = args[0][12 * steps + ((cycle - 0) & mask)];
    assert(x17715 != Fp::invalid());
    if (x17715 != 0) {
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17716 = args[2][11 * steps + ((cycle - 0) & mask)];
        assert(x17716 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17717 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x17717 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17718 = args[2][13 * steps + ((cycle - 0) & mask)];
        assert(x17718 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17719 = args[2][14 * steps + ((cycle - 0) & mask)];
        assert(x17719 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17720 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x17720 != Fp::invalid());
        host_args.at(0) = x17716;
        host_args.at(1) = x17717;
        host_args.at(2) = x17718;
        host_args.at(3) = x17719;
        host_args.at(4) = x17720;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17721 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x17721 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17722 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x17722 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17723 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x17723 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17724 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x17724 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_init(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17725 = args[2][20 * steps + ((cycle - 0) & mask)];
        assert(x17725 != Fp::invalid());
        host_args.at(0) = x17721;
        host_args.at(1) = x17722;
        host_args.at(2) = x17723;
        host_args.at(3) = x17724;
        host_args.at(4) = x17725;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x17726 = args[0][13 * steps + ((cycle - 0) & mask)];
    assert(x17726 != Fp::invalid());
    if (x17726 != 0) {
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17727 = args[2][11 * steps + ((cycle - 0) & mask)];
        assert(x17727 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17728 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x17728 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17729 = args[2][13 * steps + ((cycle - 0) & mask)];
        assert(x17729 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17730 = args[2][14 * steps + ((cycle - 0) & mask)];
        assert(x17730 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17731 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x17731 != Fp::invalid());
        host_args.at(0) = x17727;
        host_args.at(1) = x17728;
        host_args.at(2) = x17729;
        host_args.at(3) = x17730;
        host_args.at(4) = x17731;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17732 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x17732 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17733 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x17733 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17734 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x17734 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17735 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x17735 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_fini(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17736 = args[2][20 * steps + ((cycle - 0) & mask)];
        assert(x17736 != Fp::invalid());
        host_args.at(0) = x17732;
        host_args.at(1) = x17733;
        host_args.at(2) = x17734;
        host_args.at(3) = x17735;
        host_args.at(4) = x17736;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x17737 = args[0][14 * steps + ((cycle - 0) & mask)];
    assert(x17737 != Fp::invalid());
    if (x17737 != 0) {
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17738 = args[2][11 * steps + ((cycle - 0) & mask)];
        assert(x17738 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17739 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x17739 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17740 = args[2][13 * steps + ((cycle - 0) & mask)];
        assert(x17740 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17741 = args[2][14 * steps + ((cycle - 0) & mask)];
        assert(x17741 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17742 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x17742 != Fp::invalid());
        host_args.at(0) = x17738;
        host_args.at(1) = x17739;
        host_args.at(2) = x17740;
        host_args.at(3) = x17741;
        host_args.at(4) = x17742;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17743 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x17743 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17744 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x17744 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17745 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x17745 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17746 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x17746 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_load(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17747 = args[2][20 * steps + ((cycle - 0) & mask)];
        assert(x17747 != Fp::invalid());
        host_args.at(0) = x17743;
        host_args.at(1) = x17744;
        host_args.at(2) = x17745;
        host_args.at(3) = x17746;
        host_args.at(4) = x17747;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x17748 = args[0][15 * steps + ((cycle - 0) & mask)];
    assert(x17748 != Fp::invalid());
    if (x17748 != 0) {
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17749 = args[2][11 * steps + ((cycle - 0) & mask)];
        assert(x17749 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17750 = args[2][12 * steps + ((cycle - 0) & mask)];
        assert(x17750 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17751 = args[2][13 * steps + ((cycle - 0) & mask)];
        assert(x17751 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17752 = args[2][14 * steps + ((cycle - 0) & mask)];
        assert(x17752 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17753 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x17753 != Fp::invalid());
        host_args.at(0) = x17749;
        host_args.at(1) = x17750;
        host_args.at(2) = x17751;
        host_args.at(3) = x17752;
        host_args.at(4) = x17753;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17754 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x17754 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17755 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x17755 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17756 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x17756 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17757 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x17757 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/sha_mix(recursion::ShaWrap)/sha_cycle(recursion::ShaCycle)/recursion::WomBody/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17758 = args[2][20 * steps + ((cycle - 0) & mask)];
        assert(x17758 != Fp::invalid());
        host_args.at(0) = x17754;
        host_args.at(1) = x17755;
        host_args.at(2) = x17756;
        host_args.at(3) = x17757;
        host_args.at(4) = x17758;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x17759 = args[0][16 * steps + ((cycle - 0) & mask)];
    assert(x17759 != Fp::invalid());
    if (x17759 != 0) {
      {
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17760 = args[2][15 * steps + ((cycle - 0) & mask)];
        assert(x17760 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17761 = args[2][16 * steps + ((cycle - 0) & mask)];
        assert(x17761 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17762 = args[2][17 * steps + ((cycle - 0) & mask)];
        assert(x17762 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17763 = args[2][18 * steps + ((cycle - 0) & mask)];
        assert(x17763 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17764 = args[2][19 * steps + ((cycle - 0) & mask)];
        assert(x17764 != Fp::invalid());
        host_args.at(0) = x17760;
        host_args.at(1) = x17761;
        host_args.at(2) = x17762;
        host_args.at(3) = x17763;
        host_args.at(4) = x17764;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17765 = args[2][20 * steps + ((cycle - 0) & mask)];
        assert(x17765 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17766 = args[2][21 * steps + ((cycle - 0) & mask)];
        assert(x17766 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17767 = args[2][22 * steps + ((cycle - 0) & mask)];
        assert(x17767 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17768 = args[2][23 * steps + ((cycle - 0) & mask)];
        assert(x17768 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17769 = args[2][24 * steps + ((cycle - 0) & mask)];
        assert(x17769 != Fp::invalid());
        host_args.at(0) = x17765;
        host_args.at(1) = x17766;
        host_args.at(2) = x17767;
        host_args.at(3) = x17768;
        host_args.at(4) = x17769;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17770 = args[2][25 * steps + ((cycle - 0) & mask)];
        assert(x17770 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17771 = args[2][26 * steps + ((cycle - 0) & mask)];
        assert(x17771 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17772 = args[2][27 * steps + ((cycle - 0) & mask)];
        assert(x17772 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17773 = args[2][28 * steps + ((cycle - 0) & mask)];
        assert(x17773 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17774 = args[2][29 * steps + ((cycle - 0) & mask)];
        assert(x17774 != Fp::invalid());
        host_args.at(0) = x17770;
        host_args.at(1) = x17771;
        host_args.at(2) = x17772;
        host_args.at(3) = x17773;
        host_args.at(4) = x17774;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
        auto x17775 = args[2][30 * steps + ((cycle - 0) & mask)];
        assert(x17775 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17776 = args[2][31 * steps + ((cycle - 0) & mask)];
        assert(x17776 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17777 = args[2][32 * steps + ((cycle - 0) & mask)];
        assert(x17777 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17778 = args[2][33 * steps + ((cycle - 0) & mask)];
        assert(x17778 != Fp::invalid());
        // loc("top(recursion::Top)/mux(Mux)/macro_ops(recursion::MacroOp)/mux(Mux)/set_global(recursion::SetGlobal)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
        auto x17779 = args[2][34 * steps + ((cycle - 0) & mask)];
        assert(x17779 != Fp::invalid());
        host_args.at(0) = x17775;
        host_args.at(1) = x17776;
        host_args.at(2) = x17777;
        host_args.at(3) = x17778;
        host_args.at(4) = x17779;
        host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      }
    }
  }
  if (x10821 != 0) {
    {
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17780 = args[2][5 * steps + ((cycle - 0) & mask)];
      assert(x17780 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17781 = args[2][6 * steps + ((cycle - 0) & mask)];
      assert(x17781 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17782 = args[2][7 * steps + ((cycle - 0) & mask)];
      assert(x17782 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17783 = args[2][8 * steps + ((cycle - 0) & mask)];
      assert(x17783 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17784 = args[2][9 * steps + ((cycle - 0) & mask)];
      assert(x17784 != Fp::invalid());
      host_args.at(0) = x17780;
      host_args.at(1) = x17781;
      host_args.at(2) = x17782;
      host_args.at(3) = x17783;
      host_args.at(4) = x17784;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17785 = args[2][10 * steps + ((cycle - 0) & mask)];
      assert(x17785 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17786 = args[2][11 * steps + ((cycle - 0) & mask)];
      assert(x17786 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17787 = args[2][12 * steps + ((cycle - 0) & mask)];
      assert(x17787 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17788 = args[2][13 * steps + ((cycle - 0) & mask)];
      assert(x17788 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17789 = args[2][14 * steps + ((cycle - 0) & mask)];
      assert(x17789 != Fp::invalid());
      host_args.at(0) = x17785;
      host_args.at(1) = x17786;
      host_args.at(2) = x17787;
      host_args.at(3) = x17788;
      host_args.at(4) = x17789;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17790 = args[2][15 * steps + ((cycle - 0) & mask)];
      assert(x17790 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17791 = args[2][16 * steps + ((cycle - 0) & mask)];
      assert(x17791 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17792 = args[2][17 * steps + ((cycle - 0) & mask)];
      assert(x17792 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17793 = args[2][18 * steps + ((cycle - 0) & mask)];
      assert(x17793 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17794 = args[2][19 * steps + ((cycle - 0) & mask)];
      assert(x17794 != Fp::invalid());
      host_args.at(0) = x17790;
      host_args.at(1) = x17791;
      host_args.at(2) = x17792;
      host_args.at(3) = x17793;
      host_args.at(4) = x17794;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17795 = args[2][20 * steps + ((cycle - 0) & mask)];
      assert(x17795 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17796 = args[2][21 * steps + ((cycle - 0) & mask)];
      assert(x17796 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17797 = args[2][22 * steps + ((cycle - 0) & mask)];
      assert(x17797 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17798 = args[2][23 * steps + ((cycle - 0) & mask)];
      assert(x17798 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17799 = args[2][24 * steps + ((cycle - 0) & mask)];
      assert(x17799 != Fp::invalid());
      host_args.at(0) = x17795;
      host_args.at(1) = x17796;
      host_args.at(2) = x17797;
      host_args.at(3) = x17798;
      host_args.at(4) = x17799;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17800 = args[2][25 * steps + ((cycle - 0) & mask)];
      assert(x17800 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17801 = args[2][26 * steps + ((cycle - 0) & mask)];
      assert(x17801 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17802 = args[2][27 * steps + ((cycle - 0) & mask)];
      assert(x17802 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17803 = args[2][28 * steps + ((cycle - 0) & mask)];
      assert(x17803 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17804 = args[2][29 * steps + ((cycle - 0) & mask)];
      assert(x17804 != Fp::invalid());
      host_args.at(0) = x17800;
      host_args.at(1) = x17801;
      host_args.at(2) = x17802;
      host_args.at(3) = x17803;
      host_args.at(4) = x17804;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17805 = args[2][30 * steps + ((cycle - 0) & mask)];
      assert(x17805 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17806 = args[2][31 * steps + ((cycle - 0) & mask)];
      assert(x17806 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17807 = args[2][32 * steps + ((cycle - 0) & mask)];
      assert(x17807 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17808 = args[2][33 * steps + ((cycle - 0) & mask)];
      assert(x17808 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17809 = args[2][34 * steps + ((cycle - 0) & mask)];
      assert(x17809 != Fp::invalid());
      host_args.at(0) = x17805;
      host_args.at(1) = x17806;
      host_args.at(2) = x17807;
      host_args.at(3) = x17808;
      host_args.at(4) = x17809;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17810 = args[2][35 * steps + ((cycle - 0) & mask)];
      assert(x17810 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17811 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x17811 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17812 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x17812 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17813 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x17813 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17814 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x17814 != Fp::invalid());
      host_args.at(0) = x17810;
      host_args.at(1) = x17811;
      host_args.at(2) = x17812;
      host_args.at(3) = x17813;
      host_args.at(4) = x17814;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17815 = args[2][40 * steps + ((cycle - 0) & mask)];
      assert(x17815 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17816 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x17816 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17817 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x17817 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17818 = args[2][43 * steps + ((cycle - 0) & mask)];
      assert(x17818 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17819 = args[2][44 * steps + ((cycle - 0) & mask)];
      assert(x17819 != Fp::invalid());
      host_args.at(0) = x17815;
      host_args.at(1) = x17816;
      host_args.at(2) = x17817;
      host_args.at(3) = x17818;
      host_args.at(4) = x17819;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17820 = args[2][45 * steps + ((cycle - 0) & mask)];
      assert(x17820 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17821 = args[2][46 * steps + ((cycle - 0) & mask)];
      assert(x17821 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17822 = args[2][47 * steps + ((cycle - 0) & mask)];
      assert(x17822 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17823 = args[2][48 * steps + ((cycle - 0) & mask)];
      assert(x17823 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_load(recursion::PoseidonLoad)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17824 = args[2][49 * steps + ((cycle - 0) & mask)];
      assert(x17824 != Fp::invalid());
      host_args.at(0) = x17820;
      host_args.at(1) = x17821;
      host_args.at(2) = x17822;
      host_args.at(3) = x17823;
      host_args.at(4) = x17824;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
    }
  }
  if (x17502 != 0) {
    {
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17825 = args[2][5 * steps + ((cycle - 0) & mask)];
      assert(x17825 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17826 = args[2][6 * steps + ((cycle - 0) & mask)];
      assert(x17826 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17827 = args[2][7 * steps + ((cycle - 0) & mask)];
      assert(x17827 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17828 = args[2][8 * steps + ((cycle - 0) & mask)];
      assert(x17828 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17829 = args[2][9 * steps + ((cycle - 0) & mask)];
      assert(x17829 != Fp::invalid());
      host_args.at(0) = x17825;
      host_args.at(1) = x17826;
      host_args.at(2) = x17827;
      host_args.at(3) = x17828;
      host_args.at(4) = x17829;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17830 = args[2][10 * steps + ((cycle - 0) & mask)];
      assert(x17830 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17831 = args[2][11 * steps + ((cycle - 0) & mask)];
      assert(x17831 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17832 = args[2][12 * steps + ((cycle - 0) & mask)];
      assert(x17832 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17833 = args[2][13 * steps + ((cycle - 0) & mask)];
      assert(x17833 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17834 = args[2][14 * steps + ((cycle - 0) & mask)];
      assert(x17834 != Fp::invalid());
      host_args.at(0) = x17830;
      host_args.at(1) = x17831;
      host_args.at(2) = x17832;
      host_args.at(3) = x17833;
      host_args.at(4) = x17834;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17835 = args[2][15 * steps + ((cycle - 0) & mask)];
      assert(x17835 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17836 = args[2][16 * steps + ((cycle - 0) & mask)];
      assert(x17836 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17837 = args[2][17 * steps + ((cycle - 0) & mask)];
      assert(x17837 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17838 = args[2][18 * steps + ((cycle - 0) & mask)];
      assert(x17838 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17839 = args[2][19 * steps + ((cycle - 0) & mask)];
      assert(x17839 != Fp::invalid());
      host_args.at(0) = x17835;
      host_args.at(1) = x17836;
      host_args.at(2) = x17837;
      host_args.at(3) = x17838;
      host_args.at(4) = x17839;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17840 = args[2][20 * steps + ((cycle - 0) & mask)];
      assert(x17840 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17841 = args[2][21 * steps + ((cycle - 0) & mask)];
      assert(x17841 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17842 = args[2][22 * steps + ((cycle - 0) & mask)];
      assert(x17842 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17843 = args[2][23 * steps + ((cycle - 0) & mask)];
      assert(x17843 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17844 = args[2][24 * steps + ((cycle - 0) & mask)];
      assert(x17844 != Fp::invalid());
      host_args.at(0) = x17840;
      host_args.at(1) = x17841;
      host_args.at(2) = x17842;
      host_args.at(3) = x17843;
      host_args.at(4) = x17844;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17845 = args[2][25 * steps + ((cycle - 0) & mask)];
      assert(x17845 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17846 = args[2][26 * steps + ((cycle - 0) & mask)];
      assert(x17846 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17847 = args[2][27 * steps + ((cycle - 0) & mask)];
      assert(x17847 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17848 = args[2][28 * steps + ((cycle - 0) & mask)];
      assert(x17848 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17849 = args[2][29 * steps + ((cycle - 0) & mask)];
      assert(x17849 != Fp::invalid());
      host_args.at(0) = x17845;
      host_args.at(1) = x17846;
      host_args.at(2) = x17847;
      host_args.at(3) = x17848;
      host_args.at(4) = x17849;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17850 = args[2][30 * steps + ((cycle - 0) & mask)];
      assert(x17850 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17851 = args[2][31 * steps + ((cycle - 0) & mask)];
      assert(x17851 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17852 = args[2][32 * steps + ((cycle - 0) & mask)];
      assert(x17852 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17853 = args[2][33 * steps + ((cycle - 0) & mask)];
      assert(x17853 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17854 = args[2][34 * steps + ((cycle - 0) & mask)];
      assert(x17854 != Fp::invalid());
      host_args.at(0) = x17850;
      host_args.at(1) = x17851;
      host_args.at(2) = x17852;
      host_args.at(3) = x17853;
      host_args.at(4) = x17854;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17855 = args[2][35 * steps + ((cycle - 0) & mask)];
      assert(x17855 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17856 = args[2][36 * steps + ((cycle - 0) & mask)];
      assert(x17856 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17857 = args[2][37 * steps + ((cycle - 0) & mask)];
      assert(x17857 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17858 = args[2][38 * steps + ((cycle - 0) & mask)];
      assert(x17858 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17859 = args[2][39 * steps + ((cycle - 0) & mask)];
      assert(x17859 != Fp::invalid());
      host_args.at(0) = x17855;
      host_args.at(1) = x17856;
      host_args.at(2) = x17857;
      host_args.at(3) = x17858;
      host_args.at(4) = x17859;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17860 = args[2][40 * steps + ((cycle - 0) & mask)];
      assert(x17860 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17861 = args[2][41 * steps + ((cycle - 0) & mask)];
      assert(x17861 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17862 = args[2][42 * steps + ((cycle - 0) & mask)];
      assert(x17862 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17863 = args[2][43 * steps + ((cycle - 0) & mask)];
      assert(x17863 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17864 = args[2][44 * steps + ((cycle - 0) & mask)];
      assert(x17864 != Fp::invalid());
      host_args.at(0) = x17860;
      host_args.at(1) = x17861;
      host_args.at(2) = x17862;
      host_args.at(3) = x17863;
      host_args.at(4) = x17864;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/addr(Reg)"("zirgen/circuit/recursion/wom.cpp":22:27))
      auto x17865 = args[2][45 * steps + ((cycle - 0) & mask)];
      assert(x17865 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[0](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17866 = args[2][46 * steps + ((cycle - 0) & mask)];
      assert(x17866 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[1](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17867 = args[2][47 * steps + ((cycle - 0) & mask)];
      assert(x17867 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[2](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17868 = args[2][48 * steps + ((cycle - 0) & mask)];
      assert(x17868 != Fp::invalid());
      // loc("top(recursion::Top)/mux(Mux)/poseidon_store(recursion::PoseidonStore)/wom_body(recursion::WomBody)/plonk_body(PlonkBody)/recursion::impl::WomPlonkElement/data[3](Reg)"("zirgen/circuit/recursion/wom.cpp":42:14))
      auto x17869 = args[2][49 * steps + ((cycle - 0) & mask)];
      assert(x17869 != Fp::invalid());
      host_args.at(0) = x17865;
      host_args.at(1) = x17866;
      host_args.at(2) = x17867;
      host_args.at(3) = x17868;
      host_args.at(4) = x17869;
      host(ctx, "plonkWrite", "wom", host_args.data(), 5, host_outs.data(), 0);
    }
  }
  return x2353;
}

} // namespace risc0::circuit::recursion
// clang-format on
