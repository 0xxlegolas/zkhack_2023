[package]
name = "risc0-zkvm"
description = "RISC Zero zero-knowledge VM"
version = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }

[[bench]]
name = "fib"
harness = false
required-features = ["prove"]

[[bench]]
name = "guest_run"
harness = false

[[example]]
name = "fib"
required-features = ["prove"]

[[example]]
name = "loop"
required-features = ["prove"]

[[example]]
name = "recursion"
required-features = ["prove"]

[build-dependencies]
prost-build = { version = "0.12", optional = true }
protobuf-src = { version = "1.1", optional = true }

[dependencies]
anyhow = { version = "1.0", default-features = false }
bytemuck = { version = "1.13", features = ["extern_crate_alloc"] }
cfg-if = "1.0"
getrandom = { version = "0.2", features = ["custom"] }
hex = { version = "0.4.3", default-features = false, features = ["alloc"] }
risc0-core = { workspace = true }
risc0-zkp = { workspace = true }
risc0-zkvm-platform = { workspace = true, features = [
  "rust-runtime",
  "export-getrandom",
] }
rrs-lib = "0.1"
semver = { version = "1.0", default-features = false }
serde = { version = "1.0", default-features = false, features = [
  "alloc",
  "derive",
] }

# TODO(nils): Change these `target_os` checks to `target_vendor` checks when we
# have a real target triple.
#
# Host dependencies
[target.'cfg(not(target_os = "zkvm"))'.dependencies]
addr2line = { version = "0.21", features = ["rustc-demangle"], optional = true }
bincode = { version = "1.3", optional = true }
bonsai-sdk = { workspace = true, optional = true }
bytes = { version = "1.4", features = ["serde"], optional = true }
rayon = { version = "1.5", optional = true }
risc0-binfmt = { workspace = true }
risc0-circuit-recursion = { workspace = true }
risc0-circuit-rv32im = { workspace = true }
risc0-core = { workspace = true }
rustc-demangle = { version = "0.1", optional = true }
generic-array = { version = "0.14", default-features = false, optional = true }
getrandom = { version = "0.2", optional = true }
gimli = { version = "0.28", optional = true }
goblin = { version = "0.7", optional = true }
object = { version = "0.32", optional = true }
lazy-regex = { version = "2.4", optional = true }
log = "0.4"
crypto-bigint = { version = "0.5", default-features = false, features = [
  "rand",
], optional = true }
num-derive = "0.4"
num-traits = { version = "0.2", default-features = false, optional = true }
prost = { version = "0.12", optional = true }
sha2 = { version = "0.10", optional = true }
tempfile = { version = "3", optional = true }
tracing = { version = "0.1", default-features = false, features = [
  "attributes",
] }
typetag = { version = "0.2", optional = true }

[dev-dependencies]
clap = { version = "4", features = ["derive"] }
criterion = { version = "0.5", features = ["html_reports"] }
human-repr = "1.0"
rand = "0.8"
tracing-forest = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

[target.'cfg(not(target_os = "zkvm"))'.dev-dependencies]
env_logger = "0.10"
flate2 = "1.0"
risc0-zkvm-methods = { path = "methods" }
serde_json = "1.0"
serial_test = "2.0"
tar = "0.4"
tempfile = "3"
test-log = { version = "0.2", features = ["trace"] }

[features]
client = [
  "dep:bincode",
  "dep:bonsai-sdk",
  "dep:bytes",
  "dep:prost",
  "dep:prost-build",
  "dep:protobuf-src",
  "std",
]
cuda = [
  "prove",
  "risc0-circuit-recursion/cuda",
  "risc0-circuit-rv32im/cuda",
  "risc0-zkp/cuda",
]
dual = []
metal = [
  "prove",
  "risc0-circuit-recursion/metal",
  "risc0-circuit-rv32im/metal",
  "risc0-zkp/metal",
]
default = ["client"]
disable-dev-mode = []
# This flag uses the docker environment to build test guests such as multi-test
# to ensure accurate cycle and segment counts. Tests that have been gated on
# this flag measure cycles and segments. Without this flag, the rust build
# system will generate binaries that not identical across all architectures.
# While this is acceptable for most tests, the tests counting cycles and
# segments will fail intermittently.
docker = []
# note: cfg!(feature = "fault-proof") is used as a temporary measure in addition
# to it being used to expose functionality to the fault checker.
fault-proof = []
profiler = [
  "dep:addr2line",
  "dep:gimli",
  "dep:object",
  "dep:prost",
  "dep:prost-build",
  "dep:protobuf-src",
  "dep:goblin",
  "dep:rustc-demangle",
]
prove = [
  "client",
  "fault-proof",
  "dep:addr2line",
  "dep:bincode",
  "dep:bytes",
  "dep:crypto-bigint",
  "dep:num-traits",
  "dep:generic-array",
  "dep:getrandom",
  "dep:lazy-regex",
  "dep:prost",
  "dep:prost-build",
  "dep:protobuf-src",
  "dep:rayon",
  "dep:sha2",
  "dep:tempfile",
  "dep:typetag",
  "risc0-circuit-recursion/prove",
  "risc0-circuit-rv32im/prove",
  "risc0-zkp/prove",
  "std",
]
std = [
  "anyhow/std",
  "num-traits?/std",
  "risc0-binfmt/std",
  "risc0-circuit-recursion/std",
  "risc0-circuit-rv32im/std",
  "risc0-zkp/std",
  "serde/std",
]
