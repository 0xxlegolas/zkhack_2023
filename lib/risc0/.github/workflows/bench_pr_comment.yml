name: Create Benchmark PR comment

on:
  workflow_run:
    workflows: ["Benchmark Check"]
    types:
      - completed

jobs:
  create-comment:
    runs-on: ubuntu-latest
    # Only run if the upstream workflow was successful.
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "md-output"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{ runner.temp }}/md-output.zip', Buffer.from(download.data));

      - name: unzip benchmark markdown files
        run: |
          mkdir -p ${{ runner.temp }}/pr-output/
          unzip -o ${{ runner.temp }}/md-output.zip -d ${{ runner.temp }}/pr-output/

      - name: Merge output files
        shell: bash
        run: sed h ${{ runner.temp }}/pr-output/*-output.md > ${{ runner.temp }}/pr-output/merged.md
        id: download

      - uses: actions/github-script@v3
        name: Create PR comment
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            var fs = require('fs');
            var body = fs.readFileSync("${{ runner.temp }}/pr-output/merged.md", 'utf8');
            var issue_number = Number(fs.readFileSync("${{ runner.temp }}/pr-output/NR"));
            github.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
